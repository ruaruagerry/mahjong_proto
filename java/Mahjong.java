// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mahjong.proto

public final class Mahjong {
  private Mahjong() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface LoginReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string nick = 1;
    /**
     * <code>optional string nick = 1;</code>
     *
     * <pre>
     * 用户昵称，正常和手机名称保持一致
     * </pre>
     */
    boolean hasNick();
    /**
     * <code>optional string nick = 1;</code>
     *
     * <pre>
     * 用户昵称，正常和手机名称保持一致
     * </pre>
     */
    java.lang.String getNick();
    /**
     * <code>optional string nick = 1;</code>
     *
     * <pre>
     * 用户昵称，正常和手机名称保持一致
     * </pre>
     */
    com.google.protobuf.ByteString
        getNickBytes();

    // optional string uuid = 2;
    /**
     * <code>optional string uuid = 2;</code>
     */
    boolean hasUuid();
    /**
     * <code>optional string uuid = 2;</code>
     */
    java.lang.String getUuid();
    /**
     * <code>optional string uuid = 2;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    // optional string sign = 3;
    /**
     * <code>optional string sign = 3;</code>
     *
     * <pre>
     * 签名md5 (secret &amp; uuid &amp; channel)
     * </pre>
     */
    boolean hasSign();
    /**
     * <code>optional string sign = 3;</code>
     *
     * <pre>
     * 签名md5 (secret &amp; uuid &amp; channel)
     * </pre>
     */
    java.lang.String getSign();
    /**
     * <code>optional string sign = 3;</code>
     *
     * <pre>
     * 签名md5 (secret &amp; uuid &amp; channel)
     * </pre>
     */
    com.google.protobuf.ByteString
        getSignBytes();

    // optional string channel = 4;
    /**
     * <code>optional string channel = 4;</code>
     *
     * <pre>
     * 渠道号
     * </pre>
     */
    boolean hasChannel();
    /**
     * <code>optional string channel = 4;</code>
     *
     * <pre>
     * 渠道号
     * </pre>
     */
    java.lang.String getChannel();
    /**
     * <code>optional string channel = 4;</code>
     *
     * <pre>
     * 渠道号
     * </pre>
     */
    com.google.protobuf.ByteString
        getChannelBytes();

    // optional int32 version = 5;
    /**
     * <code>optional int32 version = 5;</code>
     *
     * <pre>
     * 版本号
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>optional int32 version = 5;</code>
     *
     * <pre>
     * 版本号
     * </pre>
     */
    int getVersion();

    // optional string os = 6;
    /**
     * <code>optional string os = 6;</code>
     */
    boolean hasOs();
    /**
     * <code>optional string os = 6;</code>
     */
    java.lang.String getOs();
    /**
     * <code>optional string os = 6;</code>
     */
    com.google.protobuf.ByteString
        getOsBytes();

    // optional bool is_register = 7;
    /**
     * <code>optional bool is_register = 7;</code>
     *
     * <pre>
     * 审核状态下生效，标识是审核状态下的登录和注册消息
     * </pre>
     */
    boolean hasIsRegister();
    /**
     * <code>optional bool is_register = 7;</code>
     *
     * <pre>
     * 审核状态下生效，标识是审核状态下的登录和注册消息
     * </pre>
     */
    boolean getIsRegister();

    // optional string extra_username = 8;
    /**
     * <code>optional string extra_username = 8;</code>
     *
     * <pre>
     * 审核状态下生效
     * </pre>
     */
    boolean hasExtraUsername();
    /**
     * <code>optional string extra_username = 8;</code>
     *
     * <pre>
     * 审核状态下生效
     * </pre>
     */
    java.lang.String getExtraUsername();
    /**
     * <code>optional string extra_username = 8;</code>
     *
     * <pre>
     * 审核状态下生效
     * </pre>
     */
    com.google.protobuf.ByteString
        getExtraUsernameBytes();

    // optional string extra_password = 9;
    /**
     * <code>optional string extra_password = 9;</code>
     *
     * <pre>
     * 审核状态下生效
     * </pre>
     */
    boolean hasExtraPassword();
    /**
     * <code>optional string extra_password = 9;</code>
     *
     * <pre>
     * 审核状态下生效
     * </pre>
     */
    java.lang.String getExtraPassword();
    /**
     * <code>optional string extra_password = 9;</code>
     *
     * <pre>
     * 审核状态下生效
     * </pre>
     */
    com.google.protobuf.ByteString
        getExtraPasswordBytes();
  }
  /**
   * Protobuf type {@code LoginReq}
   *
   * <pre>
   * 游客登录 1001
   * </pre>
   */
  public static final class LoginReq extends
      com.google.protobuf.GeneratedMessage
      implements LoginReqOrBuilder {
    // Use LoginReq.newBuilder() to construct.
    private LoginReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoginReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoginReq defaultInstance;
    public static LoginReq getDefaultInstance() {
      return defaultInstance;
    }

    public LoginReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoginReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              nick_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              uuid_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              sign_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              channel_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              version_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              os_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              isRegister_ = input.readBool();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              extraUsername_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              extraPassword_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_LoginReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_LoginReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.LoginReq.class, Mahjong.LoginReq.Builder.class);
    }

    public static com.google.protobuf.Parser<LoginReq> PARSER =
        new com.google.protobuf.AbstractParser<LoginReq>() {
      public LoginReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoginReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LoginReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string nick = 1;
    public static final int NICK_FIELD_NUMBER = 1;
    private java.lang.Object nick_;
    /**
     * <code>optional string nick = 1;</code>
     *
     * <pre>
     * 用户昵称，正常和手机名称保持一致
     * </pre>
     */
    public boolean hasNick() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string nick = 1;</code>
     *
     * <pre>
     * 用户昵称，正常和手机名称保持一致
     * </pre>
     */
    public java.lang.String getNick() {
      java.lang.Object ref = nick_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nick_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nick = 1;</code>
     *
     * <pre>
     * 用户昵称，正常和手机名称保持一致
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNickBytes() {
      java.lang.Object ref = nick_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nick_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string uuid = 2;
    public static final int UUID_FIELD_NUMBER = 2;
    private java.lang.Object uuid_;
    /**
     * <code>optional string uuid = 2;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string uuid = 2;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uuid = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string sign = 3;
    public static final int SIGN_FIELD_NUMBER = 3;
    private java.lang.Object sign_;
    /**
     * <code>optional string sign = 3;</code>
     *
     * <pre>
     * 签名md5 (secret &amp; uuid &amp; channel)
     * </pre>
     */
    public boolean hasSign() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string sign = 3;</code>
     *
     * <pre>
     * 签名md5 (secret &amp; uuid &amp; channel)
     * </pre>
     */
    public java.lang.String getSign() {
      java.lang.Object ref = sign_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sign_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sign = 3;</code>
     *
     * <pre>
     * 签名md5 (secret &amp; uuid &amp; channel)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSignBytes() {
      java.lang.Object ref = sign_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sign_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string channel = 4;
    public static final int CHANNEL_FIELD_NUMBER = 4;
    private java.lang.Object channel_;
    /**
     * <code>optional string channel = 4;</code>
     *
     * <pre>
     * 渠道号
     * </pre>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string channel = 4;</code>
     *
     * <pre>
     * 渠道号
     * </pre>
     */
    public java.lang.String getChannel() {
      java.lang.Object ref = channel_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channel_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel = 4;</code>
     *
     * <pre>
     * 渠道号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getChannelBytes() {
      java.lang.Object ref = channel_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 version = 5;
    public static final int VERSION_FIELD_NUMBER = 5;
    private int version_;
    /**
     * <code>optional int32 version = 5;</code>
     *
     * <pre>
     * 版本号
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 version = 5;</code>
     *
     * <pre>
     * 版本号
     * </pre>
     */
    public int getVersion() {
      return version_;
    }

    // optional string os = 6;
    public static final int OS_FIELD_NUMBER = 6;
    private java.lang.Object os_;
    /**
     * <code>optional string os = 6;</code>
     */
    public boolean hasOs() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string os = 6;</code>
     */
    public java.lang.String getOs() {
      java.lang.Object ref = os_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          os_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string os = 6;</code>
     */
    public com.google.protobuf.ByteString
        getOsBytes() {
      java.lang.Object ref = os_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        os_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool is_register = 7;
    public static final int IS_REGISTER_FIELD_NUMBER = 7;
    private boolean isRegister_;
    /**
     * <code>optional bool is_register = 7;</code>
     *
     * <pre>
     * 审核状态下生效，标识是审核状态下的登录和注册消息
     * </pre>
     */
    public boolean hasIsRegister() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool is_register = 7;</code>
     *
     * <pre>
     * 审核状态下生效，标识是审核状态下的登录和注册消息
     * </pre>
     */
    public boolean getIsRegister() {
      return isRegister_;
    }

    // optional string extra_username = 8;
    public static final int EXTRA_USERNAME_FIELD_NUMBER = 8;
    private java.lang.Object extraUsername_;
    /**
     * <code>optional string extra_username = 8;</code>
     *
     * <pre>
     * 审核状态下生效
     * </pre>
     */
    public boolean hasExtraUsername() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string extra_username = 8;</code>
     *
     * <pre>
     * 审核状态下生效
     * </pre>
     */
    public java.lang.String getExtraUsername() {
      java.lang.Object ref = extraUsername_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          extraUsername_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string extra_username = 8;</code>
     *
     * <pre>
     * 审核状态下生效
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExtraUsernameBytes() {
      java.lang.Object ref = extraUsername_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        extraUsername_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string extra_password = 9;
    public static final int EXTRA_PASSWORD_FIELD_NUMBER = 9;
    private java.lang.Object extraPassword_;
    /**
     * <code>optional string extra_password = 9;</code>
     *
     * <pre>
     * 审核状态下生效
     * </pre>
     */
    public boolean hasExtraPassword() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string extra_password = 9;</code>
     *
     * <pre>
     * 审核状态下生效
     * </pre>
     */
    public java.lang.String getExtraPassword() {
      java.lang.Object ref = extraPassword_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          extraPassword_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string extra_password = 9;</code>
     *
     * <pre>
     * 审核状态下生效
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExtraPasswordBytes() {
      java.lang.Object ref = extraPassword_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        extraPassword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      nick_ = "";
      uuid_ = "";
      sign_ = "";
      channel_ = "";
      version_ = 0;
      os_ = "";
      isRegister_ = false;
      extraUsername_ = "";
      extraPassword_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNickBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUuidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSignBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getChannelBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, version_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getOsBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, isRegister_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getExtraUsernameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getExtraPasswordBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNickBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUuidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSignBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getChannelBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, version_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getOsBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isRegister_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getExtraUsernameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getExtraPasswordBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.LoginReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.LoginReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.LoginReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.LoginReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.LoginReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.LoginReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.LoginReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.LoginReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.LoginReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.LoginReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.LoginReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LoginReq}
     *
     * <pre>
     * 游客登录 1001
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.LoginReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_LoginReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_LoginReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.LoginReq.class, Mahjong.LoginReq.Builder.class);
      }

      // Construct using Mahjong.LoginReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        nick_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        sign_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        channel_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        os_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        isRegister_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        extraUsername_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        extraPassword_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_LoginReq_descriptor;
      }

      public Mahjong.LoginReq getDefaultInstanceForType() {
        return Mahjong.LoginReq.getDefaultInstance();
      }

      public Mahjong.LoginReq build() {
        Mahjong.LoginReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.LoginReq buildPartial() {
        Mahjong.LoginReq result = new Mahjong.LoginReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nick_ = nick_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sign_ = sign_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.os_ = os_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isRegister_ = isRegister_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.extraUsername_ = extraUsername_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.extraPassword_ = extraPassword_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.LoginReq) {
          return mergeFrom((Mahjong.LoginReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.LoginReq other) {
        if (other == Mahjong.LoginReq.getDefaultInstance()) return this;
        if (other.hasNick()) {
          bitField0_ |= 0x00000001;
          nick_ = other.nick_;
          onChanged();
        }
        if (other.hasUuid()) {
          bitField0_ |= 0x00000002;
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasSign()) {
          bitField0_ |= 0x00000004;
          sign_ = other.sign_;
          onChanged();
        }
        if (other.hasChannel()) {
          bitField0_ |= 0x00000008;
          channel_ = other.channel_;
          onChanged();
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasOs()) {
          bitField0_ |= 0x00000020;
          os_ = other.os_;
          onChanged();
        }
        if (other.hasIsRegister()) {
          setIsRegister(other.getIsRegister());
        }
        if (other.hasExtraUsername()) {
          bitField0_ |= 0x00000080;
          extraUsername_ = other.extraUsername_;
          onChanged();
        }
        if (other.hasExtraPassword()) {
          bitField0_ |= 0x00000100;
          extraPassword_ = other.extraPassword_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.LoginReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.LoginReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string nick = 1;
      private java.lang.Object nick_ = "";
      /**
       * <code>optional string nick = 1;</code>
       *
       * <pre>
       * 用户昵称，正常和手机名称保持一致
       * </pre>
       */
      public boolean hasNick() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string nick = 1;</code>
       *
       * <pre>
       * 用户昵称，正常和手机名称保持一致
       * </pre>
       */
      public java.lang.String getNick() {
        java.lang.Object ref = nick_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nick_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nick = 1;</code>
       *
       * <pre>
       * 用户昵称，正常和手机名称保持一致
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNickBytes() {
        java.lang.Object ref = nick_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nick_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nick = 1;</code>
       *
       * <pre>
       * 用户昵称，正常和手机名称保持一致
       * </pre>
       */
      public Builder setNick(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        nick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nick = 1;</code>
       *
       * <pre>
       * 用户昵称，正常和手机名称保持一致
       * </pre>
       */
      public Builder clearNick() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nick_ = getDefaultInstance().getNick();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nick = 1;</code>
       *
       * <pre>
       * 用户昵称，正常和手机名称保持一致
       * </pre>
       */
      public Builder setNickBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        nick_ = value;
        onChanged();
        return this;
      }

      // optional string uuid = 2;
      private java.lang.Object uuid_ = "";
      /**
       * <code>optional string uuid = 2;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        uuid_ = value;
        onChanged();
        return this;
      }

      // optional string sign = 3;
      private java.lang.Object sign_ = "";
      /**
       * <code>optional string sign = 3;</code>
       *
       * <pre>
       * 签名md5 (secret &amp; uuid &amp; channel)
       * </pre>
       */
      public boolean hasSign() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string sign = 3;</code>
       *
       * <pre>
       * 签名md5 (secret &amp; uuid &amp; channel)
       * </pre>
       */
      public java.lang.String getSign() {
        java.lang.Object ref = sign_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          sign_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sign = 3;</code>
       *
       * <pre>
       * 签名md5 (secret &amp; uuid &amp; channel)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSignBytes() {
        java.lang.Object ref = sign_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sign_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sign = 3;</code>
       *
       * <pre>
       * 签名md5 (secret &amp; uuid &amp; channel)
       * </pre>
       */
      public Builder setSign(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sign_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sign = 3;</code>
       *
       * <pre>
       * 签名md5 (secret &amp; uuid &amp; channel)
       * </pre>
       */
      public Builder clearSign() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sign_ = getDefaultInstance().getSign();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sign = 3;</code>
       *
       * <pre>
       * 签名md5 (secret &amp; uuid &amp; channel)
       * </pre>
       */
      public Builder setSignBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sign_ = value;
        onChanged();
        return this;
      }

      // optional string channel = 4;
      private java.lang.Object channel_ = "";
      /**
       * <code>optional string channel = 4;</code>
       *
       * <pre>
       * 渠道号
       * </pre>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string channel = 4;</code>
       *
       * <pre>
       * 渠道号
       * </pre>
       */
      public java.lang.String getChannel() {
        java.lang.Object ref = channel_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channel_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel = 4;</code>
       *
       * <pre>
       * 渠道号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getChannelBytes() {
        java.lang.Object ref = channel_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel = 4;</code>
       *
       * <pre>
       * 渠道号
       * </pre>
       */
      public Builder setChannel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel = 4;</code>
       *
       * <pre>
       * 渠道号
       * </pre>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        channel_ = getDefaultInstance().getChannel();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel = 4;</code>
       *
       * <pre>
       * 渠道号
       * </pre>
       */
      public Builder setChannelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        channel_ = value;
        onChanged();
        return this;
      }

      // optional int32 version = 5;
      private int version_ ;
      /**
       * <code>optional int32 version = 5;</code>
       *
       * <pre>
       * 版本号
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 version = 5;</code>
       *
       * <pre>
       * 版本号
       * </pre>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>optional int32 version = 5;</code>
       *
       * <pre>
       * 版本号
       * </pre>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000010;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 version = 5;</code>
       *
       * <pre>
       * 版本号
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000010);
        version_ = 0;
        onChanged();
        return this;
      }

      // optional string os = 6;
      private java.lang.Object os_ = "";
      /**
       * <code>optional string os = 6;</code>
       */
      public boolean hasOs() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string os = 6;</code>
       */
      public java.lang.String getOs() {
        java.lang.Object ref = os_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          os_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string os = 6;</code>
       */
      public com.google.protobuf.ByteString
          getOsBytes() {
        java.lang.Object ref = os_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          os_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string os = 6;</code>
       */
      public Builder setOs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        os_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string os = 6;</code>
       */
      public Builder clearOs() {
        bitField0_ = (bitField0_ & ~0x00000020);
        os_ = getDefaultInstance().getOs();
        onChanged();
        return this;
      }
      /**
       * <code>optional string os = 6;</code>
       */
      public Builder setOsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        os_ = value;
        onChanged();
        return this;
      }

      // optional bool is_register = 7;
      private boolean isRegister_ ;
      /**
       * <code>optional bool is_register = 7;</code>
       *
       * <pre>
       * 审核状态下生效，标识是审核状态下的登录和注册消息
       * </pre>
       */
      public boolean hasIsRegister() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool is_register = 7;</code>
       *
       * <pre>
       * 审核状态下生效，标识是审核状态下的登录和注册消息
       * </pre>
       */
      public boolean getIsRegister() {
        return isRegister_;
      }
      /**
       * <code>optional bool is_register = 7;</code>
       *
       * <pre>
       * 审核状态下生效，标识是审核状态下的登录和注册消息
       * </pre>
       */
      public Builder setIsRegister(boolean value) {
        bitField0_ |= 0x00000040;
        isRegister_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_register = 7;</code>
       *
       * <pre>
       * 审核状态下生效，标识是审核状态下的登录和注册消息
       * </pre>
       */
      public Builder clearIsRegister() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isRegister_ = false;
        onChanged();
        return this;
      }

      // optional string extra_username = 8;
      private java.lang.Object extraUsername_ = "";
      /**
       * <code>optional string extra_username = 8;</code>
       *
       * <pre>
       * 审核状态下生效
       * </pre>
       */
      public boolean hasExtraUsername() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string extra_username = 8;</code>
       *
       * <pre>
       * 审核状态下生效
       * </pre>
       */
      public java.lang.String getExtraUsername() {
        java.lang.Object ref = extraUsername_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          extraUsername_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string extra_username = 8;</code>
       *
       * <pre>
       * 审核状态下生效
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExtraUsernameBytes() {
        java.lang.Object ref = extraUsername_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          extraUsername_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string extra_username = 8;</code>
       *
       * <pre>
       * 审核状态下生效
       * </pre>
       */
      public Builder setExtraUsername(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        extraUsername_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string extra_username = 8;</code>
       *
       * <pre>
       * 审核状态下生效
       * </pre>
       */
      public Builder clearExtraUsername() {
        bitField0_ = (bitField0_ & ~0x00000080);
        extraUsername_ = getDefaultInstance().getExtraUsername();
        onChanged();
        return this;
      }
      /**
       * <code>optional string extra_username = 8;</code>
       *
       * <pre>
       * 审核状态下生效
       * </pre>
       */
      public Builder setExtraUsernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        extraUsername_ = value;
        onChanged();
        return this;
      }

      // optional string extra_password = 9;
      private java.lang.Object extraPassword_ = "";
      /**
       * <code>optional string extra_password = 9;</code>
       *
       * <pre>
       * 审核状态下生效
       * </pre>
       */
      public boolean hasExtraPassword() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string extra_password = 9;</code>
       *
       * <pre>
       * 审核状态下生效
       * </pre>
       */
      public java.lang.String getExtraPassword() {
        java.lang.Object ref = extraPassword_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          extraPassword_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string extra_password = 9;</code>
       *
       * <pre>
       * 审核状态下生效
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExtraPasswordBytes() {
        java.lang.Object ref = extraPassword_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          extraPassword_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string extra_password = 9;</code>
       *
       * <pre>
       * 审核状态下生效
       * </pre>
       */
      public Builder setExtraPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        extraPassword_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string extra_password = 9;</code>
       *
       * <pre>
       * 审核状态下生效
       * </pre>
       */
      public Builder clearExtraPassword() {
        bitField0_ = (bitField0_ & ~0x00000100);
        extraPassword_ = getDefaultInstance().getExtraPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string extra_password = 9;</code>
       *
       * <pre>
       * 审核状态下生效
       * </pre>
       */
      public Builder setExtraPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        extraPassword_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LoginReq)
    }

    static {
      defaultInstance = new LoginReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LoginReq)
  }

  public interface WeChatLoginReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string sign = 1;
    /**
     * <code>optional string sign = 1;</code>
     *
     * <pre>
     * 签名md5 (secret &amp; openid &amp; access_token)
     * </pre>
     */
    boolean hasSign();
    /**
     * <code>optional string sign = 1;</code>
     *
     * <pre>
     * 签名md5 (secret &amp; openid &amp; access_token)
     * </pre>
     */
    java.lang.String getSign();
    /**
     * <code>optional string sign = 1;</code>
     *
     * <pre>
     * 签名md5 (secret &amp; openid &amp; access_token)
     * </pre>
     */
    com.google.protobuf.ByteString
        getSignBytes();

    // optional string openid = 2;
    /**
     * <code>optional string openid = 2;</code>
     */
    boolean hasOpenid();
    /**
     * <code>optional string openid = 2;</code>
     */
    java.lang.String getOpenid();
    /**
     * <code>optional string openid = 2;</code>
     */
    com.google.protobuf.ByteString
        getOpenidBytes();

    // optional string token = 3;
    /**
     * <code>optional string token = 3;</code>
     */
    boolean hasToken();
    /**
     * <code>optional string token = 3;</code>
     */
    java.lang.String getToken();
    /**
     * <code>optional string token = 3;</code>
     */
    com.google.protobuf.ByteString
        getTokenBytes();

    // optional string expire_date = 4;
    /**
     * <code>optional string expire_date = 4;</code>
     */
    boolean hasExpireDate();
    /**
     * <code>optional string expire_date = 4;</code>
     */
    java.lang.String getExpireDate();
    /**
     * <code>optional string expire_date = 4;</code>
     */
    com.google.protobuf.ByteString
        getExpireDateBytes();

    // optional string channel = 5;
    /**
     * <code>optional string channel = 5;</code>
     */
    boolean hasChannel();
    /**
     * <code>optional string channel = 5;</code>
     */
    java.lang.String getChannel();
    /**
     * <code>optional string channel = 5;</code>
     */
    com.google.protobuf.ByteString
        getChannelBytes();

    // optional int32 version = 6;
    /**
     * <code>optional int32 version = 6;</code>
     */
    boolean hasVersion();
    /**
     * <code>optional int32 version = 6;</code>
     */
    int getVersion();

    // optional string os = 7;
    /**
     * <code>optional string os = 7;</code>
     */
    boolean hasOs();
    /**
     * <code>optional string os = 7;</code>
     */
    java.lang.String getOs();
    /**
     * <code>optional string os = 7;</code>
     */
    com.google.protobuf.ByteString
        getOsBytes();
  }
  /**
   * Protobuf type {@code WeChatLoginReq}
   *
   * <pre>
   * 客户端请求微信用户注册
   * </pre>
   */
  public static final class WeChatLoginReq extends
      com.google.protobuf.GeneratedMessage
      implements WeChatLoginReqOrBuilder {
    // Use WeChatLoginReq.newBuilder() to construct.
    private WeChatLoginReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WeChatLoginReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WeChatLoginReq defaultInstance;
    public static WeChatLoginReq getDefaultInstance() {
      return defaultInstance;
    }

    public WeChatLoginReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WeChatLoginReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              sign_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              openid_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              token_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              expireDate_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              channel_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              version_ = input.readInt32();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              os_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_WeChatLoginReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_WeChatLoginReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.WeChatLoginReq.class, Mahjong.WeChatLoginReq.Builder.class);
    }

    public static com.google.protobuf.Parser<WeChatLoginReq> PARSER =
        new com.google.protobuf.AbstractParser<WeChatLoginReq>() {
      public WeChatLoginReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WeChatLoginReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WeChatLoginReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string sign = 1;
    public static final int SIGN_FIELD_NUMBER = 1;
    private java.lang.Object sign_;
    /**
     * <code>optional string sign = 1;</code>
     *
     * <pre>
     * 签名md5 (secret &amp; openid &amp; access_token)
     * </pre>
     */
    public boolean hasSign() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string sign = 1;</code>
     *
     * <pre>
     * 签名md5 (secret &amp; openid &amp; access_token)
     * </pre>
     */
    public java.lang.String getSign() {
      java.lang.Object ref = sign_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sign_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sign = 1;</code>
     *
     * <pre>
     * 签名md5 (secret &amp; openid &amp; access_token)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSignBytes() {
      java.lang.Object ref = sign_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sign_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string openid = 2;
    public static final int OPENID_FIELD_NUMBER = 2;
    private java.lang.Object openid_;
    /**
     * <code>optional string openid = 2;</code>
     */
    public boolean hasOpenid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string openid = 2;</code>
     */
    public java.lang.String getOpenid() {
      java.lang.Object ref = openid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          openid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string openid = 2;</code>
     */
    public com.google.protobuf.ByteString
        getOpenidBytes() {
      java.lang.Object ref = openid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        openid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string token = 3;
    public static final int TOKEN_FIELD_NUMBER = 3;
    private java.lang.Object token_;
    /**
     * <code>optional string token = 3;</code>
     */
    public boolean hasToken() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string token = 3;</code>
     */
    public java.lang.String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          token_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string token = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string expire_date = 4;
    public static final int EXPIRE_DATE_FIELD_NUMBER = 4;
    private java.lang.Object expireDate_;
    /**
     * <code>optional string expire_date = 4;</code>
     */
    public boolean hasExpireDate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string expire_date = 4;</code>
     */
    public java.lang.String getExpireDate() {
      java.lang.Object ref = expireDate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          expireDate_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string expire_date = 4;</code>
     */
    public com.google.protobuf.ByteString
        getExpireDateBytes() {
      java.lang.Object ref = expireDate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        expireDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string channel = 5;
    public static final int CHANNEL_FIELD_NUMBER = 5;
    private java.lang.Object channel_;
    /**
     * <code>optional string channel = 5;</code>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string channel = 5;</code>
     */
    public java.lang.String getChannel() {
      java.lang.Object ref = channel_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channel_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel = 5;</code>
     */
    public com.google.protobuf.ByteString
        getChannelBytes() {
      java.lang.Object ref = channel_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 version = 6;
    public static final int VERSION_FIELD_NUMBER = 6;
    private int version_;
    /**
     * <code>optional int32 version = 6;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 version = 6;</code>
     */
    public int getVersion() {
      return version_;
    }

    // optional string os = 7;
    public static final int OS_FIELD_NUMBER = 7;
    private java.lang.Object os_;
    /**
     * <code>optional string os = 7;</code>
     */
    public boolean hasOs() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string os = 7;</code>
     */
    public java.lang.String getOs() {
      java.lang.Object ref = os_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          os_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string os = 7;</code>
     */
    public com.google.protobuf.ByteString
        getOsBytes() {
      java.lang.Object ref = os_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        os_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      sign_ = "";
      openid_ = "";
      token_ = "";
      expireDate_ = "";
      channel_ = "";
      version_ = 0;
      os_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSignBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getOpenidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getTokenBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getExpireDateBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getChannelBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, version_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getOsBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSignBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getOpenidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTokenBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getExpireDateBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getChannelBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, version_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getOsBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.WeChatLoginReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.WeChatLoginReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.WeChatLoginReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.WeChatLoginReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.WeChatLoginReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.WeChatLoginReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.WeChatLoginReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.WeChatLoginReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.WeChatLoginReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.WeChatLoginReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.WeChatLoginReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code WeChatLoginReq}
     *
     * <pre>
     * 客户端请求微信用户注册
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.WeChatLoginReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_WeChatLoginReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_WeChatLoginReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.WeChatLoginReq.class, Mahjong.WeChatLoginReq.Builder.class);
      }

      // Construct using Mahjong.WeChatLoginReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sign_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        openid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        token_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        expireDate_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        channel_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        os_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_WeChatLoginReq_descriptor;
      }

      public Mahjong.WeChatLoginReq getDefaultInstanceForType() {
        return Mahjong.WeChatLoginReq.getDefaultInstance();
      }

      public Mahjong.WeChatLoginReq build() {
        Mahjong.WeChatLoginReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.WeChatLoginReq buildPartial() {
        Mahjong.WeChatLoginReq result = new Mahjong.WeChatLoginReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sign_ = sign_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.openid_ = openid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.token_ = token_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.expireDate_ = expireDate_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.os_ = os_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.WeChatLoginReq) {
          return mergeFrom((Mahjong.WeChatLoginReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.WeChatLoginReq other) {
        if (other == Mahjong.WeChatLoginReq.getDefaultInstance()) return this;
        if (other.hasSign()) {
          bitField0_ |= 0x00000001;
          sign_ = other.sign_;
          onChanged();
        }
        if (other.hasOpenid()) {
          bitField0_ |= 0x00000002;
          openid_ = other.openid_;
          onChanged();
        }
        if (other.hasToken()) {
          bitField0_ |= 0x00000004;
          token_ = other.token_;
          onChanged();
        }
        if (other.hasExpireDate()) {
          bitField0_ |= 0x00000008;
          expireDate_ = other.expireDate_;
          onChanged();
        }
        if (other.hasChannel()) {
          bitField0_ |= 0x00000010;
          channel_ = other.channel_;
          onChanged();
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasOs()) {
          bitField0_ |= 0x00000040;
          os_ = other.os_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.WeChatLoginReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.WeChatLoginReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string sign = 1;
      private java.lang.Object sign_ = "";
      /**
       * <code>optional string sign = 1;</code>
       *
       * <pre>
       * 签名md5 (secret &amp; openid &amp; access_token)
       * </pre>
       */
      public boolean hasSign() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string sign = 1;</code>
       *
       * <pre>
       * 签名md5 (secret &amp; openid &amp; access_token)
       * </pre>
       */
      public java.lang.String getSign() {
        java.lang.Object ref = sign_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          sign_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sign = 1;</code>
       *
       * <pre>
       * 签名md5 (secret &amp; openid &amp; access_token)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSignBytes() {
        java.lang.Object ref = sign_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sign_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sign = 1;</code>
       *
       * <pre>
       * 签名md5 (secret &amp; openid &amp; access_token)
       * </pre>
       */
      public Builder setSign(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sign_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sign = 1;</code>
       *
       * <pre>
       * 签名md5 (secret &amp; openid &amp; access_token)
       * </pre>
       */
      public Builder clearSign() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sign_ = getDefaultInstance().getSign();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sign = 1;</code>
       *
       * <pre>
       * 签名md5 (secret &amp; openid &amp; access_token)
       * </pre>
       */
      public Builder setSignBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sign_ = value;
        onChanged();
        return this;
      }

      // optional string openid = 2;
      private java.lang.Object openid_ = "";
      /**
       * <code>optional string openid = 2;</code>
       */
      public boolean hasOpenid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string openid = 2;</code>
       */
      public java.lang.String getOpenid() {
        java.lang.Object ref = openid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          openid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string openid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getOpenidBytes() {
        java.lang.Object ref = openid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          openid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string openid = 2;</code>
       */
      public Builder setOpenid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        openid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string openid = 2;</code>
       */
      public Builder clearOpenid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        openid_ = getDefaultInstance().getOpenid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string openid = 2;</code>
       */
      public Builder setOpenidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        openid_ = value;
        onChanged();
        return this;
      }

      // optional string token = 3;
      private java.lang.Object token_ = "";
      /**
       * <code>optional string token = 3;</code>
       */
      public boolean hasToken() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string token = 3;</code>
       */
      public java.lang.String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string token = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTokenBytes() {
        java.lang.Object ref = token_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string token = 3;</code>
       */
      public Builder setToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        token_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string token = 3;</code>
       */
      public Builder clearToken() {
        bitField0_ = (bitField0_ & ~0x00000004);
        token_ = getDefaultInstance().getToken();
        onChanged();
        return this;
      }
      /**
       * <code>optional string token = 3;</code>
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        token_ = value;
        onChanged();
        return this;
      }

      // optional string expire_date = 4;
      private java.lang.Object expireDate_ = "";
      /**
       * <code>optional string expire_date = 4;</code>
       */
      public boolean hasExpireDate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string expire_date = 4;</code>
       */
      public java.lang.String getExpireDate() {
        java.lang.Object ref = expireDate_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          expireDate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string expire_date = 4;</code>
       */
      public com.google.protobuf.ByteString
          getExpireDateBytes() {
        java.lang.Object ref = expireDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          expireDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string expire_date = 4;</code>
       */
      public Builder setExpireDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        expireDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string expire_date = 4;</code>
       */
      public Builder clearExpireDate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        expireDate_ = getDefaultInstance().getExpireDate();
        onChanged();
        return this;
      }
      /**
       * <code>optional string expire_date = 4;</code>
       */
      public Builder setExpireDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        expireDate_ = value;
        onChanged();
        return this;
      }

      // optional string channel = 5;
      private java.lang.Object channel_ = "";
      /**
       * <code>optional string channel = 5;</code>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string channel = 5;</code>
       */
      public java.lang.String getChannel() {
        java.lang.Object ref = channel_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channel_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel = 5;</code>
       */
      public com.google.protobuf.ByteString
          getChannelBytes() {
        java.lang.Object ref = channel_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel = 5;</code>
       */
      public Builder setChannel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel = 5;</code>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        channel_ = getDefaultInstance().getChannel();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel = 5;</code>
       */
      public Builder setChannelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        channel_ = value;
        onChanged();
        return this;
      }

      // optional int32 version = 6;
      private int version_ ;
      /**
       * <code>optional int32 version = 6;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 version = 6;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>optional int32 version = 6;</code>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000020;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 version = 6;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000020);
        version_ = 0;
        onChanged();
        return this;
      }

      // optional string os = 7;
      private java.lang.Object os_ = "";
      /**
       * <code>optional string os = 7;</code>
       */
      public boolean hasOs() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string os = 7;</code>
       */
      public java.lang.String getOs() {
        java.lang.Object ref = os_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          os_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string os = 7;</code>
       */
      public com.google.protobuf.ByteString
          getOsBytes() {
        java.lang.Object ref = os_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          os_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string os = 7;</code>
       */
      public Builder setOs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        os_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string os = 7;</code>
       */
      public Builder clearOs() {
        bitField0_ = (bitField0_ & ~0x00000040);
        os_ = getDefaultInstance().getOs();
        onChanged();
        return this;
      }
      /**
       * <code>optional string os = 7;</code>
       */
      public Builder setOsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        os_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:WeChatLoginReq)
    }

    static {
      defaultInstance = new WeChatLoginReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:WeChatLoginReq)
  }

  public interface LoginRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 uin = 1;
    /**
     * <code>optional int32 uin = 1;</code>
     */
    boolean hasUin();
    /**
     * <code>optional int32 uin = 1;</code>
     */
    int getUin();

    // optional string password = 2;
    /**
     * <code>optional string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    // optional string nick = 3;
    /**
     * <code>optional string nick = 3;</code>
     */
    boolean hasNick();
    /**
     * <code>optional string nick = 3;</code>
     */
    java.lang.String getNick();
    /**
     * <code>optional string nick = 3;</code>
     */
    com.google.protobuf.ByteString
        getNickBytes();

    // optional int32 sex = 4;
    /**
     * <code>optional int32 sex = 4;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 4;</code>
     */
    int getSex();

    // optional int32 old_deskid = 5;
    /**
     * <code>optional int32 old_deskid = 5;</code>
     */
    boolean hasOldDeskid();
    /**
     * <code>optional int32 old_deskid = 5;</code>
     */
    int getOldDeskid();

    // optional string portrait = 7;
    /**
     * <code>optional string portrait = 7;</code>
     */
    boolean hasPortrait();
    /**
     * <code>optional string portrait = 7;</code>
     */
    java.lang.String getPortrait();
    /**
     * <code>optional string portrait = 7;</code>
     */
    com.google.protobuf.ByteString
        getPortraitBytes();

    // optional string wx_public_id = 8;
    /**
     * <code>optional string wx_public_id = 8;</code>
     *
     * <pre>
     * 微信公众号
     * </pre>
     */
    boolean hasWxPublicId();
    /**
     * <code>optional string wx_public_id = 8;</code>
     *
     * <pre>
     * 微信公众号
     * </pre>
     */
    java.lang.String getWxPublicId();
    /**
     * <code>optional string wx_public_id = 8;</code>
     *
     * <pre>
     * 微信公众号
     * </pre>
     */
    com.google.protobuf.ByteString
        getWxPublicIdBytes();

    // optional string wx_agent_id = 9;
    /**
     * <code>optional string wx_agent_id = 9;</code>
     *
     * <pre>
     * 代理商号
     * </pre>
     */
    boolean hasWxAgentId();
    /**
     * <code>optional string wx_agent_id = 9;</code>
     *
     * <pre>
     * 代理商号
     * </pre>
     */
    java.lang.String getWxAgentId();
    /**
     * <code>optional string wx_agent_id = 9;</code>
     *
     * <pre>
     * 代理商号
     * </pre>
     */
    com.google.protobuf.ByteString
        getWxAgentIdBytes();

    // optional string ip = 10;
    /**
     * <code>optional string ip = 10;</code>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 10;</code>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 10;</code>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    // optional int32 room_card = 11;
    /**
     * <code>optional int32 room_card = 11;</code>
     *
     * <pre>
     * 房卡
     * </pre>
     */
    boolean hasRoomCard();
    /**
     * <code>optional int32 room_card = 11;</code>
     *
     * <pre>
     * 房卡
     * </pre>
     */
    int getRoomCard();

    // optional int32 ret = 12;
    /**
     * <code>optional int32 ret = 12;</code>
     *
     * <pre>
     * 登录注册响应值，先判断该标志位，为0代表是成功消息，成功状态下才取其它数值
     * </pre>
     */
    boolean hasRet();
    /**
     * <code>optional int32 ret = 12;</code>
     *
     * <pre>
     * 登录注册响应值，先判断该标志位，为0代表是成功消息，成功状态下才取其它数值
     * </pre>
     */
    int getRet();

    // optional string wy_yunxin_token = 13;
    /**
     * <code>optional string wy_yunxin_token = 13;</code>
     *
     * <pre>
     * 云信token
     * </pre>
     */
    boolean hasWyYunxinToken();
    /**
     * <code>optional string wy_yunxin_token = 13;</code>
     *
     * <pre>
     * 云信token
     * </pre>
     */
    java.lang.String getWyYunxinToken();
    /**
     * <code>optional string wy_yunxin_token = 13;</code>
     *
     * <pre>
     * 云信token
     * </pre>
     */
    com.google.protobuf.ByteString
        getWyYunxinTokenBytes();

    // optional string hall_billband = 14;
    /**
     * <code>optional string hall_billband = 14;</code>
     *
     * <pre>
     * 登录公告
     * </pre>
     */
    boolean hasHallBillband();
    /**
     * <code>optional string hall_billband = 14;</code>
     *
     * <pre>
     * 登录公告
     * </pre>
     */
    java.lang.String getHallBillband();
    /**
     * <code>optional string hall_billband = 14;</code>
     *
     * <pre>
     * 登录公告
     * </pre>
     */
    com.google.protobuf.ByteString
        getHallBillbandBytes();
  }
  /**
   * Protobuf type {@code LoginRsp}
   *
   * <pre>
   * 登录响应 1001
   * </pre>
   */
  public static final class LoginRsp extends
      com.google.protobuf.GeneratedMessage
      implements LoginRspOrBuilder {
    // Use LoginRsp.newBuilder() to construct.
    private LoginRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoginRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoginRsp defaultInstance;
    public static LoginRsp getDefaultInstance() {
      return defaultInstance;
    }

    public LoginRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoginRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uin_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              password_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              nick_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              sex_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              oldDeskid_ = input.readInt32();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000020;
              portrait_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000040;
              wxPublicId_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000080;
              wxAgentId_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000100;
              ip_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              roomCard_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              ret_ = input.readInt32();
              break;
            }
            case 106: {
              bitField0_ |= 0x00000800;
              wyYunxinToken_ = input.readBytes();
              break;
            }
            case 114: {
              bitField0_ |= 0x00001000;
              hallBillband_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_LoginRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_LoginRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.LoginRsp.class, Mahjong.LoginRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<LoginRsp> PARSER =
        new com.google.protobuf.AbstractParser<LoginRsp>() {
      public LoginRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoginRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LoginRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 uin = 1;
    public static final int UIN_FIELD_NUMBER = 1;
    private int uin_;
    /**
     * <code>optional int32 uin = 1;</code>
     */
    public boolean hasUin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 uin = 1;</code>
     */
    public int getUin() {
      return uin_;
    }

    // optional string password = 2;
    public static final int PASSWORD_FIELD_NUMBER = 2;
    private java.lang.Object password_;
    /**
     * <code>optional string password = 2;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string nick = 3;
    public static final int NICK_FIELD_NUMBER = 3;
    private java.lang.Object nick_;
    /**
     * <code>optional string nick = 3;</code>
     */
    public boolean hasNick() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string nick = 3;</code>
     */
    public java.lang.String getNick() {
      java.lang.Object ref = nick_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nick_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nick = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNickBytes() {
      java.lang.Object ref = nick_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nick_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 sex = 4;
    public static final int SEX_FIELD_NUMBER = 4;
    private int sex_;
    /**
     * <code>optional int32 sex = 4;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 sex = 4;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional int32 old_deskid = 5;
    public static final int OLD_DESKID_FIELD_NUMBER = 5;
    private int oldDeskid_;
    /**
     * <code>optional int32 old_deskid = 5;</code>
     */
    public boolean hasOldDeskid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 old_deskid = 5;</code>
     */
    public int getOldDeskid() {
      return oldDeskid_;
    }

    // optional string portrait = 7;
    public static final int PORTRAIT_FIELD_NUMBER = 7;
    private java.lang.Object portrait_;
    /**
     * <code>optional string portrait = 7;</code>
     */
    public boolean hasPortrait() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string portrait = 7;</code>
     */
    public java.lang.String getPortrait() {
      java.lang.Object ref = portrait_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          portrait_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string portrait = 7;</code>
     */
    public com.google.protobuf.ByteString
        getPortraitBytes() {
      java.lang.Object ref = portrait_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        portrait_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string wx_public_id = 8;
    public static final int WX_PUBLIC_ID_FIELD_NUMBER = 8;
    private java.lang.Object wxPublicId_;
    /**
     * <code>optional string wx_public_id = 8;</code>
     *
     * <pre>
     * 微信公众号
     * </pre>
     */
    public boolean hasWxPublicId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string wx_public_id = 8;</code>
     *
     * <pre>
     * 微信公众号
     * </pre>
     */
    public java.lang.String getWxPublicId() {
      java.lang.Object ref = wxPublicId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          wxPublicId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string wx_public_id = 8;</code>
     *
     * <pre>
     * 微信公众号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWxPublicIdBytes() {
      java.lang.Object ref = wxPublicId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        wxPublicId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string wx_agent_id = 9;
    public static final int WX_AGENT_ID_FIELD_NUMBER = 9;
    private java.lang.Object wxAgentId_;
    /**
     * <code>optional string wx_agent_id = 9;</code>
     *
     * <pre>
     * 代理商号
     * </pre>
     */
    public boolean hasWxAgentId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string wx_agent_id = 9;</code>
     *
     * <pre>
     * 代理商号
     * </pre>
     */
    public java.lang.String getWxAgentId() {
      java.lang.Object ref = wxAgentId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          wxAgentId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string wx_agent_id = 9;</code>
     *
     * <pre>
     * 代理商号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWxAgentIdBytes() {
      java.lang.Object ref = wxAgentId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        wxAgentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ip = 10;
    public static final int IP_FIELD_NUMBER = 10;
    private java.lang.Object ip_;
    /**
     * <code>optional string ip = 10;</code>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string ip = 10;</code>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 10;</code>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 room_card = 11;
    public static final int ROOM_CARD_FIELD_NUMBER = 11;
    private int roomCard_;
    /**
     * <code>optional int32 room_card = 11;</code>
     *
     * <pre>
     * 房卡
     * </pre>
     */
    public boolean hasRoomCard() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 room_card = 11;</code>
     *
     * <pre>
     * 房卡
     * </pre>
     */
    public int getRoomCard() {
      return roomCard_;
    }

    // optional int32 ret = 12;
    public static final int RET_FIELD_NUMBER = 12;
    private int ret_;
    /**
     * <code>optional int32 ret = 12;</code>
     *
     * <pre>
     * 登录注册响应值，先判断该标志位，为0代表是成功消息，成功状态下才取其它数值
     * </pre>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 ret = 12;</code>
     *
     * <pre>
     * 登录注册响应值，先判断该标志位，为0代表是成功消息，成功状态下才取其它数值
     * </pre>
     */
    public int getRet() {
      return ret_;
    }

    // optional string wy_yunxin_token = 13;
    public static final int WY_YUNXIN_TOKEN_FIELD_NUMBER = 13;
    private java.lang.Object wyYunxinToken_;
    /**
     * <code>optional string wy_yunxin_token = 13;</code>
     *
     * <pre>
     * 云信token
     * </pre>
     */
    public boolean hasWyYunxinToken() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string wy_yunxin_token = 13;</code>
     *
     * <pre>
     * 云信token
     * </pre>
     */
    public java.lang.String getWyYunxinToken() {
      java.lang.Object ref = wyYunxinToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          wyYunxinToken_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string wy_yunxin_token = 13;</code>
     *
     * <pre>
     * 云信token
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWyYunxinTokenBytes() {
      java.lang.Object ref = wyYunxinToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        wyYunxinToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string hall_billband = 14;
    public static final int HALL_BILLBAND_FIELD_NUMBER = 14;
    private java.lang.Object hallBillband_;
    /**
     * <code>optional string hall_billband = 14;</code>
     *
     * <pre>
     * 登录公告
     * </pre>
     */
    public boolean hasHallBillband() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string hall_billband = 14;</code>
     *
     * <pre>
     * 登录公告
     * </pre>
     */
    public java.lang.String getHallBillband() {
      java.lang.Object ref = hallBillband_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hallBillband_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string hall_billband = 14;</code>
     *
     * <pre>
     * 登录公告
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHallBillbandBytes() {
      java.lang.Object ref = hallBillband_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hallBillband_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      uin_ = 0;
      password_ = "";
      nick_ = "";
      sex_ = 0;
      oldDeskid_ = 0;
      portrait_ = "";
      wxPublicId_ = "";
      wxAgentId_ = "";
      ip_ = "";
      roomCard_ = 0;
      ret_ = 0;
      wyYunxinToken_ = "";
      hallBillband_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNickBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, sex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, oldDeskid_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(7, getPortraitBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(8, getWxPublicIdBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(9, getWxAgentIdBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(10, getIpBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(11, roomCard_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(12, ret_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(13, getWyYunxinTokenBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(14, getHallBillbandBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNickBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, sex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, oldDeskid_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getPortraitBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getWxPublicIdBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getWxAgentIdBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getIpBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, roomCard_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, ret_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getWyYunxinTokenBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getHallBillbandBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.LoginRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.LoginRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.LoginRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.LoginRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.LoginRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.LoginRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.LoginRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.LoginRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.LoginRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.LoginRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.LoginRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LoginRsp}
     *
     * <pre>
     * 登录响应 1001
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.LoginRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_LoginRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_LoginRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.LoginRsp.class, Mahjong.LoginRsp.Builder.class);
      }

      // Construct using Mahjong.LoginRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        nick_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        oldDeskid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        portrait_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        wxPublicId_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        wxAgentId_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        roomCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        wyYunxinToken_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        hallBillband_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_LoginRsp_descriptor;
      }

      public Mahjong.LoginRsp getDefaultInstanceForType() {
        return Mahjong.LoginRsp.getDefaultInstance();
      }

      public Mahjong.LoginRsp build() {
        Mahjong.LoginRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.LoginRsp buildPartial() {
        Mahjong.LoginRsp result = new Mahjong.LoginRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uin_ = uin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.nick_ = nick_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.oldDeskid_ = oldDeskid_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.portrait_ = portrait_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.wxPublicId_ = wxPublicId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.wxAgentId_ = wxAgentId_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.roomCard_ = roomCard_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.ret_ = ret_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.wyYunxinToken_ = wyYunxinToken_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.hallBillband_ = hallBillband_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.LoginRsp) {
          return mergeFrom((Mahjong.LoginRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.LoginRsp other) {
        if (other == Mahjong.LoginRsp.getDefaultInstance()) return this;
        if (other.hasUin()) {
          setUin(other.getUin());
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000002;
          password_ = other.password_;
          onChanged();
        }
        if (other.hasNick()) {
          bitField0_ |= 0x00000004;
          nick_ = other.nick_;
          onChanged();
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasOldDeskid()) {
          setOldDeskid(other.getOldDeskid());
        }
        if (other.hasPortrait()) {
          bitField0_ |= 0x00000020;
          portrait_ = other.portrait_;
          onChanged();
        }
        if (other.hasWxPublicId()) {
          bitField0_ |= 0x00000040;
          wxPublicId_ = other.wxPublicId_;
          onChanged();
        }
        if (other.hasWxAgentId()) {
          bitField0_ |= 0x00000080;
          wxAgentId_ = other.wxAgentId_;
          onChanged();
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000100;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasRoomCard()) {
          setRoomCard(other.getRoomCard());
        }
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        if (other.hasWyYunxinToken()) {
          bitField0_ |= 0x00000800;
          wyYunxinToken_ = other.wyYunxinToken_;
          onChanged();
        }
        if (other.hasHallBillband()) {
          bitField0_ |= 0x00001000;
          hallBillband_ = other.hallBillband_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.LoginRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.LoginRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 uin = 1;
      private int uin_ ;
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public boolean hasUin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public int getUin() {
        return uin_;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public Builder setUin(int value) {
        bitField0_ |= 0x00000001;
        uin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public Builder clearUin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uin_ = 0;
        onChanged();
        return this;
      }

      // optional string password = 2;
      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 2;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }

      // optional string nick = 3;
      private java.lang.Object nick_ = "";
      /**
       * <code>optional string nick = 3;</code>
       */
      public boolean hasNick() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string nick = 3;</code>
       */
      public java.lang.String getNick() {
        java.lang.Object ref = nick_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nick_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nick = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNickBytes() {
        java.lang.Object ref = nick_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nick_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nick = 3;</code>
       */
      public Builder setNick(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        nick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nick = 3;</code>
       */
      public Builder clearNick() {
        bitField0_ = (bitField0_ & ~0x00000004);
        nick_ = getDefaultInstance().getNick();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nick = 3;</code>
       */
      public Builder setNickBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        nick_ = value;
        onChanged();
        return this;
      }

      // optional int32 sex = 4;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 4;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 sex = 4;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 4;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000008;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 4;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 old_deskid = 5;
      private int oldDeskid_ ;
      /**
       * <code>optional int32 old_deskid = 5;</code>
       */
      public boolean hasOldDeskid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 old_deskid = 5;</code>
       */
      public int getOldDeskid() {
        return oldDeskid_;
      }
      /**
       * <code>optional int32 old_deskid = 5;</code>
       */
      public Builder setOldDeskid(int value) {
        bitField0_ |= 0x00000010;
        oldDeskid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 old_deskid = 5;</code>
       */
      public Builder clearOldDeskid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        oldDeskid_ = 0;
        onChanged();
        return this;
      }

      // optional string portrait = 7;
      private java.lang.Object portrait_ = "";
      /**
       * <code>optional string portrait = 7;</code>
       */
      public boolean hasPortrait() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string portrait = 7;</code>
       */
      public java.lang.String getPortrait() {
        java.lang.Object ref = portrait_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          portrait_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string portrait = 7;</code>
       */
      public com.google.protobuf.ByteString
          getPortraitBytes() {
        java.lang.Object ref = portrait_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          portrait_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string portrait = 7;</code>
       */
      public Builder setPortrait(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        portrait_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string portrait = 7;</code>
       */
      public Builder clearPortrait() {
        bitField0_ = (bitField0_ & ~0x00000020);
        portrait_ = getDefaultInstance().getPortrait();
        onChanged();
        return this;
      }
      /**
       * <code>optional string portrait = 7;</code>
       */
      public Builder setPortraitBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        portrait_ = value;
        onChanged();
        return this;
      }

      // optional string wx_public_id = 8;
      private java.lang.Object wxPublicId_ = "";
      /**
       * <code>optional string wx_public_id = 8;</code>
       *
       * <pre>
       * 微信公众号
       * </pre>
       */
      public boolean hasWxPublicId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string wx_public_id = 8;</code>
       *
       * <pre>
       * 微信公众号
       * </pre>
       */
      public java.lang.String getWxPublicId() {
        java.lang.Object ref = wxPublicId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          wxPublicId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string wx_public_id = 8;</code>
       *
       * <pre>
       * 微信公众号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWxPublicIdBytes() {
        java.lang.Object ref = wxPublicId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          wxPublicId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string wx_public_id = 8;</code>
       *
       * <pre>
       * 微信公众号
       * </pre>
       */
      public Builder setWxPublicId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        wxPublicId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string wx_public_id = 8;</code>
       *
       * <pre>
       * 微信公众号
       * </pre>
       */
      public Builder clearWxPublicId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        wxPublicId_ = getDefaultInstance().getWxPublicId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string wx_public_id = 8;</code>
       *
       * <pre>
       * 微信公众号
       * </pre>
       */
      public Builder setWxPublicIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        wxPublicId_ = value;
        onChanged();
        return this;
      }

      // optional string wx_agent_id = 9;
      private java.lang.Object wxAgentId_ = "";
      /**
       * <code>optional string wx_agent_id = 9;</code>
       *
       * <pre>
       * 代理商号
       * </pre>
       */
      public boolean hasWxAgentId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string wx_agent_id = 9;</code>
       *
       * <pre>
       * 代理商号
       * </pre>
       */
      public java.lang.String getWxAgentId() {
        java.lang.Object ref = wxAgentId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          wxAgentId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string wx_agent_id = 9;</code>
       *
       * <pre>
       * 代理商号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWxAgentIdBytes() {
        java.lang.Object ref = wxAgentId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          wxAgentId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string wx_agent_id = 9;</code>
       *
       * <pre>
       * 代理商号
       * </pre>
       */
      public Builder setWxAgentId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        wxAgentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string wx_agent_id = 9;</code>
       *
       * <pre>
       * 代理商号
       * </pre>
       */
      public Builder clearWxAgentId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        wxAgentId_ = getDefaultInstance().getWxAgentId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string wx_agent_id = 9;</code>
       *
       * <pre>
       * 代理商号
       * </pre>
       */
      public Builder setWxAgentIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        wxAgentId_ = value;
        onChanged();
        return this;
      }

      // optional string ip = 10;
      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 10;</code>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string ip = 10;</code>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 10;</code>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 10;</code>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 10;</code>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 10;</code>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        ip_ = value;
        onChanged();
        return this;
      }

      // optional int32 room_card = 11;
      private int roomCard_ ;
      /**
       * <code>optional int32 room_card = 11;</code>
       *
       * <pre>
       * 房卡
       * </pre>
       */
      public boolean hasRoomCard() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 room_card = 11;</code>
       *
       * <pre>
       * 房卡
       * </pre>
       */
      public int getRoomCard() {
        return roomCard_;
      }
      /**
       * <code>optional int32 room_card = 11;</code>
       *
       * <pre>
       * 房卡
       * </pre>
       */
      public Builder setRoomCard(int value) {
        bitField0_ |= 0x00000200;
        roomCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 room_card = 11;</code>
       *
       * <pre>
       * 房卡
       * </pre>
       */
      public Builder clearRoomCard() {
        bitField0_ = (bitField0_ & ~0x00000200);
        roomCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ret = 12;
      private int ret_ ;
      /**
       * <code>optional int32 ret = 12;</code>
       *
       * <pre>
       * 登录注册响应值，先判断该标志位，为0代表是成功消息，成功状态下才取其它数值
       * </pre>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 ret = 12;</code>
       *
       * <pre>
       * 登录注册响应值，先判断该标志位，为0代表是成功消息，成功状态下才取其它数值
       * </pre>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 12;</code>
       *
       * <pre>
       * 登录注册响应值，先判断该标志位，为0代表是成功消息，成功状态下才取其它数值
       * </pre>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000400;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 12;</code>
       *
       * <pre>
       * 登录注册响应值，先判断该标志位，为0代表是成功消息，成功状态下才取其它数值
       * </pre>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000400);
        ret_ = 0;
        onChanged();
        return this;
      }

      // optional string wy_yunxin_token = 13;
      private java.lang.Object wyYunxinToken_ = "";
      /**
       * <code>optional string wy_yunxin_token = 13;</code>
       *
       * <pre>
       * 云信token
       * </pre>
       */
      public boolean hasWyYunxinToken() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string wy_yunxin_token = 13;</code>
       *
       * <pre>
       * 云信token
       * </pre>
       */
      public java.lang.String getWyYunxinToken() {
        java.lang.Object ref = wyYunxinToken_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          wyYunxinToken_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string wy_yunxin_token = 13;</code>
       *
       * <pre>
       * 云信token
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWyYunxinTokenBytes() {
        java.lang.Object ref = wyYunxinToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          wyYunxinToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string wy_yunxin_token = 13;</code>
       *
       * <pre>
       * 云信token
       * </pre>
       */
      public Builder setWyYunxinToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        wyYunxinToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string wy_yunxin_token = 13;</code>
       *
       * <pre>
       * 云信token
       * </pre>
       */
      public Builder clearWyYunxinToken() {
        bitField0_ = (bitField0_ & ~0x00000800);
        wyYunxinToken_ = getDefaultInstance().getWyYunxinToken();
        onChanged();
        return this;
      }
      /**
       * <code>optional string wy_yunxin_token = 13;</code>
       *
       * <pre>
       * 云信token
       * </pre>
       */
      public Builder setWyYunxinTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        wyYunxinToken_ = value;
        onChanged();
        return this;
      }

      // optional string hall_billband = 14;
      private java.lang.Object hallBillband_ = "";
      /**
       * <code>optional string hall_billband = 14;</code>
       *
       * <pre>
       * 登录公告
       * </pre>
       */
      public boolean hasHallBillband() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string hall_billband = 14;</code>
       *
       * <pre>
       * 登录公告
       * </pre>
       */
      public java.lang.String getHallBillband() {
        java.lang.Object ref = hallBillband_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          hallBillband_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string hall_billband = 14;</code>
       *
       * <pre>
       * 登录公告
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHallBillbandBytes() {
        java.lang.Object ref = hallBillband_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hallBillband_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string hall_billband = 14;</code>
       *
       * <pre>
       * 登录公告
       * </pre>
       */
      public Builder setHallBillband(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        hallBillband_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string hall_billband = 14;</code>
       *
       * <pre>
       * 登录公告
       * </pre>
       */
      public Builder clearHallBillband() {
        bitField0_ = (bitField0_ & ~0x00001000);
        hallBillband_ = getDefaultInstance().getHallBillband();
        onChanged();
        return this;
      }
      /**
       * <code>optional string hall_billband = 14;</code>
       *
       * <pre>
       * 登录公告
       * </pre>
       */
      public Builder setHallBillbandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        hallBillband_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LoginRsp)
    }

    static {
      defaultInstance = new LoginRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LoginRsp)
  }

  public interface ExtraDeskTypeInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool hongzhong = 1;
    /**
     * <code>optional bool hongzhong = 1;</code>
     *
     * <pre>
     * 红中癞子
     * </pre>
     */
    boolean hasHongzhong();
    /**
     * <code>optional bool hongzhong = 1;</code>
     *
     * <pre>
     * 红中癞子
     * </pre>
     */
    boolean getHongzhong();

    // optional bool qidui = 2;
    /**
     * <code>optional bool qidui = 2;</code>
     *
     * <pre>
     * 可胡七对
     * </pre>
     */
    boolean hasQidui();
    /**
     * <code>optional bool qidui = 2;</code>
     *
     * <pre>
     * 可胡七对
     * </pre>
     */
    boolean getQidui();

    // optional int32 zhuaniao = 3;
    /**
     * <code>optional int32 zhuaniao = 3;</code>
     *
     * <pre>
     * 抓鸟  抓几鸟 一马平川
     * </pre>
     */
    boolean hasZhuaniao();
    /**
     * <code>optional int32 zhuaniao = 3;</code>
     *
     * <pre>
     * 抓鸟  抓几鸟 一马平川
     * </pre>
     */
    int getZhuaniao();

    // optional int32 piaofen = 4;
    /**
     * <code>optional int32 piaofen = 4;</code>
     *
     * <pre>
     * 飘分
     * </pre>
     */
    boolean hasPiaofen();
    /**
     * <code>optional int32 piaofen = 4;</code>
     *
     * <pre>
     * 飘分
     * </pre>
     */
    int getPiaofen();

    // optional bool shanghuo = 5;
    /**
     * <code>optional bool shanghuo = 5;</code>
     *
     * <pre>
     * 上火
     * </pre>
     */
    boolean hasShanghuo();
    /**
     * <code>optional bool shanghuo = 5;</code>
     *
     * <pre>
     * 上火
     * </pre>
     */
    boolean getShanghuo();
  }
  /**
   * Protobuf type {@code ExtraDeskTypeInfo}
   */
  public static final class ExtraDeskTypeInfo extends
      com.google.protobuf.GeneratedMessage
      implements ExtraDeskTypeInfoOrBuilder {
    // Use ExtraDeskTypeInfo.newBuilder() to construct.
    private ExtraDeskTypeInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ExtraDeskTypeInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ExtraDeskTypeInfo defaultInstance;
    public static ExtraDeskTypeInfo getDefaultInstance() {
      return defaultInstance;
    }

    public ExtraDeskTypeInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ExtraDeskTypeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              hongzhong_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              qidui_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              zhuaniao_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              piaofen_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              shanghuo_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_ExtraDeskTypeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_ExtraDeskTypeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.ExtraDeskTypeInfo.class, Mahjong.ExtraDeskTypeInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<ExtraDeskTypeInfo> PARSER =
        new com.google.protobuf.AbstractParser<ExtraDeskTypeInfo>() {
      public ExtraDeskTypeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExtraDeskTypeInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ExtraDeskTypeInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool hongzhong = 1;
    public static final int HONGZHONG_FIELD_NUMBER = 1;
    private boolean hongzhong_;
    /**
     * <code>optional bool hongzhong = 1;</code>
     *
     * <pre>
     * 红中癞子
     * </pre>
     */
    public boolean hasHongzhong() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool hongzhong = 1;</code>
     *
     * <pre>
     * 红中癞子
     * </pre>
     */
    public boolean getHongzhong() {
      return hongzhong_;
    }

    // optional bool qidui = 2;
    public static final int QIDUI_FIELD_NUMBER = 2;
    private boolean qidui_;
    /**
     * <code>optional bool qidui = 2;</code>
     *
     * <pre>
     * 可胡七对
     * </pre>
     */
    public boolean hasQidui() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool qidui = 2;</code>
     *
     * <pre>
     * 可胡七对
     * </pre>
     */
    public boolean getQidui() {
      return qidui_;
    }

    // optional int32 zhuaniao = 3;
    public static final int ZHUANIAO_FIELD_NUMBER = 3;
    private int zhuaniao_;
    /**
     * <code>optional int32 zhuaniao = 3;</code>
     *
     * <pre>
     * 抓鸟  抓几鸟 一马平川
     * </pre>
     */
    public boolean hasZhuaniao() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 zhuaniao = 3;</code>
     *
     * <pre>
     * 抓鸟  抓几鸟 一马平川
     * </pre>
     */
    public int getZhuaniao() {
      return zhuaniao_;
    }

    // optional int32 piaofen = 4;
    public static final int PIAOFEN_FIELD_NUMBER = 4;
    private int piaofen_;
    /**
     * <code>optional int32 piaofen = 4;</code>
     *
     * <pre>
     * 飘分
     * </pre>
     */
    public boolean hasPiaofen() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 piaofen = 4;</code>
     *
     * <pre>
     * 飘分
     * </pre>
     */
    public int getPiaofen() {
      return piaofen_;
    }

    // optional bool shanghuo = 5;
    public static final int SHANGHUO_FIELD_NUMBER = 5;
    private boolean shanghuo_;
    /**
     * <code>optional bool shanghuo = 5;</code>
     *
     * <pre>
     * 上火
     * </pre>
     */
    public boolean hasShanghuo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool shanghuo = 5;</code>
     *
     * <pre>
     * 上火
     * </pre>
     */
    public boolean getShanghuo() {
      return shanghuo_;
    }

    private void initFields() {
      hongzhong_ = false;
      qidui_ = false;
      zhuaniao_ = 0;
      piaofen_ = 0;
      shanghuo_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, hongzhong_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, qidui_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, zhuaniao_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, piaofen_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, shanghuo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, hongzhong_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, qidui_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, zhuaniao_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, piaofen_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, shanghuo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.ExtraDeskTypeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.ExtraDeskTypeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.ExtraDeskTypeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.ExtraDeskTypeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.ExtraDeskTypeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.ExtraDeskTypeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.ExtraDeskTypeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.ExtraDeskTypeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.ExtraDeskTypeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.ExtraDeskTypeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.ExtraDeskTypeInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ExtraDeskTypeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.ExtraDeskTypeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_ExtraDeskTypeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_ExtraDeskTypeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.ExtraDeskTypeInfo.class, Mahjong.ExtraDeskTypeInfo.Builder.class);
      }

      // Construct using Mahjong.ExtraDeskTypeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        hongzhong_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        qidui_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        zhuaniao_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        piaofen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        shanghuo_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_ExtraDeskTypeInfo_descriptor;
      }

      public Mahjong.ExtraDeskTypeInfo getDefaultInstanceForType() {
        return Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
      }

      public Mahjong.ExtraDeskTypeInfo build() {
        Mahjong.ExtraDeskTypeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.ExtraDeskTypeInfo buildPartial() {
        Mahjong.ExtraDeskTypeInfo result = new Mahjong.ExtraDeskTypeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hongzhong_ = hongzhong_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.qidui_ = qidui_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.zhuaniao_ = zhuaniao_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.piaofen_ = piaofen_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.shanghuo_ = shanghuo_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.ExtraDeskTypeInfo) {
          return mergeFrom((Mahjong.ExtraDeskTypeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.ExtraDeskTypeInfo other) {
        if (other == Mahjong.ExtraDeskTypeInfo.getDefaultInstance()) return this;
        if (other.hasHongzhong()) {
          setHongzhong(other.getHongzhong());
        }
        if (other.hasQidui()) {
          setQidui(other.getQidui());
        }
        if (other.hasZhuaniao()) {
          setZhuaniao(other.getZhuaniao());
        }
        if (other.hasPiaofen()) {
          setPiaofen(other.getPiaofen());
        }
        if (other.hasShanghuo()) {
          setShanghuo(other.getShanghuo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.ExtraDeskTypeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.ExtraDeskTypeInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool hongzhong = 1;
      private boolean hongzhong_ ;
      /**
       * <code>optional bool hongzhong = 1;</code>
       *
       * <pre>
       * 红中癞子
       * </pre>
       */
      public boolean hasHongzhong() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool hongzhong = 1;</code>
       *
       * <pre>
       * 红中癞子
       * </pre>
       */
      public boolean getHongzhong() {
        return hongzhong_;
      }
      /**
       * <code>optional bool hongzhong = 1;</code>
       *
       * <pre>
       * 红中癞子
       * </pre>
       */
      public Builder setHongzhong(boolean value) {
        bitField0_ |= 0x00000001;
        hongzhong_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hongzhong = 1;</code>
       *
       * <pre>
       * 红中癞子
       * </pre>
       */
      public Builder clearHongzhong() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hongzhong_ = false;
        onChanged();
        return this;
      }

      // optional bool qidui = 2;
      private boolean qidui_ ;
      /**
       * <code>optional bool qidui = 2;</code>
       *
       * <pre>
       * 可胡七对
       * </pre>
       */
      public boolean hasQidui() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool qidui = 2;</code>
       *
       * <pre>
       * 可胡七对
       * </pre>
       */
      public boolean getQidui() {
        return qidui_;
      }
      /**
       * <code>optional bool qidui = 2;</code>
       *
       * <pre>
       * 可胡七对
       * </pre>
       */
      public Builder setQidui(boolean value) {
        bitField0_ |= 0x00000002;
        qidui_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool qidui = 2;</code>
       *
       * <pre>
       * 可胡七对
       * </pre>
       */
      public Builder clearQidui() {
        bitField0_ = (bitField0_ & ~0x00000002);
        qidui_ = false;
        onChanged();
        return this;
      }

      // optional int32 zhuaniao = 3;
      private int zhuaniao_ ;
      /**
       * <code>optional int32 zhuaniao = 3;</code>
       *
       * <pre>
       * 抓鸟  抓几鸟 一马平川
       * </pre>
       */
      public boolean hasZhuaniao() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 zhuaniao = 3;</code>
       *
       * <pre>
       * 抓鸟  抓几鸟 一马平川
       * </pre>
       */
      public int getZhuaniao() {
        return zhuaniao_;
      }
      /**
       * <code>optional int32 zhuaniao = 3;</code>
       *
       * <pre>
       * 抓鸟  抓几鸟 一马平川
       * </pre>
       */
      public Builder setZhuaniao(int value) {
        bitField0_ |= 0x00000004;
        zhuaniao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zhuaniao = 3;</code>
       *
       * <pre>
       * 抓鸟  抓几鸟 一马平川
       * </pre>
       */
      public Builder clearZhuaniao() {
        bitField0_ = (bitField0_ & ~0x00000004);
        zhuaniao_ = 0;
        onChanged();
        return this;
      }

      // optional int32 piaofen = 4;
      private int piaofen_ ;
      /**
       * <code>optional int32 piaofen = 4;</code>
       *
       * <pre>
       * 飘分
       * </pre>
       */
      public boolean hasPiaofen() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 piaofen = 4;</code>
       *
       * <pre>
       * 飘分
       * </pre>
       */
      public int getPiaofen() {
        return piaofen_;
      }
      /**
       * <code>optional int32 piaofen = 4;</code>
       *
       * <pre>
       * 飘分
       * </pre>
       */
      public Builder setPiaofen(int value) {
        bitField0_ |= 0x00000008;
        piaofen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 piaofen = 4;</code>
       *
       * <pre>
       * 飘分
       * </pre>
       */
      public Builder clearPiaofen() {
        bitField0_ = (bitField0_ & ~0x00000008);
        piaofen_ = 0;
        onChanged();
        return this;
      }

      // optional bool shanghuo = 5;
      private boolean shanghuo_ ;
      /**
       * <code>optional bool shanghuo = 5;</code>
       *
       * <pre>
       * 上火
       * </pre>
       */
      public boolean hasShanghuo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool shanghuo = 5;</code>
       *
       * <pre>
       * 上火
       * </pre>
       */
      public boolean getShanghuo() {
        return shanghuo_;
      }
      /**
       * <code>optional bool shanghuo = 5;</code>
       *
       * <pre>
       * 上火
       * </pre>
       */
      public Builder setShanghuo(boolean value) {
        bitField0_ |= 0x00000010;
        shanghuo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool shanghuo = 5;</code>
       *
       * <pre>
       * 上火
       * </pre>
       */
      public Builder clearShanghuo() {
        bitField0_ = (bitField0_ & ~0x00000010);
        shanghuo_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ExtraDeskTypeInfo)
    }

    static {
      defaultInstance = new ExtraDeskTypeInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ExtraDeskTypeInfo)
  }

  public interface GameEnterDeskReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 dst_desk_id = 1;
    /**
     * <code>optional int32 dst_desk_id = 1;</code>
     *
     * <pre>
     * 目标deskid
     * </pre>
     */
    boolean hasDstDeskId();
    /**
     * <code>optional int32 dst_desk_id = 1;</code>
     *
     * <pre>
     * 目标deskid
     * </pre>
     */
    int getDstDeskId();

    // optional int32 new_desk = 2;
    /**
     * <code>optional int32 new_desk = 2;</code>
     *
     * <pre>
     * 是否创建新桌子, 0：否；1：是
     * </pre>
     */
    boolean hasNewDesk();
    /**
     * <code>optional int32 new_desk = 2;</code>
     *
     * <pre>
     * 是否创建新桌子, 0：否；1：是
     * </pre>
     */
    int getNewDesk();

    // optional int32 reconnect = 3;
    /**
     * <code>optional int32 reconnect = 3;</code>
     *
     * <pre>
     * 断线重连的标识，0：否；1：是 
     * </pre>
     */
    boolean hasReconnect();
    /**
     * <code>optional int32 reconnect = 3;</code>
     *
     * <pre>
     * 断线重连的标识，0：否；1：是 
     * </pre>
     */
    int getReconnect();

    // optional int32 card_num = 4;
    /**
     * <code>optional int32 card_num = 4;</code>
     *
     * <pre>
     * 消耗房卡数
     * </pre>
     */
    boolean hasCardNum();
    /**
     * <code>optional int32 card_num = 4;</code>
     *
     * <pre>
     * 消耗房卡数
     * </pre>
     */
    int getCardNum();

    // optional int32 desk_type = 5;
    /**
     * <code>optional int32 desk_type = 5;</code>
     *
     * <pre>
     * 1万载 4局 2转转 8局 
     * </pre>
     */
    boolean hasDeskType();
    /**
     * <code>optional int32 desk_type = 5;</code>
     *
     * <pre>
     * 1万载 4局 2转转 8局 
     * </pre>
     */
    int getDeskType();

    // optional int32 seat_limit = 6;
    /**
     * <code>optional int32 seat_limit = 6;</code>
     *
     * <pre>
     * 所开房间为几人桌
     * </pre>
     */
    boolean hasSeatLimit();
    /**
     * <code>optional int32 seat_limit = 6;</code>
     *
     * <pre>
     * 所开房间为几人桌
     * </pre>
     */
    int getSeatLimit();

    // optional int32 win_type = 7;
    /**
     * <code>optional int32 win_type = 7;</code>
     *
     * <pre>
     * 1点炮 2自摸
     * </pre>
     */
    boolean hasWinType();
    /**
     * <code>optional int32 win_type = 7;</code>
     *
     * <pre>
     * 1点炮 2自摸
     * </pre>
     */
    int getWinType();

    // optional .ExtraDeskTypeInfo extra_type = 8;
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 8;</code>
     *
     * <pre>
     * 额外信息
     * </pre>
     */
    boolean hasExtraType();
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 8;</code>
     *
     * <pre>
     * 额外信息
     * </pre>
     */
    Mahjong.ExtraDeskTypeInfo getExtraType();
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 8;</code>
     *
     * <pre>
     * 额外信息
     * </pre>
     */
    Mahjong.ExtraDeskTypeInfoOrBuilder getExtraTypeOrBuilder();
  }
  /**
   * Protobuf type {@code GameEnterDeskReq}
   *
   * <pre>
   *客户端请求进入牌桌 4001
   * </pre>
   */
  public static final class GameEnterDeskReq extends
      com.google.protobuf.GeneratedMessage
      implements GameEnterDeskReqOrBuilder {
    // Use GameEnterDeskReq.newBuilder() to construct.
    private GameEnterDeskReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameEnterDeskReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameEnterDeskReq defaultInstance;
    public static GameEnterDeskReq getDefaultInstance() {
      return defaultInstance;
    }

    public GameEnterDeskReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameEnterDeskReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              dstDeskId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              newDesk_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              reconnect_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              cardNum_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              deskType_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              seatLimit_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              winType_ = input.readInt32();
              break;
            }
            case 66: {
              Mahjong.ExtraDeskTypeInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = extraType_.toBuilder();
              }
              extraType_ = input.readMessage(Mahjong.ExtraDeskTypeInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(extraType_);
                extraType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameEnterDeskReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameEnterDeskReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameEnterDeskReq.class, Mahjong.GameEnterDeskReq.Builder.class);
    }

    public static com.google.protobuf.Parser<GameEnterDeskReq> PARSER =
        new com.google.protobuf.AbstractParser<GameEnterDeskReq>() {
      public GameEnterDeskReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameEnterDeskReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameEnterDeskReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 dst_desk_id = 1;
    public static final int DST_DESK_ID_FIELD_NUMBER = 1;
    private int dstDeskId_;
    /**
     * <code>optional int32 dst_desk_id = 1;</code>
     *
     * <pre>
     * 目标deskid
     * </pre>
     */
    public boolean hasDstDeskId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 dst_desk_id = 1;</code>
     *
     * <pre>
     * 目标deskid
     * </pre>
     */
    public int getDstDeskId() {
      return dstDeskId_;
    }

    // optional int32 new_desk = 2;
    public static final int NEW_DESK_FIELD_NUMBER = 2;
    private int newDesk_;
    /**
     * <code>optional int32 new_desk = 2;</code>
     *
     * <pre>
     * 是否创建新桌子, 0：否；1：是
     * </pre>
     */
    public boolean hasNewDesk() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 new_desk = 2;</code>
     *
     * <pre>
     * 是否创建新桌子, 0：否；1：是
     * </pre>
     */
    public int getNewDesk() {
      return newDesk_;
    }

    // optional int32 reconnect = 3;
    public static final int RECONNECT_FIELD_NUMBER = 3;
    private int reconnect_;
    /**
     * <code>optional int32 reconnect = 3;</code>
     *
     * <pre>
     * 断线重连的标识，0：否；1：是 
     * </pre>
     */
    public boolean hasReconnect() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 reconnect = 3;</code>
     *
     * <pre>
     * 断线重连的标识，0：否；1：是 
     * </pre>
     */
    public int getReconnect() {
      return reconnect_;
    }

    // optional int32 card_num = 4;
    public static final int CARD_NUM_FIELD_NUMBER = 4;
    private int cardNum_;
    /**
     * <code>optional int32 card_num = 4;</code>
     *
     * <pre>
     * 消耗房卡数
     * </pre>
     */
    public boolean hasCardNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 card_num = 4;</code>
     *
     * <pre>
     * 消耗房卡数
     * </pre>
     */
    public int getCardNum() {
      return cardNum_;
    }

    // optional int32 desk_type = 5;
    public static final int DESK_TYPE_FIELD_NUMBER = 5;
    private int deskType_;
    /**
     * <code>optional int32 desk_type = 5;</code>
     *
     * <pre>
     * 1万载 4局 2转转 8局 
     * </pre>
     */
    public boolean hasDeskType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 desk_type = 5;</code>
     *
     * <pre>
     * 1万载 4局 2转转 8局 
     * </pre>
     */
    public int getDeskType() {
      return deskType_;
    }

    // optional int32 seat_limit = 6;
    public static final int SEAT_LIMIT_FIELD_NUMBER = 6;
    private int seatLimit_;
    /**
     * <code>optional int32 seat_limit = 6;</code>
     *
     * <pre>
     * 所开房间为几人桌
     * </pre>
     */
    public boolean hasSeatLimit() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 seat_limit = 6;</code>
     *
     * <pre>
     * 所开房间为几人桌
     * </pre>
     */
    public int getSeatLimit() {
      return seatLimit_;
    }

    // optional int32 win_type = 7;
    public static final int WIN_TYPE_FIELD_NUMBER = 7;
    private int winType_;
    /**
     * <code>optional int32 win_type = 7;</code>
     *
     * <pre>
     * 1点炮 2自摸
     * </pre>
     */
    public boolean hasWinType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 win_type = 7;</code>
     *
     * <pre>
     * 1点炮 2自摸
     * </pre>
     */
    public int getWinType() {
      return winType_;
    }

    // optional .ExtraDeskTypeInfo extra_type = 8;
    public static final int EXTRA_TYPE_FIELD_NUMBER = 8;
    private Mahjong.ExtraDeskTypeInfo extraType_;
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 8;</code>
     *
     * <pre>
     * 额外信息
     * </pre>
     */
    public boolean hasExtraType() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 8;</code>
     *
     * <pre>
     * 额外信息
     * </pre>
     */
    public Mahjong.ExtraDeskTypeInfo getExtraType() {
      return extraType_;
    }
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 8;</code>
     *
     * <pre>
     * 额外信息
     * </pre>
     */
    public Mahjong.ExtraDeskTypeInfoOrBuilder getExtraTypeOrBuilder() {
      return extraType_;
    }

    private void initFields() {
      dstDeskId_ = 0;
      newDesk_ = 0;
      reconnect_ = 0;
      cardNum_ = 0;
      deskType_ = 0;
      seatLimit_ = 0;
      winType_ = 0;
      extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, dstDeskId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, newDesk_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, reconnect_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, cardNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, deskType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, seatLimit_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, winType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, extraType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, dstDeskId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, newDesk_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, reconnect_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, cardNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, deskType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, seatLimit_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, winType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, extraType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameEnterDeskReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameEnterDeskReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameEnterDeskReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameEnterDeskReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameEnterDeskReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameEnterDeskReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameEnterDeskReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameEnterDeskReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameEnterDeskReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameEnterDeskReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameEnterDeskReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameEnterDeskReq}
     *
     * <pre>
     *客户端请求进入牌桌 4001
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameEnterDeskReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameEnterDeskReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameEnterDeskReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameEnterDeskReq.class, Mahjong.GameEnterDeskReq.Builder.class);
      }

      // Construct using Mahjong.GameEnterDeskReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getExtraTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        dstDeskId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        newDesk_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        reconnect_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cardNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        deskType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        seatLimit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        winType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (extraTypeBuilder_ == null) {
          extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
        } else {
          extraTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameEnterDeskReq_descriptor;
      }

      public Mahjong.GameEnterDeskReq getDefaultInstanceForType() {
        return Mahjong.GameEnterDeskReq.getDefaultInstance();
      }

      public Mahjong.GameEnterDeskReq build() {
        Mahjong.GameEnterDeskReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameEnterDeskReq buildPartial() {
        Mahjong.GameEnterDeskReq result = new Mahjong.GameEnterDeskReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dstDeskId_ = dstDeskId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.newDesk_ = newDesk_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.reconnect_ = reconnect_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cardNum_ = cardNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.deskType_ = deskType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.seatLimit_ = seatLimit_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.winType_ = winType_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (extraTypeBuilder_ == null) {
          result.extraType_ = extraType_;
        } else {
          result.extraType_ = extraTypeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameEnterDeskReq) {
          return mergeFrom((Mahjong.GameEnterDeskReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameEnterDeskReq other) {
        if (other == Mahjong.GameEnterDeskReq.getDefaultInstance()) return this;
        if (other.hasDstDeskId()) {
          setDstDeskId(other.getDstDeskId());
        }
        if (other.hasNewDesk()) {
          setNewDesk(other.getNewDesk());
        }
        if (other.hasReconnect()) {
          setReconnect(other.getReconnect());
        }
        if (other.hasCardNum()) {
          setCardNum(other.getCardNum());
        }
        if (other.hasDeskType()) {
          setDeskType(other.getDeskType());
        }
        if (other.hasSeatLimit()) {
          setSeatLimit(other.getSeatLimit());
        }
        if (other.hasWinType()) {
          setWinType(other.getWinType());
        }
        if (other.hasExtraType()) {
          mergeExtraType(other.getExtraType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameEnterDeskReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameEnterDeskReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 dst_desk_id = 1;
      private int dstDeskId_ ;
      /**
       * <code>optional int32 dst_desk_id = 1;</code>
       *
       * <pre>
       * 目标deskid
       * </pre>
       */
      public boolean hasDstDeskId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 dst_desk_id = 1;</code>
       *
       * <pre>
       * 目标deskid
       * </pre>
       */
      public int getDstDeskId() {
        return dstDeskId_;
      }
      /**
       * <code>optional int32 dst_desk_id = 1;</code>
       *
       * <pre>
       * 目标deskid
       * </pre>
       */
      public Builder setDstDeskId(int value) {
        bitField0_ |= 0x00000001;
        dstDeskId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dst_desk_id = 1;</code>
       *
       * <pre>
       * 目标deskid
       * </pre>
       */
      public Builder clearDstDeskId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dstDeskId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 new_desk = 2;
      private int newDesk_ ;
      /**
       * <code>optional int32 new_desk = 2;</code>
       *
       * <pre>
       * 是否创建新桌子, 0：否；1：是
       * </pre>
       */
      public boolean hasNewDesk() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 new_desk = 2;</code>
       *
       * <pre>
       * 是否创建新桌子, 0：否；1：是
       * </pre>
       */
      public int getNewDesk() {
        return newDesk_;
      }
      /**
       * <code>optional int32 new_desk = 2;</code>
       *
       * <pre>
       * 是否创建新桌子, 0：否；1：是
       * </pre>
       */
      public Builder setNewDesk(int value) {
        bitField0_ |= 0x00000002;
        newDesk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 new_desk = 2;</code>
       *
       * <pre>
       * 是否创建新桌子, 0：否；1：是
       * </pre>
       */
      public Builder clearNewDesk() {
        bitField0_ = (bitField0_ & ~0x00000002);
        newDesk_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reconnect = 3;
      private int reconnect_ ;
      /**
       * <code>optional int32 reconnect = 3;</code>
       *
       * <pre>
       * 断线重连的标识，0：否；1：是 
       * </pre>
       */
      public boolean hasReconnect() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 reconnect = 3;</code>
       *
       * <pre>
       * 断线重连的标识，0：否；1：是 
       * </pre>
       */
      public int getReconnect() {
        return reconnect_;
      }
      /**
       * <code>optional int32 reconnect = 3;</code>
       *
       * <pre>
       * 断线重连的标识，0：否；1：是 
       * </pre>
       */
      public Builder setReconnect(int value) {
        bitField0_ |= 0x00000004;
        reconnect_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reconnect = 3;</code>
       *
       * <pre>
       * 断线重连的标识，0：否；1：是 
       * </pre>
       */
      public Builder clearReconnect() {
        bitField0_ = (bitField0_ & ~0x00000004);
        reconnect_ = 0;
        onChanged();
        return this;
      }

      // optional int32 card_num = 4;
      private int cardNum_ ;
      /**
       * <code>optional int32 card_num = 4;</code>
       *
       * <pre>
       * 消耗房卡数
       * </pre>
       */
      public boolean hasCardNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 card_num = 4;</code>
       *
       * <pre>
       * 消耗房卡数
       * </pre>
       */
      public int getCardNum() {
        return cardNum_;
      }
      /**
       * <code>optional int32 card_num = 4;</code>
       *
       * <pre>
       * 消耗房卡数
       * </pre>
       */
      public Builder setCardNum(int value) {
        bitField0_ |= 0x00000008;
        cardNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_num = 4;</code>
       *
       * <pre>
       * 消耗房卡数
       * </pre>
       */
      public Builder clearCardNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cardNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 desk_type = 5;
      private int deskType_ ;
      /**
       * <code>optional int32 desk_type = 5;</code>
       *
       * <pre>
       * 1万载 4局 2转转 8局 
       * </pre>
       */
      public boolean hasDeskType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 desk_type = 5;</code>
       *
       * <pre>
       * 1万载 4局 2转转 8局 
       * </pre>
       */
      public int getDeskType() {
        return deskType_;
      }
      /**
       * <code>optional int32 desk_type = 5;</code>
       *
       * <pre>
       * 1万载 4局 2转转 8局 
       * </pre>
       */
      public Builder setDeskType(int value) {
        bitField0_ |= 0x00000010;
        deskType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 desk_type = 5;</code>
       *
       * <pre>
       * 1万载 4局 2转转 8局 
       * </pre>
       */
      public Builder clearDeskType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        deskType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat_limit = 6;
      private int seatLimit_ ;
      /**
       * <code>optional int32 seat_limit = 6;</code>
       *
       * <pre>
       * 所开房间为几人桌
       * </pre>
       */
      public boolean hasSeatLimit() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 seat_limit = 6;</code>
       *
       * <pre>
       * 所开房间为几人桌
       * </pre>
       */
      public int getSeatLimit() {
        return seatLimit_;
      }
      /**
       * <code>optional int32 seat_limit = 6;</code>
       *
       * <pre>
       * 所开房间为几人桌
       * </pre>
       */
      public Builder setSeatLimit(int value) {
        bitField0_ |= 0x00000020;
        seatLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_limit = 6;</code>
       *
       * <pre>
       * 所开房间为几人桌
       * </pre>
       */
      public Builder clearSeatLimit() {
        bitField0_ = (bitField0_ & ~0x00000020);
        seatLimit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 win_type = 7;
      private int winType_ ;
      /**
       * <code>optional int32 win_type = 7;</code>
       *
       * <pre>
       * 1点炮 2自摸
       * </pre>
       */
      public boolean hasWinType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 win_type = 7;</code>
       *
       * <pre>
       * 1点炮 2自摸
       * </pre>
       */
      public int getWinType() {
        return winType_;
      }
      /**
       * <code>optional int32 win_type = 7;</code>
       *
       * <pre>
       * 1点炮 2自摸
       * </pre>
       */
      public Builder setWinType(int value) {
        bitField0_ |= 0x00000040;
        winType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 win_type = 7;</code>
       *
       * <pre>
       * 1点炮 2自摸
       * </pre>
       */
      public Builder clearWinType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        winType_ = 0;
        onChanged();
        return this;
      }

      // optional .ExtraDeskTypeInfo extra_type = 8;
      private Mahjong.ExtraDeskTypeInfo extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.ExtraDeskTypeInfo, Mahjong.ExtraDeskTypeInfo.Builder, Mahjong.ExtraDeskTypeInfoOrBuilder> extraTypeBuilder_;
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 8;</code>
       *
       * <pre>
       * 额外信息
       * </pre>
       */
      public boolean hasExtraType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 8;</code>
       *
       * <pre>
       * 额外信息
       * </pre>
       */
      public Mahjong.ExtraDeskTypeInfo getExtraType() {
        if (extraTypeBuilder_ == null) {
          return extraType_;
        } else {
          return extraTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 8;</code>
       *
       * <pre>
       * 额外信息
       * </pre>
       */
      public Builder setExtraType(Mahjong.ExtraDeskTypeInfo value) {
        if (extraTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          extraType_ = value;
          onChanged();
        } else {
          extraTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 8;</code>
       *
       * <pre>
       * 额外信息
       * </pre>
       */
      public Builder setExtraType(
          Mahjong.ExtraDeskTypeInfo.Builder builderForValue) {
        if (extraTypeBuilder_ == null) {
          extraType_ = builderForValue.build();
          onChanged();
        } else {
          extraTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 8;</code>
       *
       * <pre>
       * 额外信息
       * </pre>
       */
      public Builder mergeExtraType(Mahjong.ExtraDeskTypeInfo value) {
        if (extraTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              extraType_ != Mahjong.ExtraDeskTypeInfo.getDefaultInstance()) {
            extraType_ =
              Mahjong.ExtraDeskTypeInfo.newBuilder(extraType_).mergeFrom(value).buildPartial();
          } else {
            extraType_ = value;
          }
          onChanged();
        } else {
          extraTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 8;</code>
       *
       * <pre>
       * 额外信息
       * </pre>
       */
      public Builder clearExtraType() {
        if (extraTypeBuilder_ == null) {
          extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
          onChanged();
        } else {
          extraTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 8;</code>
       *
       * <pre>
       * 额外信息
       * </pre>
       */
      public Mahjong.ExtraDeskTypeInfo.Builder getExtraTypeBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getExtraTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 8;</code>
       *
       * <pre>
       * 额外信息
       * </pre>
       */
      public Mahjong.ExtraDeskTypeInfoOrBuilder getExtraTypeOrBuilder() {
        if (extraTypeBuilder_ != null) {
          return extraTypeBuilder_.getMessageOrBuilder();
        } else {
          return extraType_;
        }
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 8;</code>
       *
       * <pre>
       * 额外信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.ExtraDeskTypeInfo, Mahjong.ExtraDeskTypeInfo.Builder, Mahjong.ExtraDeskTypeInfoOrBuilder> 
          getExtraTypeFieldBuilder() {
        if (extraTypeBuilder_ == null) {
          extraTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Mahjong.ExtraDeskTypeInfo, Mahjong.ExtraDeskTypeInfo.Builder, Mahjong.ExtraDeskTypeInfoOrBuilder>(
                  extraType_,
                  getParentForChildren(),
                  isClean());
          extraType_ = null;
        }
        return extraTypeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:GameEnterDeskReq)
    }

    static {
      defaultInstance = new GameEnterDeskReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameEnterDeskReq)
  }

  public interface GameEnterDeskRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 ret = 1;
    /**
     * <code>optional int32 ret = 1;</code>
     *
     * <pre>
     * 进桌响应，为0代表成功
     * </pre>
     */
    boolean hasRet();
    /**
     * <code>optional int32 ret = 1;</code>
     *
     * <pre>
     * 进桌响应，为0代表成功
     * </pre>
     */
    int getRet();
  }
  /**
   * Protobuf type {@code GameEnterDeskRsp}
   */
  public static final class GameEnterDeskRsp extends
      com.google.protobuf.GeneratedMessage
      implements GameEnterDeskRspOrBuilder {
    // Use GameEnterDeskRsp.newBuilder() to construct.
    private GameEnterDeskRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameEnterDeskRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameEnterDeskRsp defaultInstance;
    public static GameEnterDeskRsp getDefaultInstance() {
      return defaultInstance;
    }

    public GameEnterDeskRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameEnterDeskRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ret_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameEnterDeskRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameEnterDeskRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameEnterDeskRsp.class, Mahjong.GameEnterDeskRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<GameEnterDeskRsp> PARSER =
        new com.google.protobuf.AbstractParser<GameEnterDeskRsp>() {
      public GameEnterDeskRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameEnterDeskRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameEnterDeskRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 ret = 1;
    public static final int RET_FIELD_NUMBER = 1;
    private int ret_;
    /**
     * <code>optional int32 ret = 1;</code>
     *
     * <pre>
     * 进桌响应，为0代表成功
     * </pre>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ret = 1;</code>
     *
     * <pre>
     * 进桌响应，为0代表成功
     * </pre>
     */
    public int getRet() {
      return ret_;
    }

    private void initFields() {
      ret_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ret_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ret_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameEnterDeskRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameEnterDeskRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameEnterDeskRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameEnterDeskRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameEnterDeskRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameEnterDeskRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameEnterDeskRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameEnterDeskRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameEnterDeskRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameEnterDeskRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameEnterDeskRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameEnterDeskRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameEnterDeskRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameEnterDeskRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameEnterDeskRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameEnterDeskRsp.class, Mahjong.GameEnterDeskRsp.Builder.class);
      }

      // Construct using Mahjong.GameEnterDeskRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameEnterDeskRsp_descriptor;
      }

      public Mahjong.GameEnterDeskRsp getDefaultInstanceForType() {
        return Mahjong.GameEnterDeskRsp.getDefaultInstance();
      }

      public Mahjong.GameEnterDeskRsp build() {
        Mahjong.GameEnterDeskRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameEnterDeskRsp buildPartial() {
        Mahjong.GameEnterDeskRsp result = new Mahjong.GameEnterDeskRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ret_ = ret_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameEnterDeskRsp) {
          return mergeFrom((Mahjong.GameEnterDeskRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameEnterDeskRsp other) {
        if (other == Mahjong.GameEnterDeskRsp.getDefaultInstance()) return this;
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameEnterDeskRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameEnterDeskRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 ret = 1;
      private int ret_ ;
      /**
       * <code>optional int32 ret = 1;</code>
       *
       * <pre>
       * 进桌响应，为0代表成功
       * </pre>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ret = 1;</code>
       *
       * <pre>
       * 进桌响应，为0代表成功
       * </pre>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       *
       * <pre>
       * 进桌响应，为0代表成功
       * </pre>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000001;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       *
       * <pre>
       * 进桌响应，为0代表成功
       * </pre>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ret_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameEnterDeskRsp)
    }

    static {
      defaultInstance = new GameEnterDeskRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameEnterDeskRsp)
  }

  public interface UserRoomCardChangeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 room_card = 1;
    /**
     * <code>optional int32 room_card = 1;</code>
     *
     * <pre>
     * 房卡变动时下发给客户端最新的用户房卡数
     * </pre>
     */
    boolean hasRoomCard();
    /**
     * <code>optional int32 room_card = 1;</code>
     *
     * <pre>
     * 房卡变动时下发给客户端最新的用户房卡数
     * </pre>
     */
    int getRoomCard();

    // optional int32 change_reason = 2;
    /**
     * <code>optional int32 change_reason = 2;</code>
     *
     * <pre>
     * 房卡变动原因，1：邀请人玩游戏加房卡
     * </pre>
     */
    boolean hasChangeReason();
    /**
     * <code>optional int32 change_reason = 2;</code>
     *
     * <pre>
     * 房卡变动原因，1：邀请人玩游戏加房卡
     * </pre>
     */
    int getChangeReason();
  }
  /**
   * Protobuf type {@code UserRoomCardChange}
   *
   * <pre>
   *房卡变动通知 4002
   * </pre>
   */
  public static final class UserRoomCardChange extends
      com.google.protobuf.GeneratedMessage
      implements UserRoomCardChangeOrBuilder {
    // Use UserRoomCardChange.newBuilder() to construct.
    private UserRoomCardChange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UserRoomCardChange(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UserRoomCardChange defaultInstance;
    public static UserRoomCardChange getDefaultInstance() {
      return defaultInstance;
    }

    public UserRoomCardChange getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UserRoomCardChange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomCard_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              changeReason_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_UserRoomCardChange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_UserRoomCardChange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.UserRoomCardChange.class, Mahjong.UserRoomCardChange.Builder.class);
    }

    public static com.google.protobuf.Parser<UserRoomCardChange> PARSER =
        new com.google.protobuf.AbstractParser<UserRoomCardChange>() {
      public UserRoomCardChange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserRoomCardChange(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserRoomCardChange> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 room_card = 1;
    public static final int ROOM_CARD_FIELD_NUMBER = 1;
    private int roomCard_;
    /**
     * <code>optional int32 room_card = 1;</code>
     *
     * <pre>
     * 房卡变动时下发给客户端最新的用户房卡数
     * </pre>
     */
    public boolean hasRoomCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 room_card = 1;</code>
     *
     * <pre>
     * 房卡变动时下发给客户端最新的用户房卡数
     * </pre>
     */
    public int getRoomCard() {
      return roomCard_;
    }

    // optional int32 change_reason = 2;
    public static final int CHANGE_REASON_FIELD_NUMBER = 2;
    private int changeReason_;
    /**
     * <code>optional int32 change_reason = 2;</code>
     *
     * <pre>
     * 房卡变动原因，1：邀请人玩游戏加房卡
     * </pre>
     */
    public boolean hasChangeReason() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 change_reason = 2;</code>
     *
     * <pre>
     * 房卡变动原因，1：邀请人玩游戏加房卡
     * </pre>
     */
    public int getChangeReason() {
      return changeReason_;
    }

    private void initFields() {
      roomCard_ = 0;
      changeReason_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, changeReason_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomCard_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, changeReason_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.UserRoomCardChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.UserRoomCardChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.UserRoomCardChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.UserRoomCardChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.UserRoomCardChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.UserRoomCardChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.UserRoomCardChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.UserRoomCardChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.UserRoomCardChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.UserRoomCardChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.UserRoomCardChange prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code UserRoomCardChange}
     *
     * <pre>
     *房卡变动通知 4002
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.UserRoomCardChangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_UserRoomCardChange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_UserRoomCardChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.UserRoomCardChange.class, Mahjong.UserRoomCardChange.Builder.class);
      }

      // Construct using Mahjong.UserRoomCardChange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        changeReason_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_UserRoomCardChange_descriptor;
      }

      public Mahjong.UserRoomCardChange getDefaultInstanceForType() {
        return Mahjong.UserRoomCardChange.getDefaultInstance();
      }

      public Mahjong.UserRoomCardChange build() {
        Mahjong.UserRoomCardChange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.UserRoomCardChange buildPartial() {
        Mahjong.UserRoomCardChange result = new Mahjong.UserRoomCardChange(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomCard_ = roomCard_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.changeReason_ = changeReason_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.UserRoomCardChange) {
          return mergeFrom((Mahjong.UserRoomCardChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.UserRoomCardChange other) {
        if (other == Mahjong.UserRoomCardChange.getDefaultInstance()) return this;
        if (other.hasRoomCard()) {
          setRoomCard(other.getRoomCard());
        }
        if (other.hasChangeReason()) {
          setChangeReason(other.getChangeReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.UserRoomCardChange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.UserRoomCardChange) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 room_card = 1;
      private int roomCard_ ;
      /**
       * <code>optional int32 room_card = 1;</code>
       *
       * <pre>
       * 房卡变动时下发给客户端最新的用户房卡数
       * </pre>
       */
      public boolean hasRoomCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 room_card = 1;</code>
       *
       * <pre>
       * 房卡变动时下发给客户端最新的用户房卡数
       * </pre>
       */
      public int getRoomCard() {
        return roomCard_;
      }
      /**
       * <code>optional int32 room_card = 1;</code>
       *
       * <pre>
       * 房卡变动时下发给客户端最新的用户房卡数
       * </pre>
       */
      public Builder setRoomCard(int value) {
        bitField0_ |= 0x00000001;
        roomCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 room_card = 1;</code>
       *
       * <pre>
       * 房卡变动时下发给客户端最新的用户房卡数
       * </pre>
       */
      public Builder clearRoomCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 change_reason = 2;
      private int changeReason_ ;
      /**
       * <code>optional int32 change_reason = 2;</code>
       *
       * <pre>
       * 房卡变动原因，1：邀请人玩游戏加房卡
       * </pre>
       */
      public boolean hasChangeReason() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 change_reason = 2;</code>
       *
       * <pre>
       * 房卡变动原因，1：邀请人玩游戏加房卡
       * </pre>
       */
      public int getChangeReason() {
        return changeReason_;
      }
      /**
       * <code>optional int32 change_reason = 2;</code>
       *
       * <pre>
       * 房卡变动原因，1：邀请人玩游戏加房卡
       * </pre>
       */
      public Builder setChangeReason(int value) {
        bitField0_ |= 0x00000002;
        changeReason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 change_reason = 2;</code>
       *
       * <pre>
       * 房卡变动原因，1：邀请人玩游戏加房卡
       * </pre>
       */
      public Builder clearChangeReason() {
        bitField0_ = (bitField0_ & ~0x00000002);
        changeReason_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:UserRoomCardChange)
    }

    static {
      defaultInstance = new UserRoomCardChange(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:UserRoomCardChange)
  }

  public interface GameUserInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 status = 1;
    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     * 1010未准备 1020已准备 1030玩游戏中 1001同意解散房间 1002拒绝解散房间
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     * 1010未准备 1020已准备 1030玩游戏中 1001同意解散房间 1002拒绝解散房间
     * </pre>
     */
    int getStatus();

    // optional int32 uin = 2;
    /**
     * <code>optional int32 uin = 2;</code>
     *
     * <pre>
     * 用户id
     * </pre>
     */
    boolean hasUin();
    /**
     * <code>optional int32 uin = 2;</code>
     *
     * <pre>
     * 用户id
     * </pre>
     */
    int getUin();

    // optional string nick = 3;
    /**
     * <code>optional string nick = 3;</code>
     *
     * <pre>
     * 用户昵称
     * </pre>
     */
    boolean hasNick();
    /**
     * <code>optional string nick = 3;</code>
     *
     * <pre>
     * 用户昵称
     * </pre>
     */
    java.lang.String getNick();
    /**
     * <code>optional string nick = 3;</code>
     *
     * <pre>
     * 用户昵称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNickBytes();

    // optional int32 seatid = 4;
    /**
     * <code>optional int32 seatid = 4;</code>
     *
     * <pre>
     * 用户座位号
     * </pre>
     */
    boolean hasSeatid();
    /**
     * <code>optional int32 seatid = 4;</code>
     *
     * <pre>
     * 用户座位号
     * </pre>
     */
    int getSeatid();

    // optional int32 sex = 5;
    /**
     * <code>optional int32 sex = 5;</code>
     *
     * <pre>
     * 用户性别
     * </pre>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 5;</code>
     *
     * <pre>
     * 用户性别
     * </pre>
     */
    int getSex();

    // optional string portrait = 6;
    /**
     * <code>optional string portrait = 6;</code>
     *
     * <pre>
     * 头像url
     * </pre>
     */
    boolean hasPortrait();
    /**
     * <code>optional string portrait = 6;</code>
     *
     * <pre>
     * 头像url
     * </pre>
     */
    java.lang.String getPortrait();
    /**
     * <code>optional string portrait = 6;</code>
     *
     * <pre>
     * 头像url
     * </pre>
     */
    com.google.protobuf.ByteString
        getPortraitBytes();

    // optional int32 is_master = 7;
    /**
     * <code>optional int32 is_master = 7;</code>
     *
     * <pre>
     * 角色, 0:普通玩家；1:桌子创建人
     * </pre>
     */
    boolean hasIsMaster();
    /**
     * <code>optional int32 is_master = 7;</code>
     *
     * <pre>
     * 角色, 0:普通玩家；1:桌子创建人
     * </pre>
     */
    int getIsMaster();

    // optional int32 piaofen = 8;
    /**
     * <code>optional int32 piaofen = 8;</code>
     *
     * <pre>
     * 用户飘了多少分
     * </pre>
     */
    boolean hasPiaofen();
    /**
     * <code>optional int32 piaofen = 8;</code>
     *
     * <pre>
     * 用户飘了多少分
     * </pre>
     */
    int getPiaofen();

    // optional int32 shanghuo = 9;
    /**
     * <code>optional int32 shanghuo = 9;</code>
     *
     * <pre>
     * 是否选择了上火 1不上火 2上火
     * </pre>
     */
    boolean hasShanghuo();
    /**
     * <code>optional int32 shanghuo = 9;</code>
     *
     * <pre>
     * 是否选择了上火 1不上火 2上火
     * </pre>
     */
    int getShanghuo();

    // optional string ip = 10;
    /**
     * <code>optional string ip = 10;</code>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 10;</code>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 10;</code>
     */
    com.google.protobuf.ByteString
        getIpBytes();
  }
  /**
   * Protobuf type {@code GameUserInfo}
   */
  public static final class GameUserInfo extends
      com.google.protobuf.GeneratedMessage
      implements GameUserInfoOrBuilder {
    // Use GameUserInfo.newBuilder() to construct.
    private GameUserInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameUserInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameUserInfo defaultInstance;
    public static GameUserInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GameUserInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameUserInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              status_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              uin_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              nick_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              seatid_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              sex_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              portrait_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              isMaster_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              piaofen_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              shanghuo_ = input.readInt32();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              ip_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameUserInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameUserInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameUserInfo.class, Mahjong.GameUserInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GameUserInfo> PARSER =
        new com.google.protobuf.AbstractParser<GameUserInfo>() {
      public GameUserInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameUserInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameUserInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_;
    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     * 1010未准备 1020已准备 1030玩游戏中 1001同意解散房间 1002拒绝解散房间
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     * 1010未准备 1020已准备 1030玩游戏中 1001同意解散房间 1002拒绝解散房间
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // optional int32 uin = 2;
    public static final int UIN_FIELD_NUMBER = 2;
    private int uin_;
    /**
     * <code>optional int32 uin = 2;</code>
     *
     * <pre>
     * 用户id
     * </pre>
     */
    public boolean hasUin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 uin = 2;</code>
     *
     * <pre>
     * 用户id
     * </pre>
     */
    public int getUin() {
      return uin_;
    }

    // optional string nick = 3;
    public static final int NICK_FIELD_NUMBER = 3;
    private java.lang.Object nick_;
    /**
     * <code>optional string nick = 3;</code>
     *
     * <pre>
     * 用户昵称
     * </pre>
     */
    public boolean hasNick() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string nick = 3;</code>
     *
     * <pre>
     * 用户昵称
     * </pre>
     */
    public java.lang.String getNick() {
      java.lang.Object ref = nick_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nick_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nick = 3;</code>
     *
     * <pre>
     * 用户昵称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNickBytes() {
      java.lang.Object ref = nick_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nick_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 seatid = 4;
    public static final int SEATID_FIELD_NUMBER = 4;
    private int seatid_;
    /**
     * <code>optional int32 seatid = 4;</code>
     *
     * <pre>
     * 用户座位号
     * </pre>
     */
    public boolean hasSeatid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 seatid = 4;</code>
     *
     * <pre>
     * 用户座位号
     * </pre>
     */
    public int getSeatid() {
      return seatid_;
    }

    // optional int32 sex = 5;
    public static final int SEX_FIELD_NUMBER = 5;
    private int sex_;
    /**
     * <code>optional int32 sex = 5;</code>
     *
     * <pre>
     * 用户性别
     * </pre>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 sex = 5;</code>
     *
     * <pre>
     * 用户性别
     * </pre>
     */
    public int getSex() {
      return sex_;
    }

    // optional string portrait = 6;
    public static final int PORTRAIT_FIELD_NUMBER = 6;
    private java.lang.Object portrait_;
    /**
     * <code>optional string portrait = 6;</code>
     *
     * <pre>
     * 头像url
     * </pre>
     */
    public boolean hasPortrait() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string portrait = 6;</code>
     *
     * <pre>
     * 头像url
     * </pre>
     */
    public java.lang.String getPortrait() {
      java.lang.Object ref = portrait_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          portrait_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string portrait = 6;</code>
     *
     * <pre>
     * 头像url
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPortraitBytes() {
      java.lang.Object ref = portrait_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        portrait_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 is_master = 7;
    public static final int IS_MASTER_FIELD_NUMBER = 7;
    private int isMaster_;
    /**
     * <code>optional int32 is_master = 7;</code>
     *
     * <pre>
     * 角色, 0:普通玩家；1:桌子创建人
     * </pre>
     */
    public boolean hasIsMaster() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 is_master = 7;</code>
     *
     * <pre>
     * 角色, 0:普通玩家；1:桌子创建人
     * </pre>
     */
    public int getIsMaster() {
      return isMaster_;
    }

    // optional int32 piaofen = 8;
    public static final int PIAOFEN_FIELD_NUMBER = 8;
    private int piaofen_;
    /**
     * <code>optional int32 piaofen = 8;</code>
     *
     * <pre>
     * 用户飘了多少分
     * </pre>
     */
    public boolean hasPiaofen() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 piaofen = 8;</code>
     *
     * <pre>
     * 用户飘了多少分
     * </pre>
     */
    public int getPiaofen() {
      return piaofen_;
    }

    // optional int32 shanghuo = 9;
    public static final int SHANGHUO_FIELD_NUMBER = 9;
    private int shanghuo_;
    /**
     * <code>optional int32 shanghuo = 9;</code>
     *
     * <pre>
     * 是否选择了上火 1不上火 2上火
     * </pre>
     */
    public boolean hasShanghuo() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 shanghuo = 9;</code>
     *
     * <pre>
     * 是否选择了上火 1不上火 2上火
     * </pre>
     */
    public int getShanghuo() {
      return shanghuo_;
    }

    // optional string ip = 10;
    public static final int IP_FIELD_NUMBER = 10;
    private java.lang.Object ip_;
    /**
     * <code>optional string ip = 10;</code>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string ip = 10;</code>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 10;</code>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      status_ = 0;
      uin_ = 0;
      nick_ = "";
      seatid_ = 0;
      sex_ = 0;
      portrait_ = "";
      isMaster_ = 0;
      piaofen_ = 0;
      shanghuo_ = 0;
      ip_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, uin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNickBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, seatid_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, sex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getPortraitBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, isMaster_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, piaofen_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, shanghuo_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getIpBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, uin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNickBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, seatid_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, sex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getPortraitBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, isMaster_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, piaofen_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, shanghuo_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getIpBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameUserInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameUserInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameUserInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameUserInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameUserInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameUserInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameUserInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameUserInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameUserInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameUserInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameUserInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameUserInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameUserInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameUserInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameUserInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameUserInfo.class, Mahjong.GameUserInfo.Builder.class);
      }

      // Construct using Mahjong.GameUserInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        uin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        nick_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        seatid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        portrait_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        isMaster_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        piaofen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        shanghuo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameUserInfo_descriptor;
      }

      public Mahjong.GameUserInfo getDefaultInstanceForType() {
        return Mahjong.GameUserInfo.getDefaultInstance();
      }

      public Mahjong.GameUserInfo build() {
        Mahjong.GameUserInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameUserInfo buildPartial() {
        Mahjong.GameUserInfo result = new Mahjong.GameUserInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.uin_ = uin_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.nick_ = nick_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.seatid_ = seatid_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.portrait_ = portrait_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isMaster_ = isMaster_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.piaofen_ = piaofen_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.shanghuo_ = shanghuo_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.ip_ = ip_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameUserInfo) {
          return mergeFrom((Mahjong.GameUserInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameUserInfo other) {
        if (other == Mahjong.GameUserInfo.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasUin()) {
          setUin(other.getUin());
        }
        if (other.hasNick()) {
          bitField0_ |= 0x00000004;
          nick_ = other.nick_;
          onChanged();
        }
        if (other.hasSeatid()) {
          setSeatid(other.getSeatid());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasPortrait()) {
          bitField0_ |= 0x00000020;
          portrait_ = other.portrait_;
          onChanged();
        }
        if (other.hasIsMaster()) {
          setIsMaster(other.getIsMaster());
        }
        if (other.hasPiaofen()) {
          setPiaofen(other.getPiaofen());
        }
        if (other.hasShanghuo()) {
          setShanghuo(other.getShanghuo());
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000200;
          ip_ = other.ip_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameUserInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameUserInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 status = 1;
      private int status_ ;
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       * 1010未准备 1020已准备 1030玩游戏中 1001同意解散房间 1002拒绝解散房间
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       * 1010未准备 1020已准备 1030玩游戏中 1001同意解散房间 1002拒绝解散房间
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       * 1010未准备 1020已准备 1030玩游戏中 1001同意解散房间 1002拒绝解散房间
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       * 1010未准备 1020已准备 1030玩游戏中 1001同意解散房间 1002拒绝解散房间
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional int32 uin = 2;
      private int uin_ ;
      /**
       * <code>optional int32 uin = 2;</code>
       *
       * <pre>
       * 用户id
       * </pre>
       */
      public boolean hasUin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 uin = 2;</code>
       *
       * <pre>
       * 用户id
       * </pre>
       */
      public int getUin() {
        return uin_;
      }
      /**
       * <code>optional int32 uin = 2;</code>
       *
       * <pre>
       * 用户id
       * </pre>
       */
      public Builder setUin(int value) {
        bitField0_ |= 0x00000002;
        uin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 uin = 2;</code>
       *
       * <pre>
       * 用户id
       * </pre>
       */
      public Builder clearUin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        uin_ = 0;
        onChanged();
        return this;
      }

      // optional string nick = 3;
      private java.lang.Object nick_ = "";
      /**
       * <code>optional string nick = 3;</code>
       *
       * <pre>
       * 用户昵称
       * </pre>
       */
      public boolean hasNick() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string nick = 3;</code>
       *
       * <pre>
       * 用户昵称
       * </pre>
       */
      public java.lang.String getNick() {
        java.lang.Object ref = nick_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nick_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nick = 3;</code>
       *
       * <pre>
       * 用户昵称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNickBytes() {
        java.lang.Object ref = nick_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nick_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nick = 3;</code>
       *
       * <pre>
       * 用户昵称
       * </pre>
       */
      public Builder setNick(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        nick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nick = 3;</code>
       *
       * <pre>
       * 用户昵称
       * </pre>
       */
      public Builder clearNick() {
        bitField0_ = (bitField0_ & ~0x00000004);
        nick_ = getDefaultInstance().getNick();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nick = 3;</code>
       *
       * <pre>
       * 用户昵称
       * </pre>
       */
      public Builder setNickBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        nick_ = value;
        onChanged();
        return this;
      }

      // optional int32 seatid = 4;
      private int seatid_ ;
      /**
       * <code>optional int32 seatid = 4;</code>
       *
       * <pre>
       * 用户座位号
       * </pre>
       */
      public boolean hasSeatid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 seatid = 4;</code>
       *
       * <pre>
       * 用户座位号
       * </pre>
       */
      public int getSeatid() {
        return seatid_;
      }
      /**
       * <code>optional int32 seatid = 4;</code>
       *
       * <pre>
       * 用户座位号
       * </pre>
       */
      public Builder setSeatid(int value) {
        bitField0_ |= 0x00000008;
        seatid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seatid = 4;</code>
       *
       * <pre>
       * 用户座位号
       * </pre>
       */
      public Builder clearSeatid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        seatid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 5;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 5;</code>
       *
       * <pre>
       * 用户性别
       * </pre>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 sex = 5;</code>
       *
       * <pre>
       * 用户性别
       * </pre>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 5;</code>
       *
       * <pre>
       * 用户性别
       * </pre>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000010;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 5;</code>
       *
       * <pre>
       * 用户性别
       * </pre>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional string portrait = 6;
      private java.lang.Object portrait_ = "";
      /**
       * <code>optional string portrait = 6;</code>
       *
       * <pre>
       * 头像url
       * </pre>
       */
      public boolean hasPortrait() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string portrait = 6;</code>
       *
       * <pre>
       * 头像url
       * </pre>
       */
      public java.lang.String getPortrait() {
        java.lang.Object ref = portrait_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          portrait_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string portrait = 6;</code>
       *
       * <pre>
       * 头像url
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPortraitBytes() {
        java.lang.Object ref = portrait_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          portrait_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string portrait = 6;</code>
       *
       * <pre>
       * 头像url
       * </pre>
       */
      public Builder setPortrait(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        portrait_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string portrait = 6;</code>
       *
       * <pre>
       * 头像url
       * </pre>
       */
      public Builder clearPortrait() {
        bitField0_ = (bitField0_ & ~0x00000020);
        portrait_ = getDefaultInstance().getPortrait();
        onChanged();
        return this;
      }
      /**
       * <code>optional string portrait = 6;</code>
       *
       * <pre>
       * 头像url
       * </pre>
       */
      public Builder setPortraitBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        portrait_ = value;
        onChanged();
        return this;
      }

      // optional int32 is_master = 7;
      private int isMaster_ ;
      /**
       * <code>optional int32 is_master = 7;</code>
       *
       * <pre>
       * 角色, 0:普通玩家；1:桌子创建人
       * </pre>
       */
      public boolean hasIsMaster() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 is_master = 7;</code>
       *
       * <pre>
       * 角色, 0:普通玩家；1:桌子创建人
       * </pre>
       */
      public int getIsMaster() {
        return isMaster_;
      }
      /**
       * <code>optional int32 is_master = 7;</code>
       *
       * <pre>
       * 角色, 0:普通玩家；1:桌子创建人
       * </pre>
       */
      public Builder setIsMaster(int value) {
        bitField0_ |= 0x00000040;
        isMaster_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_master = 7;</code>
       *
       * <pre>
       * 角色, 0:普通玩家；1:桌子创建人
       * </pre>
       */
      public Builder clearIsMaster() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isMaster_ = 0;
        onChanged();
        return this;
      }

      // optional int32 piaofen = 8;
      private int piaofen_ ;
      /**
       * <code>optional int32 piaofen = 8;</code>
       *
       * <pre>
       * 用户飘了多少分
       * </pre>
       */
      public boolean hasPiaofen() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 piaofen = 8;</code>
       *
       * <pre>
       * 用户飘了多少分
       * </pre>
       */
      public int getPiaofen() {
        return piaofen_;
      }
      /**
       * <code>optional int32 piaofen = 8;</code>
       *
       * <pre>
       * 用户飘了多少分
       * </pre>
       */
      public Builder setPiaofen(int value) {
        bitField0_ |= 0x00000080;
        piaofen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 piaofen = 8;</code>
       *
       * <pre>
       * 用户飘了多少分
       * </pre>
       */
      public Builder clearPiaofen() {
        bitField0_ = (bitField0_ & ~0x00000080);
        piaofen_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shanghuo = 9;
      private int shanghuo_ ;
      /**
       * <code>optional int32 shanghuo = 9;</code>
       *
       * <pre>
       * 是否选择了上火 1不上火 2上火
       * </pre>
       */
      public boolean hasShanghuo() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 shanghuo = 9;</code>
       *
       * <pre>
       * 是否选择了上火 1不上火 2上火
       * </pre>
       */
      public int getShanghuo() {
        return shanghuo_;
      }
      /**
       * <code>optional int32 shanghuo = 9;</code>
       *
       * <pre>
       * 是否选择了上火 1不上火 2上火
       * </pre>
       */
      public Builder setShanghuo(int value) {
        bitField0_ |= 0x00000100;
        shanghuo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shanghuo = 9;</code>
       *
       * <pre>
       * 是否选择了上火 1不上火 2上火
       * </pre>
       */
      public Builder clearShanghuo() {
        bitField0_ = (bitField0_ & ~0x00000100);
        shanghuo_ = 0;
        onChanged();
        return this;
      }

      // optional string ip = 10;
      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 10;</code>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string ip = 10;</code>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 10;</code>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 10;</code>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 10;</code>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 10;</code>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        ip_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameUserInfo)
    }

    static {
      defaultInstance = new GameUserInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameUserInfo)
  }

  public interface UserCommonCardsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 uin = 1;
    /**
     * <code>optional int32 uin = 1;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    boolean hasUin();
    /**
     * <code>optional int32 uin = 1;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    int getUin();

    // optional int32 card_len = 2;
    /**
     * <code>optional int32 card_len = 2;</code>
     *
     * <pre>
     * 用户手牌长度
     * </pre>
     */
    boolean hasCardLen();
    /**
     * <code>optional int32 card_len = 2;</code>
     *
     * <pre>
     * 用户手牌长度
     * </pre>
     */
    int getCardLen();

    // repeated int32 out_cards = 3;
    /**
     * <code>repeated int32 out_cards = 3;</code>
     *
     * <pre>
     * 用户吃、杠、碰后亮下去的手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getOutCardsList();
    /**
     * <code>repeated int32 out_cards = 3;</code>
     *
     * <pre>
     * 用户吃、杠、碰后亮下去的手牌
     * </pre>
     */
    int getOutCardsCount();
    /**
     * <code>repeated int32 out_cards = 3;</code>
     *
     * <pre>
     * 用户吃、杠、碰后亮下去的手牌
     * </pre>
     */
    int getOutCards(int index);

    // repeated int32 discard = 4;
    /**
     * <code>repeated int32 discard = 4;</code>
     *
     * <pre>
     * 用户出过的手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getDiscardList();
    /**
     * <code>repeated int32 discard = 4;</code>
     *
     * <pre>
     * 用户出过的手牌
     * </pre>
     */
    int getDiscardCount();
    /**
     * <code>repeated int32 discard = 4;</code>
     *
     * <pre>
     * 用户出过的手牌
     * </pre>
     */
    int getDiscard(int index);

    // optional int32 seatid = 5;
    /**
     * <code>optional int32 seatid = 5;</code>
     *
     * <pre>
     * 座位号
     * </pre>
     */
    boolean hasSeatid();
    /**
     * <code>optional int32 seatid = 5;</code>
     *
     * <pre>
     * 座位号
     * </pre>
     */
    int getSeatid();

    // optional int32 status = 6;
    /**
     * <code>optional int32 status = 6;</code>
     *
     * <pre>
     * 用户状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 6;</code>
     *
     * <pre>
     * 用户状态
     * </pre>
     */
    int getStatus();

    // repeated int32 op_list = 7;
    /**
     * <code>repeated int32 op_list = 7;</code>
     *
     * <pre>
     * 1吃 2碰 3暗杠 4擦杠 5明杠
     * </pre>
     */
    java.util.List<java.lang.Integer> getOpListList();
    /**
     * <code>repeated int32 op_list = 7;</code>
     *
     * <pre>
     * 1吃 2碰 3暗杠 4擦杠 5明杠
     * </pre>
     */
    int getOpListCount();
    /**
     * <code>repeated int32 op_list = 7;</code>
     *
     * <pre>
     * 1吃 2碰 3暗杠 4擦杠 5明杠
     * </pre>
     */
    int getOpList(int index);

    // optional int32 chips = 8;
    /**
     * <code>optional int32 chips = 8;</code>
     *
     * <pre>
     * 用户分数
     * </pre>
     */
    boolean hasChips();
    /**
     * <code>optional int32 chips = 8;</code>
     *
     * <pre>
     * 用户分数
     * </pre>
     */
    int getChips();
  }
  /**
   * Protobuf type {@code UserCommonCards}
   */
  public static final class UserCommonCards extends
      com.google.protobuf.GeneratedMessage
      implements UserCommonCardsOrBuilder {
    // Use UserCommonCards.newBuilder() to construct.
    private UserCommonCards(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UserCommonCards(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UserCommonCards defaultInstance;
    public static UserCommonCards getDefaultInstance() {
      return defaultInstance;
    }

    public UserCommonCards getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UserCommonCards(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uin_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cardLen_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                outCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              outCards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                outCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                outCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                discard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              discard_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                discard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                discard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              seatid_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              status_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                opList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              opList_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                opList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                opList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              chips_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          outCards_ = java.util.Collections.unmodifiableList(outCards_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          discard_ = java.util.Collections.unmodifiableList(discard_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          opList_ = java.util.Collections.unmodifiableList(opList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_UserCommonCards_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_UserCommonCards_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.UserCommonCards.class, Mahjong.UserCommonCards.Builder.class);
    }

    public static com.google.protobuf.Parser<UserCommonCards> PARSER =
        new com.google.protobuf.AbstractParser<UserCommonCards>() {
      public UserCommonCards parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserCommonCards(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserCommonCards> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 uin = 1;
    public static final int UIN_FIELD_NUMBER = 1;
    private int uin_;
    /**
     * <code>optional int32 uin = 1;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public boolean hasUin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 uin = 1;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public int getUin() {
      return uin_;
    }

    // optional int32 card_len = 2;
    public static final int CARD_LEN_FIELD_NUMBER = 2;
    private int cardLen_;
    /**
     * <code>optional int32 card_len = 2;</code>
     *
     * <pre>
     * 用户手牌长度
     * </pre>
     */
    public boolean hasCardLen() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 card_len = 2;</code>
     *
     * <pre>
     * 用户手牌长度
     * </pre>
     */
    public int getCardLen() {
      return cardLen_;
    }

    // repeated int32 out_cards = 3;
    public static final int OUT_CARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> outCards_;
    /**
     * <code>repeated int32 out_cards = 3;</code>
     *
     * <pre>
     * 用户吃、杠、碰后亮下去的手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOutCardsList() {
      return outCards_;
    }
    /**
     * <code>repeated int32 out_cards = 3;</code>
     *
     * <pre>
     * 用户吃、杠、碰后亮下去的手牌
     * </pre>
     */
    public int getOutCardsCount() {
      return outCards_.size();
    }
    /**
     * <code>repeated int32 out_cards = 3;</code>
     *
     * <pre>
     * 用户吃、杠、碰后亮下去的手牌
     * </pre>
     */
    public int getOutCards(int index) {
      return outCards_.get(index);
    }

    // repeated int32 discard = 4;
    public static final int DISCARD_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> discard_;
    /**
     * <code>repeated int32 discard = 4;</code>
     *
     * <pre>
     * 用户出过的手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDiscardList() {
      return discard_;
    }
    /**
     * <code>repeated int32 discard = 4;</code>
     *
     * <pre>
     * 用户出过的手牌
     * </pre>
     */
    public int getDiscardCount() {
      return discard_.size();
    }
    /**
     * <code>repeated int32 discard = 4;</code>
     *
     * <pre>
     * 用户出过的手牌
     * </pre>
     */
    public int getDiscard(int index) {
      return discard_.get(index);
    }

    // optional int32 seatid = 5;
    public static final int SEATID_FIELD_NUMBER = 5;
    private int seatid_;
    /**
     * <code>optional int32 seatid = 5;</code>
     *
     * <pre>
     * 座位号
     * </pre>
     */
    public boolean hasSeatid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 seatid = 5;</code>
     *
     * <pre>
     * 座位号
     * </pre>
     */
    public int getSeatid() {
      return seatid_;
    }

    // optional int32 status = 6;
    public static final int STATUS_FIELD_NUMBER = 6;
    private int status_;
    /**
     * <code>optional int32 status = 6;</code>
     *
     * <pre>
     * 用户状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 status = 6;</code>
     *
     * <pre>
     * 用户状态
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // repeated int32 op_list = 7;
    public static final int OP_LIST_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> opList_;
    /**
     * <code>repeated int32 op_list = 7;</code>
     *
     * <pre>
     * 1吃 2碰 3暗杠 4擦杠 5明杠
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOpListList() {
      return opList_;
    }
    /**
     * <code>repeated int32 op_list = 7;</code>
     *
     * <pre>
     * 1吃 2碰 3暗杠 4擦杠 5明杠
     * </pre>
     */
    public int getOpListCount() {
      return opList_.size();
    }
    /**
     * <code>repeated int32 op_list = 7;</code>
     *
     * <pre>
     * 1吃 2碰 3暗杠 4擦杠 5明杠
     * </pre>
     */
    public int getOpList(int index) {
      return opList_.get(index);
    }

    // optional int32 chips = 8;
    public static final int CHIPS_FIELD_NUMBER = 8;
    private int chips_;
    /**
     * <code>optional int32 chips = 8;</code>
     *
     * <pre>
     * 用户分数
     * </pre>
     */
    public boolean hasChips() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 chips = 8;</code>
     *
     * <pre>
     * 用户分数
     * </pre>
     */
    public int getChips() {
      return chips_;
    }

    private void initFields() {
      uin_ = 0;
      cardLen_ = 0;
      outCards_ = java.util.Collections.emptyList();
      discard_ = java.util.Collections.emptyList();
      seatid_ = 0;
      status_ = 0;
      opList_ = java.util.Collections.emptyList();
      chips_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cardLen_);
      }
      for (int i = 0; i < outCards_.size(); i++) {
        output.writeInt32(3, outCards_.get(i));
      }
      for (int i = 0; i < discard_.size(); i++) {
        output.writeInt32(4, discard_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(5, seatid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, status_);
      }
      for (int i = 0; i < opList_.size(); i++) {
        output.writeInt32(7, opList_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, chips_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cardLen_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(outCards_.get(i));
        }
        size += dataSize;
        size += 1 * getOutCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < discard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(discard_.get(i));
        }
        size += dataSize;
        size += 1 * getDiscardList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, seatid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, status_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < opList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(opList_.get(i));
        }
        size += dataSize;
        size += 1 * getOpListList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, chips_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.UserCommonCards parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.UserCommonCards parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.UserCommonCards parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.UserCommonCards parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.UserCommonCards parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.UserCommonCards parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.UserCommonCards parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.UserCommonCards parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.UserCommonCards parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.UserCommonCards parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.UserCommonCards prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code UserCommonCards}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.UserCommonCardsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_UserCommonCards_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_UserCommonCards_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.UserCommonCards.class, Mahjong.UserCommonCards.Builder.class);
      }

      // Construct using Mahjong.UserCommonCards.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardLen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        outCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        discard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        seatid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        opList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        chips_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_UserCommonCards_descriptor;
      }

      public Mahjong.UserCommonCards getDefaultInstanceForType() {
        return Mahjong.UserCommonCards.getDefaultInstance();
      }

      public Mahjong.UserCommonCards build() {
        Mahjong.UserCommonCards result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.UserCommonCards buildPartial() {
        Mahjong.UserCommonCards result = new Mahjong.UserCommonCards(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uin_ = uin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardLen_ = cardLen_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          outCards_ = java.util.Collections.unmodifiableList(outCards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.outCards_ = outCards_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          discard_ = java.util.Collections.unmodifiableList(discard_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.discard_ = discard_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.seatid_ = seatid_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.status_ = status_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          opList_ = java.util.Collections.unmodifiableList(opList_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.opList_ = opList_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.chips_ = chips_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.UserCommonCards) {
          return mergeFrom((Mahjong.UserCommonCards)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.UserCommonCards other) {
        if (other == Mahjong.UserCommonCards.getDefaultInstance()) return this;
        if (other.hasUin()) {
          setUin(other.getUin());
        }
        if (other.hasCardLen()) {
          setCardLen(other.getCardLen());
        }
        if (!other.outCards_.isEmpty()) {
          if (outCards_.isEmpty()) {
            outCards_ = other.outCards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureOutCardsIsMutable();
            outCards_.addAll(other.outCards_);
          }
          onChanged();
        }
        if (!other.discard_.isEmpty()) {
          if (discard_.isEmpty()) {
            discard_ = other.discard_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDiscardIsMutable();
            discard_.addAll(other.discard_);
          }
          onChanged();
        }
        if (other.hasSeatid()) {
          setSeatid(other.getSeatid());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (!other.opList_.isEmpty()) {
          if (opList_.isEmpty()) {
            opList_ = other.opList_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureOpListIsMutable();
            opList_.addAll(other.opList_);
          }
          onChanged();
        }
        if (other.hasChips()) {
          setChips(other.getChips());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.UserCommonCards parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.UserCommonCards) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 uin = 1;
      private int uin_ ;
      /**
       * <code>optional int32 uin = 1;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public boolean hasUin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 uin = 1;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public int getUin() {
        return uin_;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder setUin(int value) {
        bitField0_ |= 0x00000001;
        uin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder clearUin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 card_len = 2;
      private int cardLen_ ;
      /**
       * <code>optional int32 card_len = 2;</code>
       *
       * <pre>
       * 用户手牌长度
       * </pre>
       */
      public boolean hasCardLen() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 card_len = 2;</code>
       *
       * <pre>
       * 用户手牌长度
       * </pre>
       */
      public int getCardLen() {
        return cardLen_;
      }
      /**
       * <code>optional int32 card_len = 2;</code>
       *
       * <pre>
       * 用户手牌长度
       * </pre>
       */
      public Builder setCardLen(int value) {
        bitField0_ |= 0x00000002;
        cardLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_len = 2;</code>
       *
       * <pre>
       * 用户手牌长度
       * </pre>
       */
      public Builder clearCardLen() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cardLen_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 out_cards = 3;
      private java.util.List<java.lang.Integer> outCards_ = java.util.Collections.emptyList();
      private void ensureOutCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          outCards_ = new java.util.ArrayList<java.lang.Integer>(outCards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 out_cards = 3;</code>
       *
       * <pre>
       * 用户吃、杠、碰后亮下去的手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOutCardsList() {
        return java.util.Collections.unmodifiableList(outCards_);
      }
      /**
       * <code>repeated int32 out_cards = 3;</code>
       *
       * <pre>
       * 用户吃、杠、碰后亮下去的手牌
       * </pre>
       */
      public int getOutCardsCount() {
        return outCards_.size();
      }
      /**
       * <code>repeated int32 out_cards = 3;</code>
       *
       * <pre>
       * 用户吃、杠、碰后亮下去的手牌
       * </pre>
       */
      public int getOutCards(int index) {
        return outCards_.get(index);
      }
      /**
       * <code>repeated int32 out_cards = 3;</code>
       *
       * <pre>
       * 用户吃、杠、碰后亮下去的手牌
       * </pre>
       */
      public Builder setOutCards(
          int index, int value) {
        ensureOutCardsIsMutable();
        outCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards = 3;</code>
       *
       * <pre>
       * 用户吃、杠、碰后亮下去的手牌
       * </pre>
       */
      public Builder addOutCards(int value) {
        ensureOutCardsIsMutable();
        outCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards = 3;</code>
       *
       * <pre>
       * 用户吃、杠、碰后亮下去的手牌
       * </pre>
       */
      public Builder addAllOutCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOutCardsIsMutable();
        super.addAll(values, outCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards = 3;</code>
       *
       * <pre>
       * 用户吃、杠、碰后亮下去的手牌
       * </pre>
       */
      public Builder clearOutCards() {
        outCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // repeated int32 discard = 4;
      private java.util.List<java.lang.Integer> discard_ = java.util.Collections.emptyList();
      private void ensureDiscardIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          discard_ = new java.util.ArrayList<java.lang.Integer>(discard_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 discard = 4;</code>
       *
       * <pre>
       * 用户出过的手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDiscardList() {
        return java.util.Collections.unmodifiableList(discard_);
      }
      /**
       * <code>repeated int32 discard = 4;</code>
       *
       * <pre>
       * 用户出过的手牌
       * </pre>
       */
      public int getDiscardCount() {
        return discard_.size();
      }
      /**
       * <code>repeated int32 discard = 4;</code>
       *
       * <pre>
       * 用户出过的手牌
       * </pre>
       */
      public int getDiscard(int index) {
        return discard_.get(index);
      }
      /**
       * <code>repeated int32 discard = 4;</code>
       *
       * <pre>
       * 用户出过的手牌
       * </pre>
       */
      public Builder setDiscard(
          int index, int value) {
        ensureDiscardIsMutable();
        discard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 discard = 4;</code>
       *
       * <pre>
       * 用户出过的手牌
       * </pre>
       */
      public Builder addDiscard(int value) {
        ensureDiscardIsMutable();
        discard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 discard = 4;</code>
       *
       * <pre>
       * 用户出过的手牌
       * </pre>
       */
      public Builder addAllDiscard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDiscardIsMutable();
        super.addAll(values, discard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 discard = 4;</code>
       *
       * <pre>
       * 用户出过的手牌
       * </pre>
       */
      public Builder clearDiscard() {
        discard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional int32 seatid = 5;
      private int seatid_ ;
      /**
       * <code>optional int32 seatid = 5;</code>
       *
       * <pre>
       * 座位号
       * </pre>
       */
      public boolean hasSeatid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 seatid = 5;</code>
       *
       * <pre>
       * 座位号
       * </pre>
       */
      public int getSeatid() {
        return seatid_;
      }
      /**
       * <code>optional int32 seatid = 5;</code>
       *
       * <pre>
       * 座位号
       * </pre>
       */
      public Builder setSeatid(int value) {
        bitField0_ |= 0x00000010;
        seatid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seatid = 5;</code>
       *
       * <pre>
       * 座位号
       * </pre>
       */
      public Builder clearSeatid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        seatid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 status = 6;
      private int status_ ;
      /**
       * <code>optional int32 status = 6;</code>
       *
       * <pre>
       * 用户状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 status = 6;</code>
       *
       * <pre>
       * 用户状态
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 6;</code>
       *
       * <pre>
       * 用户状态
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000020;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 6;</code>
       *
       * <pre>
       * 用户状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 op_list = 7;
      private java.util.List<java.lang.Integer> opList_ = java.util.Collections.emptyList();
      private void ensureOpListIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          opList_ = new java.util.ArrayList<java.lang.Integer>(opList_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 op_list = 7;</code>
       *
       * <pre>
       * 1吃 2碰 3暗杠 4擦杠 5明杠
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOpListList() {
        return java.util.Collections.unmodifiableList(opList_);
      }
      /**
       * <code>repeated int32 op_list = 7;</code>
       *
       * <pre>
       * 1吃 2碰 3暗杠 4擦杠 5明杠
       * </pre>
       */
      public int getOpListCount() {
        return opList_.size();
      }
      /**
       * <code>repeated int32 op_list = 7;</code>
       *
       * <pre>
       * 1吃 2碰 3暗杠 4擦杠 5明杠
       * </pre>
       */
      public int getOpList(int index) {
        return opList_.get(index);
      }
      /**
       * <code>repeated int32 op_list = 7;</code>
       *
       * <pre>
       * 1吃 2碰 3暗杠 4擦杠 5明杠
       * </pre>
       */
      public Builder setOpList(
          int index, int value) {
        ensureOpListIsMutable();
        opList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 op_list = 7;</code>
       *
       * <pre>
       * 1吃 2碰 3暗杠 4擦杠 5明杠
       * </pre>
       */
      public Builder addOpList(int value) {
        ensureOpListIsMutable();
        opList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 op_list = 7;</code>
       *
       * <pre>
       * 1吃 2碰 3暗杠 4擦杠 5明杠
       * </pre>
       */
      public Builder addAllOpList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOpListIsMutable();
        super.addAll(values, opList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 op_list = 7;</code>
       *
       * <pre>
       * 1吃 2碰 3暗杠 4擦杠 5明杠
       * </pre>
       */
      public Builder clearOpList() {
        opList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional int32 chips = 8;
      private int chips_ ;
      /**
       * <code>optional int32 chips = 8;</code>
       *
       * <pre>
       * 用户分数
       * </pre>
       */
      public boolean hasChips() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 chips = 8;</code>
       *
       * <pre>
       * 用户分数
       * </pre>
       */
      public int getChips() {
        return chips_;
      }
      /**
       * <code>optional int32 chips = 8;</code>
       *
       * <pre>
       * 用户分数
       * </pre>
       */
      public Builder setChips(int value) {
        bitField0_ |= 0x00000080;
        chips_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 chips = 8;</code>
       *
       * <pre>
       * 用户分数
       * </pre>
       */
      public Builder clearChips() {
        bitField0_ = (bitField0_ & ~0x00000080);
        chips_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:UserCommonCards)
    }

    static {
      defaultInstance = new UserCommonCards(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:UserCommonCards)
  }

  public interface MyOptionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool op_chi = 1;
    /**
     * <code>optional bool op_chi = 1;</code>
     *
     * <pre>
     * 是否可以吃牌，1为可以，0为不行
     * </pre>
     */
    boolean hasOpChi();
    /**
     * <code>optional bool op_chi = 1;</code>
     *
     * <pre>
     * 是否可以吃牌，1为可以，0为不行
     * </pre>
     */
    boolean getOpChi();

    // optional bool op_peng = 2;
    /**
     * <code>optional bool op_peng = 2;</code>
     *
     * <pre>
     * 碰牌
     * </pre>
     */
    boolean hasOpPeng();
    /**
     * <code>optional bool op_peng = 2;</code>
     *
     * <pre>
     * 碰牌
     * </pre>
     */
    boolean getOpPeng();

    // optional bool op_gang = 3;
    /**
     * <code>optional bool op_gang = 3;</code>
     *
     * <pre>
     * 杠牌
     * </pre>
     */
    boolean hasOpGang();
    /**
     * <code>optional bool op_gang = 3;</code>
     *
     * <pre>
     * 杠牌
     * </pre>
     */
    boolean getOpGang();

    // optional bool op_hu = 4;
    /**
     * <code>optional bool op_hu = 4;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    boolean hasOpHu();
    /**
     * <code>optional bool op_hu = 4;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    boolean getOpHu();

    // optional bool need_wait = 5;
    /**
     * <code>optional bool need_wait = 5;</code>
     *
     * <pre>
     * 是否需要等待，只有为false时以上操作才全部生效
     * </pre>
     */
    boolean hasNeedWait();
    /**
     * <code>optional bool need_wait = 5;</code>
     *
     * <pre>
     * 是否需要等待，只有为false时以上操作才全部生效
     * </pre>
     */
    boolean getNeedWait();

    // repeated int32 chi_cards = 6;
    /**
     * <code>repeated int32 chi_cards = 6;</code>
     *
     * <pre>
     * 可以进行吃牌组合的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getChiCardsList();
    /**
     * <code>repeated int32 chi_cards = 6;</code>
     *
     * <pre>
     * 可以进行吃牌组合的牌
     * </pre>
     */
    int getChiCardsCount();
    /**
     * <code>repeated int32 chi_cards = 6;</code>
     *
     * <pre>
     * 可以进行吃牌组合的牌
     * </pre>
     */
    int getChiCards(int index);
  }
  /**
   * Protobuf type {@code MyOption}
   */
  public static final class MyOption extends
      com.google.protobuf.GeneratedMessage
      implements MyOptionOrBuilder {
    // Use MyOption.newBuilder() to construct.
    private MyOption(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MyOption(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MyOption defaultInstance;
    public static MyOption getDefaultInstance() {
      return defaultInstance;
    }

    public MyOption getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MyOption(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opChi_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              opPeng_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              opGang_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              opHu_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              needWait_ = input.readBool();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                chiCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              chiCards_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                chiCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                chiCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          chiCards_ = java.util.Collections.unmodifiableList(chiCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_MyOption_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_MyOption_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.MyOption.class, Mahjong.MyOption.Builder.class);
    }

    public static com.google.protobuf.Parser<MyOption> PARSER =
        new com.google.protobuf.AbstractParser<MyOption>() {
      public MyOption parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MyOption(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MyOption> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool op_chi = 1;
    public static final int OP_CHI_FIELD_NUMBER = 1;
    private boolean opChi_;
    /**
     * <code>optional bool op_chi = 1;</code>
     *
     * <pre>
     * 是否可以吃牌，1为可以，0为不行
     * </pre>
     */
    public boolean hasOpChi() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool op_chi = 1;</code>
     *
     * <pre>
     * 是否可以吃牌，1为可以，0为不行
     * </pre>
     */
    public boolean getOpChi() {
      return opChi_;
    }

    // optional bool op_peng = 2;
    public static final int OP_PENG_FIELD_NUMBER = 2;
    private boolean opPeng_;
    /**
     * <code>optional bool op_peng = 2;</code>
     *
     * <pre>
     * 碰牌
     * </pre>
     */
    public boolean hasOpPeng() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool op_peng = 2;</code>
     *
     * <pre>
     * 碰牌
     * </pre>
     */
    public boolean getOpPeng() {
      return opPeng_;
    }

    // optional bool op_gang = 3;
    public static final int OP_GANG_FIELD_NUMBER = 3;
    private boolean opGang_;
    /**
     * <code>optional bool op_gang = 3;</code>
     *
     * <pre>
     * 杠牌
     * </pre>
     */
    public boolean hasOpGang() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool op_gang = 3;</code>
     *
     * <pre>
     * 杠牌
     * </pre>
     */
    public boolean getOpGang() {
      return opGang_;
    }

    // optional bool op_hu = 4;
    public static final int OP_HU_FIELD_NUMBER = 4;
    private boolean opHu_;
    /**
     * <code>optional bool op_hu = 4;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    public boolean hasOpHu() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool op_hu = 4;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    public boolean getOpHu() {
      return opHu_;
    }

    // optional bool need_wait = 5;
    public static final int NEED_WAIT_FIELD_NUMBER = 5;
    private boolean needWait_;
    /**
     * <code>optional bool need_wait = 5;</code>
     *
     * <pre>
     * 是否需要等待，只有为false时以上操作才全部生效
     * </pre>
     */
    public boolean hasNeedWait() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool need_wait = 5;</code>
     *
     * <pre>
     * 是否需要等待，只有为false时以上操作才全部生效
     * </pre>
     */
    public boolean getNeedWait() {
      return needWait_;
    }

    // repeated int32 chi_cards = 6;
    public static final int CHI_CARDS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> chiCards_;
    /**
     * <code>repeated int32 chi_cards = 6;</code>
     *
     * <pre>
     * 可以进行吃牌组合的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getChiCardsList() {
      return chiCards_;
    }
    /**
     * <code>repeated int32 chi_cards = 6;</code>
     *
     * <pre>
     * 可以进行吃牌组合的牌
     * </pre>
     */
    public int getChiCardsCount() {
      return chiCards_.size();
    }
    /**
     * <code>repeated int32 chi_cards = 6;</code>
     *
     * <pre>
     * 可以进行吃牌组合的牌
     * </pre>
     */
    public int getChiCards(int index) {
      return chiCards_.get(index);
    }

    private void initFields() {
      opChi_ = false;
      opPeng_ = false;
      opGang_ = false;
      opHu_ = false;
      needWait_ = false;
      chiCards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, opChi_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, opPeng_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, opGang_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, opHu_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, needWait_);
      }
      for (int i = 0; i < chiCards_.size(); i++) {
        output.writeInt32(6, chiCards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, opChi_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, opPeng_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, opGang_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, opHu_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, needWait_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < chiCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(chiCards_.get(i));
        }
        size += dataSize;
        size += 1 * getChiCardsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.MyOption parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.MyOption parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.MyOption parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.MyOption parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.MyOption parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.MyOption parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.MyOption parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.MyOption parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.MyOption parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.MyOption parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.MyOption prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MyOption}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.MyOptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_MyOption_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_MyOption_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.MyOption.class, Mahjong.MyOption.Builder.class);
      }

      // Construct using Mahjong.MyOption.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opChi_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        opPeng_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        opGang_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        opHu_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        needWait_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        chiCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_MyOption_descriptor;
      }

      public Mahjong.MyOption getDefaultInstanceForType() {
        return Mahjong.MyOption.getDefaultInstance();
      }

      public Mahjong.MyOption build() {
        Mahjong.MyOption result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.MyOption buildPartial() {
        Mahjong.MyOption result = new Mahjong.MyOption(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opChi_ = opChi_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.opPeng_ = opPeng_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.opGang_ = opGang_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.opHu_ = opHu_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.needWait_ = needWait_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          chiCards_ = java.util.Collections.unmodifiableList(chiCards_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.chiCards_ = chiCards_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.MyOption) {
          return mergeFrom((Mahjong.MyOption)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.MyOption other) {
        if (other == Mahjong.MyOption.getDefaultInstance()) return this;
        if (other.hasOpChi()) {
          setOpChi(other.getOpChi());
        }
        if (other.hasOpPeng()) {
          setOpPeng(other.getOpPeng());
        }
        if (other.hasOpGang()) {
          setOpGang(other.getOpGang());
        }
        if (other.hasOpHu()) {
          setOpHu(other.getOpHu());
        }
        if (other.hasNeedWait()) {
          setNeedWait(other.getNeedWait());
        }
        if (!other.chiCards_.isEmpty()) {
          if (chiCards_.isEmpty()) {
            chiCards_ = other.chiCards_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureChiCardsIsMutable();
            chiCards_.addAll(other.chiCards_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.MyOption parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.MyOption) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool op_chi = 1;
      private boolean opChi_ ;
      /**
       * <code>optional bool op_chi = 1;</code>
       *
       * <pre>
       * 是否可以吃牌，1为可以，0为不行
       * </pre>
       */
      public boolean hasOpChi() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool op_chi = 1;</code>
       *
       * <pre>
       * 是否可以吃牌，1为可以，0为不行
       * </pre>
       */
      public boolean getOpChi() {
        return opChi_;
      }
      /**
       * <code>optional bool op_chi = 1;</code>
       *
       * <pre>
       * 是否可以吃牌，1为可以，0为不行
       * </pre>
       */
      public Builder setOpChi(boolean value) {
        bitField0_ |= 0x00000001;
        opChi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool op_chi = 1;</code>
       *
       * <pre>
       * 是否可以吃牌，1为可以，0为不行
       * </pre>
       */
      public Builder clearOpChi() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opChi_ = false;
        onChanged();
        return this;
      }

      // optional bool op_peng = 2;
      private boolean opPeng_ ;
      /**
       * <code>optional bool op_peng = 2;</code>
       *
       * <pre>
       * 碰牌
       * </pre>
       */
      public boolean hasOpPeng() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool op_peng = 2;</code>
       *
       * <pre>
       * 碰牌
       * </pre>
       */
      public boolean getOpPeng() {
        return opPeng_;
      }
      /**
       * <code>optional bool op_peng = 2;</code>
       *
       * <pre>
       * 碰牌
       * </pre>
       */
      public Builder setOpPeng(boolean value) {
        bitField0_ |= 0x00000002;
        opPeng_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool op_peng = 2;</code>
       *
       * <pre>
       * 碰牌
       * </pre>
       */
      public Builder clearOpPeng() {
        bitField0_ = (bitField0_ & ~0x00000002);
        opPeng_ = false;
        onChanged();
        return this;
      }

      // optional bool op_gang = 3;
      private boolean opGang_ ;
      /**
       * <code>optional bool op_gang = 3;</code>
       *
       * <pre>
       * 杠牌
       * </pre>
       */
      public boolean hasOpGang() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool op_gang = 3;</code>
       *
       * <pre>
       * 杠牌
       * </pre>
       */
      public boolean getOpGang() {
        return opGang_;
      }
      /**
       * <code>optional bool op_gang = 3;</code>
       *
       * <pre>
       * 杠牌
       * </pre>
       */
      public Builder setOpGang(boolean value) {
        bitField0_ |= 0x00000004;
        opGang_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool op_gang = 3;</code>
       *
       * <pre>
       * 杠牌
       * </pre>
       */
      public Builder clearOpGang() {
        bitField0_ = (bitField0_ & ~0x00000004);
        opGang_ = false;
        onChanged();
        return this;
      }

      // optional bool op_hu = 4;
      private boolean opHu_ ;
      /**
       * <code>optional bool op_hu = 4;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public boolean hasOpHu() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool op_hu = 4;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public boolean getOpHu() {
        return opHu_;
      }
      /**
       * <code>optional bool op_hu = 4;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public Builder setOpHu(boolean value) {
        bitField0_ |= 0x00000008;
        opHu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool op_hu = 4;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public Builder clearOpHu() {
        bitField0_ = (bitField0_ & ~0x00000008);
        opHu_ = false;
        onChanged();
        return this;
      }

      // optional bool need_wait = 5;
      private boolean needWait_ ;
      /**
       * <code>optional bool need_wait = 5;</code>
       *
       * <pre>
       * 是否需要等待，只有为false时以上操作才全部生效
       * </pre>
       */
      public boolean hasNeedWait() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool need_wait = 5;</code>
       *
       * <pre>
       * 是否需要等待，只有为false时以上操作才全部生效
       * </pre>
       */
      public boolean getNeedWait() {
        return needWait_;
      }
      /**
       * <code>optional bool need_wait = 5;</code>
       *
       * <pre>
       * 是否需要等待，只有为false时以上操作才全部生效
       * </pre>
       */
      public Builder setNeedWait(boolean value) {
        bitField0_ |= 0x00000010;
        needWait_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool need_wait = 5;</code>
       *
       * <pre>
       * 是否需要等待，只有为false时以上操作才全部生效
       * </pre>
       */
      public Builder clearNeedWait() {
        bitField0_ = (bitField0_ & ~0x00000010);
        needWait_ = false;
        onChanged();
        return this;
      }

      // repeated int32 chi_cards = 6;
      private java.util.List<java.lang.Integer> chiCards_ = java.util.Collections.emptyList();
      private void ensureChiCardsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          chiCards_ = new java.util.ArrayList<java.lang.Integer>(chiCards_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 chi_cards = 6;</code>
       *
       * <pre>
       * 可以进行吃牌组合的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getChiCardsList() {
        return java.util.Collections.unmodifiableList(chiCards_);
      }
      /**
       * <code>repeated int32 chi_cards = 6;</code>
       *
       * <pre>
       * 可以进行吃牌组合的牌
       * </pre>
       */
      public int getChiCardsCount() {
        return chiCards_.size();
      }
      /**
       * <code>repeated int32 chi_cards = 6;</code>
       *
       * <pre>
       * 可以进行吃牌组合的牌
       * </pre>
       */
      public int getChiCards(int index) {
        return chiCards_.get(index);
      }
      /**
       * <code>repeated int32 chi_cards = 6;</code>
       *
       * <pre>
       * 可以进行吃牌组合的牌
       * </pre>
       */
      public Builder setChiCards(
          int index, int value) {
        ensureChiCardsIsMutable();
        chiCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chi_cards = 6;</code>
       *
       * <pre>
       * 可以进行吃牌组合的牌
       * </pre>
       */
      public Builder addChiCards(int value) {
        ensureChiCardsIsMutable();
        chiCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chi_cards = 6;</code>
       *
       * <pre>
       * 可以进行吃牌组合的牌
       * </pre>
       */
      public Builder addAllChiCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureChiCardsIsMutable();
        super.addAll(values, chiCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chi_cards = 6;</code>
       *
       * <pre>
       * 可以进行吃牌组合的牌
       * </pre>
       */
      public Builder clearChiCards() {
        chiCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MyOption)
    }

    static {
      defaultInstance = new MyOption(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MyOption)
  }

  public interface EvtDeskUserEnterOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 deskid = 1;
    /**
     * <code>optional int32 deskid = 1;</code>
     *
     * <pre>
     * 桌子id
     * </pre>
     */
    boolean hasDeskid();
    /**
     * <code>optional int32 deskid = 1;</code>
     *
     * <pre>
     * 桌子id
     * </pre>
     */
    int getDeskid();

    // optional int32 op_uin = 2;
    /**
     * <code>optional int32 op_uin = 2;</code>
     *
     * <pre>
     * 进桌的用户id
     * </pre>
     */
    boolean hasOpUin();
    /**
     * <code>optional int32 op_uin = 2;</code>
     *
     * <pre>
     * 进桌的用户id
     * </pre>
     */
    int getOpUin();

    // optional int32 status = 3;
    /**
     * <code>optional int32 status = 3;</code>
     *
     * <pre>
     * status
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 3;</code>
     *
     * <pre>
     * status
     * </pre>
     */
    int getStatus();

    // optional int32 max_round = 4;
    /**
     * <code>optional int32 max_round = 4;</code>
     *
     * <pre>
     * 桌子最大局数，建桌的时候就定死了
     * </pre>
     */
    boolean hasMaxRound();
    /**
     * <code>optional int32 max_round = 4;</code>
     *
     * <pre>
     * 桌子最大局数，建桌的时候就定死了
     * </pre>
     */
    int getMaxRound();

    // repeated .GameUserInfo users = 5;
    /**
     * <code>repeated .GameUserInfo users = 5;</code>
     *
     * <pre>
     * 进桌用户的基本信息
     * </pre>
     */
    java.util.List<Mahjong.GameUserInfo> 
        getUsersList();
    /**
     * <code>repeated .GameUserInfo users = 5;</code>
     *
     * <pre>
     * 进桌用户的基本信息
     * </pre>
     */
    Mahjong.GameUserInfo getUsers(int index);
    /**
     * <code>repeated .GameUserInfo users = 5;</code>
     *
     * <pre>
     * 进桌用户的基本信息
     * </pre>
     */
    int getUsersCount();
    /**
     * <code>repeated .GameUserInfo users = 5;</code>
     *
     * <pre>
     * 进桌用户的基本信息
     * </pre>
     */
    java.util.List<? extends Mahjong.GameUserInfoOrBuilder> 
        getUsersOrBuilderList();
    /**
     * <code>repeated .GameUserInfo users = 5;</code>
     *
     * <pre>
     * 进桌用户的基本信息
     * </pre>
     */
    Mahjong.GameUserInfoOrBuilder getUsersOrBuilder(
        int index);

    // optional int32 next_uin = 6;
    /**
     * <code>optional int32 next_uin = 6;</code>
     *
     * <pre>
     * 当前操作用户的id
     * </pre>
     */
    boolean hasNextUin();
    /**
     * <code>optional int32 next_uin = 6;</code>
     *
     * <pre>
     * 当前操作用户的id
     * </pre>
     */
    int getNextUin();

    // optional int32 dealer_seatid = 7;
    /**
     * <code>optional int32 dealer_seatid = 7;</code>
     *
     * <pre>
     * 庄家的座位号
     * </pre>
     */
    boolean hasDealerSeatid();
    /**
     * <code>optional int32 dealer_seatid = 7;</code>
     *
     * <pre>
     * 庄家的座位号
     * </pre>
     */
    int getDealerSeatid();

    // repeated int32 cards = 8 [packed = true];
    /**
     * <code>repeated int32 cards = 8 [packed = true];</code>
     *
     * <pre>
     * 用户手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 8 [packed = true];</code>
     *
     * <pre>
     * 用户手牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 8 [packed = true];</code>
     *
     * <pre>
     * 用户手牌
     * </pre>
     */
    int getCards(int index);

    // repeated .UserCommonCards in_users = 9;
    /**
     * <code>repeated .UserCommonCards in_users = 9;</code>
     *
     * <pre>
     * 牌局用户的基本信息
     * </pre>
     */
    java.util.List<Mahjong.UserCommonCards> 
        getInUsersList();
    /**
     * <code>repeated .UserCommonCards in_users = 9;</code>
     *
     * <pre>
     * 牌局用户的基本信息
     * </pre>
     */
    Mahjong.UserCommonCards getInUsers(int index);
    /**
     * <code>repeated .UserCommonCards in_users = 9;</code>
     *
     * <pre>
     * 牌局用户的基本信息
     * </pre>
     */
    int getInUsersCount();
    /**
     * <code>repeated .UserCommonCards in_users = 9;</code>
     *
     * <pre>
     * 牌局用户的基本信息
     * </pre>
     */
    java.util.List<? extends Mahjong.UserCommonCardsOrBuilder> 
        getInUsersOrBuilderList();
    /**
     * <code>repeated .UserCommonCards in_users = 9;</code>
     *
     * <pre>
     * 牌局用户的基本信息
     * </pre>
     */
    Mahjong.UserCommonCardsOrBuilder getInUsersOrBuilder(
        int index);

    // optional int32 share_cards_len = 10;
    /**
     * <code>optional int32 share_cards_len = 10;</code>
     *
     * <pre>
     * 公共牌长度
     * </pre>
     */
    boolean hasShareCardsLen();
    /**
     * <code>optional int32 share_cards_len = 10;</code>
     *
     * <pre>
     * 公共牌长度
     * </pre>
     */
    int getShareCardsLen();

    // optional int32 game_round = 11;
    /**
     * <code>optional int32 game_round = 11;</code>
     *
     * <pre>
     * 每一局内的第几轮
     * </pre>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 11;</code>
     *
     * <pre>
     * 每一局内的第几轮
     * </pre>
     */
    int getGameRound();

    // optional .MyOption my_option = 12;
    /**
     * <code>optional .MyOption my_option = 12;</code>
     *
     * <pre>
     * 自己可以进行的操作
     * </pre>
     */
    boolean hasMyOption();
    /**
     * <code>optional .MyOption my_option = 12;</code>
     *
     * <pre>
     * 自己可以进行的操作
     * </pre>
     */
    Mahjong.MyOption getMyOption();
    /**
     * <code>optional .MyOption my_option = 12;</code>
     *
     * <pre>
     * 自己可以进行的操作
     * </pre>
     */
    Mahjong.MyOptionOrBuilder getMyOptionOrBuilder();

    // optional int32 recv_card_uin = 13;
    /**
     * <code>optional int32 recv_card_uin = 13;</code>
     *
     * <pre>
     * 叫牌的人是谁
     * </pre>
     */
    boolean hasRecvCardUin();
    /**
     * <code>optional int32 recv_card_uin = 13;</code>
     *
     * <pre>
     * 叫牌的人是谁
     * </pre>
     */
    int getRecvCardUin();

    // optional int32 desk_remain_round = 14;
    /**
     * <code>optional int32 desk_remain_round = 14;</code>
     *
     * <pre>
     * 牌桌剩余局数
     * </pre>
     */
    boolean hasDeskRemainRound();
    /**
     * <code>optional int32 desk_remain_round = 14;</code>
     *
     * <pre>
     * 牌桌剩余局数
     * </pre>
     */
    int getDeskRemainRound();

    // optional int32 seat_num = 15;
    /**
     * <code>optional int32 seat_num = 15;</code>
     *
     * <pre>
     * 这是几人桌
     * </pre>
     */
    boolean hasSeatNum();
    /**
     * <code>optional int32 seat_num = 15;</code>
     *
     * <pre>
     * 这是几人桌
     * </pre>
     */
    int getSeatNum();

    // optional int32 remain_time = 16;
    /**
     * <code>optional int32 remain_time = 16;</code>
     *
     * <pre>
     * 解散牌桌投票剩余时长
     * </pre>
     */
    boolean hasRemainTime();
    /**
     * <code>optional int32 remain_time = 16;</code>
     *
     * <pre>
     * 解散牌桌投票剩余时长
     * </pre>
     */
    int getRemainTime();

    // optional int32 apply_uin = 17;
    /**
     * <code>optional int32 apply_uin = 17;</code>
     *
     * <pre>
     * 发起投票人
     * </pre>
     */
    boolean hasApplyUin();
    /**
     * <code>optional int32 apply_uin = 17;</code>
     *
     * <pre>
     * 发起投票人
     * </pre>
     */
    int getApplyUin();

    // optional int32 win_type = 18;
    /**
     * <code>optional int32 win_type = 18;</code>
     *
     * <pre>
     * 1自摸 2点炮
     * </pre>
     */
    boolean hasWinType();
    /**
     * <code>optional int32 win_type = 18;</code>
     *
     * <pre>
     * 1自摸 2点炮
     * </pre>
     */
    int getWinType();

    // optional .ExtraDeskTypeInfo extra_type = 19;
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 19;</code>
     */
    boolean hasExtraType();
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 19;</code>
     */
    Mahjong.ExtraDeskTypeInfo getExtraType();
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 19;</code>
     */
    Mahjong.ExtraDeskTypeInfoOrBuilder getExtraTypeOrBuilder();

    // optional int32 type = 20;
    /**
     * <code>optional int32 type = 20;</code>
     *
     * <pre>
     * 桌子类型 1万载 2转转
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 20;</code>
     *
     * <pre>
     * 桌子类型 1万载 2转转
     * </pre>
     */
    int getType();

    // optional int32 pre_remain_time = 21;
    /**
     * <code>optional int32 pre_remain_time = 21;</code>
     *
     * <pre>
     * 选择飘分上火剩余时长
     * </pre>
     */
    boolean hasPreRemainTime();
    /**
     * <code>optional int32 pre_remain_time = 21;</code>
     *
     * <pre>
     * 选择飘分上火剩余时长
     * </pre>
     */
    int getPreRemainTime();
  }
  /**
   * Protobuf type {@code EvtDeskUserEnter}
   *
   * <pre>
   *服务器用户进入牌桌广播 7016
   * </pre>
   */
  public static final class EvtDeskUserEnter extends
      com.google.protobuf.GeneratedMessage
      implements EvtDeskUserEnterOrBuilder {
    // Use EvtDeskUserEnter.newBuilder() to construct.
    private EvtDeskUserEnter(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EvtDeskUserEnter(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EvtDeskUserEnter defaultInstance;
    public static EvtDeskUserEnter getDefaultInstance() {
      return defaultInstance;
    }

    public EvtDeskUserEnter getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EvtDeskUserEnter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              deskid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              opUin_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              status_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              maxRound_ = input.readInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                users_ = new java.util.ArrayList<Mahjong.GameUserInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              users_.add(input.readMessage(Mahjong.GameUserInfo.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              nextUin_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              dealerSeatid_ = input.readInt32();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                inUsers_ = new java.util.ArrayList<Mahjong.UserCommonCards>();
                mutable_bitField0_ |= 0x00000100;
              }
              inUsers_.add(input.readMessage(Mahjong.UserCommonCards.PARSER, extensionRegistry));
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              shareCardsLen_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              gameRound_ = input.readInt32();
              break;
            }
            case 98: {
              Mahjong.MyOption.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = myOption_.toBuilder();
              }
              myOption_ = input.readMessage(Mahjong.MyOption.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(myOption_);
                myOption_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 104: {
              bitField0_ |= 0x00000200;
              recvCardUin_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000400;
              deskRemainRound_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000800;
              seatNum_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00001000;
              remainTime_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00002000;
              applyUin_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00004000;
              winType_ = input.readInt32();
              break;
            }
            case 154: {
              Mahjong.ExtraDeskTypeInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = extraType_.toBuilder();
              }
              extraType_ = input.readMessage(Mahjong.ExtraDeskTypeInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(extraType_);
                extraType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
            case 160: {
              bitField0_ |= 0x00010000;
              type_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00020000;
              preRemainTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          users_ = java.util.Collections.unmodifiableList(users_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          inUsers_ = java.util.Collections.unmodifiableList(inUsers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_EvtDeskUserEnter_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_EvtDeskUserEnter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.EvtDeskUserEnter.class, Mahjong.EvtDeskUserEnter.Builder.class);
    }

    public static com.google.protobuf.Parser<EvtDeskUserEnter> PARSER =
        new com.google.protobuf.AbstractParser<EvtDeskUserEnter>() {
      public EvtDeskUserEnter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EvtDeskUserEnter(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EvtDeskUserEnter> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 deskid = 1;
    public static final int DESKID_FIELD_NUMBER = 1;
    private int deskid_;
    /**
     * <code>optional int32 deskid = 1;</code>
     *
     * <pre>
     * 桌子id
     * </pre>
     */
    public boolean hasDeskid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 deskid = 1;</code>
     *
     * <pre>
     * 桌子id
     * </pre>
     */
    public int getDeskid() {
      return deskid_;
    }

    // optional int32 op_uin = 2;
    public static final int OP_UIN_FIELD_NUMBER = 2;
    private int opUin_;
    /**
     * <code>optional int32 op_uin = 2;</code>
     *
     * <pre>
     * 进桌的用户id
     * </pre>
     */
    public boolean hasOpUin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 op_uin = 2;</code>
     *
     * <pre>
     * 进桌的用户id
     * </pre>
     */
    public int getOpUin() {
      return opUin_;
    }

    // optional int32 status = 3;
    public static final int STATUS_FIELD_NUMBER = 3;
    private int status_;
    /**
     * <code>optional int32 status = 3;</code>
     *
     * <pre>
     * status
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 status = 3;</code>
     *
     * <pre>
     * status
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // optional int32 max_round = 4;
    public static final int MAX_ROUND_FIELD_NUMBER = 4;
    private int maxRound_;
    /**
     * <code>optional int32 max_round = 4;</code>
     *
     * <pre>
     * 桌子最大局数，建桌的时候就定死了
     * </pre>
     */
    public boolean hasMaxRound() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 max_round = 4;</code>
     *
     * <pre>
     * 桌子最大局数，建桌的时候就定死了
     * </pre>
     */
    public int getMaxRound() {
      return maxRound_;
    }

    // repeated .GameUserInfo users = 5;
    public static final int USERS_FIELD_NUMBER = 5;
    private java.util.List<Mahjong.GameUserInfo> users_;
    /**
     * <code>repeated .GameUserInfo users = 5;</code>
     *
     * <pre>
     * 进桌用户的基本信息
     * </pre>
     */
    public java.util.List<Mahjong.GameUserInfo> getUsersList() {
      return users_;
    }
    /**
     * <code>repeated .GameUserInfo users = 5;</code>
     *
     * <pre>
     * 进桌用户的基本信息
     * </pre>
     */
    public java.util.List<? extends Mahjong.GameUserInfoOrBuilder> 
        getUsersOrBuilderList() {
      return users_;
    }
    /**
     * <code>repeated .GameUserInfo users = 5;</code>
     *
     * <pre>
     * 进桌用户的基本信息
     * </pre>
     */
    public int getUsersCount() {
      return users_.size();
    }
    /**
     * <code>repeated .GameUserInfo users = 5;</code>
     *
     * <pre>
     * 进桌用户的基本信息
     * </pre>
     */
    public Mahjong.GameUserInfo getUsers(int index) {
      return users_.get(index);
    }
    /**
     * <code>repeated .GameUserInfo users = 5;</code>
     *
     * <pre>
     * 进桌用户的基本信息
     * </pre>
     */
    public Mahjong.GameUserInfoOrBuilder getUsersOrBuilder(
        int index) {
      return users_.get(index);
    }

    // optional int32 next_uin = 6;
    public static final int NEXT_UIN_FIELD_NUMBER = 6;
    private int nextUin_;
    /**
     * <code>optional int32 next_uin = 6;</code>
     *
     * <pre>
     * 当前操作用户的id
     * </pre>
     */
    public boolean hasNextUin() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 next_uin = 6;</code>
     *
     * <pre>
     * 当前操作用户的id
     * </pre>
     */
    public int getNextUin() {
      return nextUin_;
    }

    // optional int32 dealer_seatid = 7;
    public static final int DEALER_SEATID_FIELD_NUMBER = 7;
    private int dealerSeatid_;
    /**
     * <code>optional int32 dealer_seatid = 7;</code>
     *
     * <pre>
     * 庄家的座位号
     * </pre>
     */
    public boolean hasDealerSeatid() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 dealer_seatid = 7;</code>
     *
     * <pre>
     * 庄家的座位号
     * </pre>
     */
    public int getDealerSeatid() {
      return dealerSeatid_;
    }

    // repeated int32 cards = 8 [packed = true];
    public static final int CARDS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 8 [packed = true];</code>
     *
     * <pre>
     * 用户手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 8 [packed = true];</code>
     *
     * <pre>
     * 用户手牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 8 [packed = true];</code>
     *
     * <pre>
     * 用户手牌
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }
    private int cardsMemoizedSerializedSize = -1;

    // repeated .UserCommonCards in_users = 9;
    public static final int IN_USERS_FIELD_NUMBER = 9;
    private java.util.List<Mahjong.UserCommonCards> inUsers_;
    /**
     * <code>repeated .UserCommonCards in_users = 9;</code>
     *
     * <pre>
     * 牌局用户的基本信息
     * </pre>
     */
    public java.util.List<Mahjong.UserCommonCards> getInUsersList() {
      return inUsers_;
    }
    /**
     * <code>repeated .UserCommonCards in_users = 9;</code>
     *
     * <pre>
     * 牌局用户的基本信息
     * </pre>
     */
    public java.util.List<? extends Mahjong.UserCommonCardsOrBuilder> 
        getInUsersOrBuilderList() {
      return inUsers_;
    }
    /**
     * <code>repeated .UserCommonCards in_users = 9;</code>
     *
     * <pre>
     * 牌局用户的基本信息
     * </pre>
     */
    public int getInUsersCount() {
      return inUsers_.size();
    }
    /**
     * <code>repeated .UserCommonCards in_users = 9;</code>
     *
     * <pre>
     * 牌局用户的基本信息
     * </pre>
     */
    public Mahjong.UserCommonCards getInUsers(int index) {
      return inUsers_.get(index);
    }
    /**
     * <code>repeated .UserCommonCards in_users = 9;</code>
     *
     * <pre>
     * 牌局用户的基本信息
     * </pre>
     */
    public Mahjong.UserCommonCardsOrBuilder getInUsersOrBuilder(
        int index) {
      return inUsers_.get(index);
    }

    // optional int32 share_cards_len = 10;
    public static final int SHARE_CARDS_LEN_FIELD_NUMBER = 10;
    private int shareCardsLen_;
    /**
     * <code>optional int32 share_cards_len = 10;</code>
     *
     * <pre>
     * 公共牌长度
     * </pre>
     */
    public boolean hasShareCardsLen() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 share_cards_len = 10;</code>
     *
     * <pre>
     * 公共牌长度
     * </pre>
     */
    public int getShareCardsLen() {
      return shareCardsLen_;
    }

    // optional int32 game_round = 11;
    public static final int GAME_ROUND_FIELD_NUMBER = 11;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 11;</code>
     *
     * <pre>
     * 每一局内的第几轮
     * </pre>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 game_round = 11;</code>
     *
     * <pre>
     * 每一局内的第几轮
     * </pre>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // optional .MyOption my_option = 12;
    public static final int MY_OPTION_FIELD_NUMBER = 12;
    private Mahjong.MyOption myOption_;
    /**
     * <code>optional .MyOption my_option = 12;</code>
     *
     * <pre>
     * 自己可以进行的操作
     * </pre>
     */
    public boolean hasMyOption() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .MyOption my_option = 12;</code>
     *
     * <pre>
     * 自己可以进行的操作
     * </pre>
     */
    public Mahjong.MyOption getMyOption() {
      return myOption_;
    }
    /**
     * <code>optional .MyOption my_option = 12;</code>
     *
     * <pre>
     * 自己可以进行的操作
     * </pre>
     */
    public Mahjong.MyOptionOrBuilder getMyOptionOrBuilder() {
      return myOption_;
    }

    // optional int32 recv_card_uin = 13;
    public static final int RECV_CARD_UIN_FIELD_NUMBER = 13;
    private int recvCardUin_;
    /**
     * <code>optional int32 recv_card_uin = 13;</code>
     *
     * <pre>
     * 叫牌的人是谁
     * </pre>
     */
    public boolean hasRecvCardUin() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 recv_card_uin = 13;</code>
     *
     * <pre>
     * 叫牌的人是谁
     * </pre>
     */
    public int getRecvCardUin() {
      return recvCardUin_;
    }

    // optional int32 desk_remain_round = 14;
    public static final int DESK_REMAIN_ROUND_FIELD_NUMBER = 14;
    private int deskRemainRound_;
    /**
     * <code>optional int32 desk_remain_round = 14;</code>
     *
     * <pre>
     * 牌桌剩余局数
     * </pre>
     */
    public boolean hasDeskRemainRound() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 desk_remain_round = 14;</code>
     *
     * <pre>
     * 牌桌剩余局数
     * </pre>
     */
    public int getDeskRemainRound() {
      return deskRemainRound_;
    }

    // optional int32 seat_num = 15;
    public static final int SEAT_NUM_FIELD_NUMBER = 15;
    private int seatNum_;
    /**
     * <code>optional int32 seat_num = 15;</code>
     *
     * <pre>
     * 这是几人桌
     * </pre>
     */
    public boolean hasSeatNum() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 seat_num = 15;</code>
     *
     * <pre>
     * 这是几人桌
     * </pre>
     */
    public int getSeatNum() {
      return seatNum_;
    }

    // optional int32 remain_time = 16;
    public static final int REMAIN_TIME_FIELD_NUMBER = 16;
    private int remainTime_;
    /**
     * <code>optional int32 remain_time = 16;</code>
     *
     * <pre>
     * 解散牌桌投票剩余时长
     * </pre>
     */
    public boolean hasRemainTime() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 remain_time = 16;</code>
     *
     * <pre>
     * 解散牌桌投票剩余时长
     * </pre>
     */
    public int getRemainTime() {
      return remainTime_;
    }

    // optional int32 apply_uin = 17;
    public static final int APPLY_UIN_FIELD_NUMBER = 17;
    private int applyUin_;
    /**
     * <code>optional int32 apply_uin = 17;</code>
     *
     * <pre>
     * 发起投票人
     * </pre>
     */
    public boolean hasApplyUin() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 apply_uin = 17;</code>
     *
     * <pre>
     * 发起投票人
     * </pre>
     */
    public int getApplyUin() {
      return applyUin_;
    }

    // optional int32 win_type = 18;
    public static final int WIN_TYPE_FIELD_NUMBER = 18;
    private int winType_;
    /**
     * <code>optional int32 win_type = 18;</code>
     *
     * <pre>
     * 1自摸 2点炮
     * </pre>
     */
    public boolean hasWinType() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 win_type = 18;</code>
     *
     * <pre>
     * 1自摸 2点炮
     * </pre>
     */
    public int getWinType() {
      return winType_;
    }

    // optional .ExtraDeskTypeInfo extra_type = 19;
    public static final int EXTRA_TYPE_FIELD_NUMBER = 19;
    private Mahjong.ExtraDeskTypeInfo extraType_;
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 19;</code>
     */
    public boolean hasExtraType() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 19;</code>
     */
    public Mahjong.ExtraDeskTypeInfo getExtraType() {
      return extraType_;
    }
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 19;</code>
     */
    public Mahjong.ExtraDeskTypeInfoOrBuilder getExtraTypeOrBuilder() {
      return extraType_;
    }

    // optional int32 type = 20;
    public static final int TYPE_FIELD_NUMBER = 20;
    private int type_;
    /**
     * <code>optional int32 type = 20;</code>
     *
     * <pre>
     * 桌子类型 1万载 2转转
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 type = 20;</code>
     *
     * <pre>
     * 桌子类型 1万载 2转转
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // optional int32 pre_remain_time = 21;
    public static final int PRE_REMAIN_TIME_FIELD_NUMBER = 21;
    private int preRemainTime_;
    /**
     * <code>optional int32 pre_remain_time = 21;</code>
     *
     * <pre>
     * 选择飘分上火剩余时长
     * </pre>
     */
    public boolean hasPreRemainTime() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 pre_remain_time = 21;</code>
     *
     * <pre>
     * 选择飘分上火剩余时长
     * </pre>
     */
    public int getPreRemainTime() {
      return preRemainTime_;
    }

    private void initFields() {
      deskid_ = 0;
      opUin_ = 0;
      status_ = 0;
      maxRound_ = 0;
      users_ = java.util.Collections.emptyList();
      nextUin_ = 0;
      dealerSeatid_ = 0;
      cards_ = java.util.Collections.emptyList();
      inUsers_ = java.util.Collections.emptyList();
      shareCardsLen_ = 0;
      gameRound_ = 0;
      myOption_ = Mahjong.MyOption.getDefaultInstance();
      recvCardUin_ = 0;
      deskRemainRound_ = 0;
      seatNum_ = 0;
      remainTime_ = 0;
      applyUin_ = 0;
      winType_ = 0;
      extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
      type_ = 0;
      preRemainTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, deskid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, opUin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, status_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, maxRound_);
      }
      for (int i = 0; i < users_.size(); i++) {
        output.writeMessage(5, users_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, nextUin_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, dealerSeatid_);
      }
      if (getCardsList().size() > 0) {
        output.writeRawVarint32(66);
        output.writeRawVarint32(cardsMemoizedSerializedSize);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32NoTag(cards_.get(i));
      }
      for (int i = 0; i < inUsers_.size(); i++) {
        output.writeMessage(9, inUsers_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(10, shareCardsLen_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(11, gameRound_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(12, myOption_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(13, recvCardUin_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(14, deskRemainRound_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(15, seatNum_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(16, remainTime_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(17, applyUin_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(18, winType_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(19, extraType_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(20, type_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(21, preRemainTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, deskid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, opUin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, status_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, maxRound_);
      }
      for (int i = 0; i < users_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, users_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, nextUin_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, dealerSeatid_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        if (!getCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        cardsMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < inUsers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, inUsers_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, shareCardsLen_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, gameRound_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, myOption_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, recvCardUin_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, deskRemainRound_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, seatNum_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, remainTime_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, applyUin_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, winType_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, extraType_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, type_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, preRemainTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.EvtDeskUserEnter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.EvtDeskUserEnter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.EvtDeskUserEnter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.EvtDeskUserEnter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.EvtDeskUserEnter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.EvtDeskUserEnter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.EvtDeskUserEnter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.EvtDeskUserEnter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.EvtDeskUserEnter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.EvtDeskUserEnter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.EvtDeskUserEnter prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EvtDeskUserEnter}
     *
     * <pre>
     *服务器用户进入牌桌广播 7016
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.EvtDeskUserEnterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_EvtDeskUserEnter_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_EvtDeskUserEnter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.EvtDeskUserEnter.class, Mahjong.EvtDeskUserEnter.Builder.class);
      }

      // Construct using Mahjong.EvtDeskUserEnter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUsersFieldBuilder();
          getInUsersFieldBuilder();
          getMyOptionFieldBuilder();
          getExtraTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deskid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        opUin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        maxRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (usersBuilder_ == null) {
          users_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          usersBuilder_.clear();
        }
        nextUin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        dealerSeatid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        if (inUsersBuilder_ == null) {
          inUsers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          inUsersBuilder_.clear();
        }
        shareCardsLen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (myOptionBuilder_ == null) {
          myOption_ = Mahjong.MyOption.getDefaultInstance();
        } else {
          myOptionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        recvCardUin_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        deskRemainRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        seatNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        remainTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        applyUin_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        winType_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        if (extraTypeBuilder_ == null) {
          extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
        } else {
          extraTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        preRemainTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_EvtDeskUserEnter_descriptor;
      }

      public Mahjong.EvtDeskUserEnter getDefaultInstanceForType() {
        return Mahjong.EvtDeskUserEnter.getDefaultInstance();
      }

      public Mahjong.EvtDeskUserEnter build() {
        Mahjong.EvtDeskUserEnter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.EvtDeskUserEnter buildPartial() {
        Mahjong.EvtDeskUserEnter result = new Mahjong.EvtDeskUserEnter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deskid_ = deskid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.opUin_ = opUin_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.maxRound_ = maxRound_;
        if (usersBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            users_ = java.util.Collections.unmodifiableList(users_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.users_ = users_;
        } else {
          result.users_ = usersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nextUin_ = nextUin_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.dealerSeatid_ = dealerSeatid_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.cards_ = cards_;
        if (inUsersBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            inUsers_ = java.util.Collections.unmodifiableList(inUsers_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.inUsers_ = inUsers_;
        } else {
          result.inUsers_ = inUsersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        result.shareCardsLen_ = shareCardsLen_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        result.gameRound_ = gameRound_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000100;
        }
        if (myOptionBuilder_ == null) {
          result.myOption_ = myOption_;
        } else {
          result.myOption_ = myOptionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.recvCardUin_ = recvCardUin_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.deskRemainRound_ = deskRemainRound_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.seatNum_ = seatNum_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.remainTime_ = remainTime_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.applyUin_ = applyUin_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.winType_ = winType_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (extraTypeBuilder_ == null) {
          result.extraType_ = extraType_;
        } else {
          result.extraType_ = extraTypeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.preRemainTime_ = preRemainTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.EvtDeskUserEnter) {
          return mergeFrom((Mahjong.EvtDeskUserEnter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.EvtDeskUserEnter other) {
        if (other == Mahjong.EvtDeskUserEnter.getDefaultInstance()) return this;
        if (other.hasDeskid()) {
          setDeskid(other.getDeskid());
        }
        if (other.hasOpUin()) {
          setOpUin(other.getOpUin());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasMaxRound()) {
          setMaxRound(other.getMaxRound());
        }
        if (usersBuilder_ == null) {
          if (!other.users_.isEmpty()) {
            if (users_.isEmpty()) {
              users_ = other.users_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureUsersIsMutable();
              users_.addAll(other.users_);
            }
            onChanged();
          }
        } else {
          if (!other.users_.isEmpty()) {
            if (usersBuilder_.isEmpty()) {
              usersBuilder_.dispose();
              usersBuilder_ = null;
              users_ = other.users_;
              bitField0_ = (bitField0_ & ~0x00000010);
              usersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getUsersFieldBuilder() : null;
            } else {
              usersBuilder_.addAllMessages(other.users_);
            }
          }
        }
        if (other.hasNextUin()) {
          setNextUin(other.getNextUin());
        }
        if (other.hasDealerSeatid()) {
          setDealerSeatid(other.getDealerSeatid());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (inUsersBuilder_ == null) {
          if (!other.inUsers_.isEmpty()) {
            if (inUsers_.isEmpty()) {
              inUsers_ = other.inUsers_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureInUsersIsMutable();
              inUsers_.addAll(other.inUsers_);
            }
            onChanged();
          }
        } else {
          if (!other.inUsers_.isEmpty()) {
            if (inUsersBuilder_.isEmpty()) {
              inUsersBuilder_.dispose();
              inUsersBuilder_ = null;
              inUsers_ = other.inUsers_;
              bitField0_ = (bitField0_ & ~0x00000100);
              inUsersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInUsersFieldBuilder() : null;
            } else {
              inUsersBuilder_.addAllMessages(other.inUsers_);
            }
          }
        }
        if (other.hasShareCardsLen()) {
          setShareCardsLen(other.getShareCardsLen());
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (other.hasMyOption()) {
          mergeMyOption(other.getMyOption());
        }
        if (other.hasRecvCardUin()) {
          setRecvCardUin(other.getRecvCardUin());
        }
        if (other.hasDeskRemainRound()) {
          setDeskRemainRound(other.getDeskRemainRound());
        }
        if (other.hasSeatNum()) {
          setSeatNum(other.getSeatNum());
        }
        if (other.hasRemainTime()) {
          setRemainTime(other.getRemainTime());
        }
        if (other.hasApplyUin()) {
          setApplyUin(other.getApplyUin());
        }
        if (other.hasWinType()) {
          setWinType(other.getWinType());
        }
        if (other.hasExtraType()) {
          mergeExtraType(other.getExtraType());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPreRemainTime()) {
          setPreRemainTime(other.getPreRemainTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.EvtDeskUserEnter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.EvtDeskUserEnter) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 deskid = 1;
      private int deskid_ ;
      /**
       * <code>optional int32 deskid = 1;</code>
       *
       * <pre>
       * 桌子id
       * </pre>
       */
      public boolean hasDeskid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 deskid = 1;</code>
       *
       * <pre>
       * 桌子id
       * </pre>
       */
      public int getDeskid() {
        return deskid_;
      }
      /**
       * <code>optional int32 deskid = 1;</code>
       *
       * <pre>
       * 桌子id
       * </pre>
       */
      public Builder setDeskid(int value) {
        bitField0_ |= 0x00000001;
        deskid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 deskid = 1;</code>
       *
       * <pre>
       * 桌子id
       * </pre>
       */
      public Builder clearDeskid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deskid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 op_uin = 2;
      private int opUin_ ;
      /**
       * <code>optional int32 op_uin = 2;</code>
       *
       * <pre>
       * 进桌的用户id
       * </pre>
       */
      public boolean hasOpUin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 op_uin = 2;</code>
       *
       * <pre>
       * 进桌的用户id
       * </pre>
       */
      public int getOpUin() {
        return opUin_;
      }
      /**
       * <code>optional int32 op_uin = 2;</code>
       *
       * <pre>
       * 进桌的用户id
       * </pre>
       */
      public Builder setOpUin(int value) {
        bitField0_ |= 0x00000002;
        opUin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 op_uin = 2;</code>
       *
       * <pre>
       * 进桌的用户id
       * </pre>
       */
      public Builder clearOpUin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        opUin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 status = 3;
      private int status_ ;
      /**
       * <code>optional int32 status = 3;</code>
       *
       * <pre>
       * status
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 status = 3;</code>
       *
       * <pre>
       * status
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 3;</code>
       *
       * <pre>
       * status
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000004;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 3;</code>
       *
       * <pre>
       * status
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional int32 max_round = 4;
      private int maxRound_ ;
      /**
       * <code>optional int32 max_round = 4;</code>
       *
       * <pre>
       * 桌子最大局数，建桌的时候就定死了
       * </pre>
       */
      public boolean hasMaxRound() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 max_round = 4;</code>
       *
       * <pre>
       * 桌子最大局数，建桌的时候就定死了
       * </pre>
       */
      public int getMaxRound() {
        return maxRound_;
      }
      /**
       * <code>optional int32 max_round = 4;</code>
       *
       * <pre>
       * 桌子最大局数，建桌的时候就定死了
       * </pre>
       */
      public Builder setMaxRound(int value) {
        bitField0_ |= 0x00000008;
        maxRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_round = 4;</code>
       *
       * <pre>
       * 桌子最大局数，建桌的时候就定死了
       * </pre>
       */
      public Builder clearMaxRound() {
        bitField0_ = (bitField0_ & ~0x00000008);
        maxRound_ = 0;
        onChanged();
        return this;
      }

      // repeated .GameUserInfo users = 5;
      private java.util.List<Mahjong.GameUserInfo> users_ =
        java.util.Collections.emptyList();
      private void ensureUsersIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          users_ = new java.util.ArrayList<Mahjong.GameUserInfo>(users_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.GameUserInfo, Mahjong.GameUserInfo.Builder, Mahjong.GameUserInfoOrBuilder> usersBuilder_;

      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public java.util.List<Mahjong.GameUserInfo> getUsersList() {
        if (usersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(users_);
        } else {
          return usersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public int getUsersCount() {
        if (usersBuilder_ == null) {
          return users_.size();
        } else {
          return usersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public Mahjong.GameUserInfo getUsers(int index) {
        if (usersBuilder_ == null) {
          return users_.get(index);
        } else {
          return usersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public Builder setUsers(
          int index, Mahjong.GameUserInfo value) {
        if (usersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsersIsMutable();
          users_.set(index, value);
          onChanged();
        } else {
          usersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public Builder setUsers(
          int index, Mahjong.GameUserInfo.Builder builderForValue) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.set(index, builderForValue.build());
          onChanged();
        } else {
          usersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public Builder addUsers(Mahjong.GameUserInfo value) {
        if (usersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsersIsMutable();
          users_.add(value);
          onChanged();
        } else {
          usersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public Builder addUsers(
          int index, Mahjong.GameUserInfo value) {
        if (usersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsersIsMutable();
          users_.add(index, value);
          onChanged();
        } else {
          usersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public Builder addUsers(
          Mahjong.GameUserInfo.Builder builderForValue) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.add(builderForValue.build());
          onChanged();
        } else {
          usersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public Builder addUsers(
          int index, Mahjong.GameUserInfo.Builder builderForValue) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.add(index, builderForValue.build());
          onChanged();
        } else {
          usersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public Builder addAllUsers(
          java.lang.Iterable<? extends Mahjong.GameUserInfo> values) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          super.addAll(values, users_);
          onChanged();
        } else {
          usersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public Builder clearUsers() {
        if (usersBuilder_ == null) {
          users_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          usersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public Builder removeUsers(int index) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.remove(index);
          onChanged();
        } else {
          usersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public Mahjong.GameUserInfo.Builder getUsersBuilder(
          int index) {
        return getUsersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public Mahjong.GameUserInfoOrBuilder getUsersOrBuilder(
          int index) {
        if (usersBuilder_ == null) {
          return users_.get(index);  } else {
          return usersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public java.util.List<? extends Mahjong.GameUserInfoOrBuilder> 
           getUsersOrBuilderList() {
        if (usersBuilder_ != null) {
          return usersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(users_);
        }
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public Mahjong.GameUserInfo.Builder addUsersBuilder() {
        return getUsersFieldBuilder().addBuilder(
            Mahjong.GameUserInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public Mahjong.GameUserInfo.Builder addUsersBuilder(
          int index) {
        return getUsersFieldBuilder().addBuilder(
            index, Mahjong.GameUserInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .GameUserInfo users = 5;</code>
       *
       * <pre>
       * 进桌用户的基本信息
       * </pre>
       */
      public java.util.List<Mahjong.GameUserInfo.Builder> 
           getUsersBuilderList() {
        return getUsersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.GameUserInfo, Mahjong.GameUserInfo.Builder, Mahjong.GameUserInfoOrBuilder> 
          getUsersFieldBuilder() {
        if (usersBuilder_ == null) {
          usersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Mahjong.GameUserInfo, Mahjong.GameUserInfo.Builder, Mahjong.GameUserInfoOrBuilder>(
                  users_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          users_ = null;
        }
        return usersBuilder_;
      }

      // optional int32 next_uin = 6;
      private int nextUin_ ;
      /**
       * <code>optional int32 next_uin = 6;</code>
       *
       * <pre>
       * 当前操作用户的id
       * </pre>
       */
      public boolean hasNextUin() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 next_uin = 6;</code>
       *
       * <pre>
       * 当前操作用户的id
       * </pre>
       */
      public int getNextUin() {
        return nextUin_;
      }
      /**
       * <code>optional int32 next_uin = 6;</code>
       *
       * <pre>
       * 当前操作用户的id
       * </pre>
       */
      public Builder setNextUin(int value) {
        bitField0_ |= 0x00000020;
        nextUin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 next_uin = 6;</code>
       *
       * <pre>
       * 当前操作用户的id
       * </pre>
       */
      public Builder clearNextUin() {
        bitField0_ = (bitField0_ & ~0x00000020);
        nextUin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dealer_seatid = 7;
      private int dealerSeatid_ ;
      /**
       * <code>optional int32 dealer_seatid = 7;</code>
       *
       * <pre>
       * 庄家的座位号
       * </pre>
       */
      public boolean hasDealerSeatid() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 dealer_seatid = 7;</code>
       *
       * <pre>
       * 庄家的座位号
       * </pre>
       */
      public int getDealerSeatid() {
        return dealerSeatid_;
      }
      /**
       * <code>optional int32 dealer_seatid = 7;</code>
       *
       * <pre>
       * 庄家的座位号
       * </pre>
       */
      public Builder setDealerSeatid(int value) {
        bitField0_ |= 0x00000040;
        dealerSeatid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dealer_seatid = 7;</code>
       *
       * <pre>
       * 庄家的座位号
       * </pre>
       */
      public Builder clearDealerSeatid() {
        bitField0_ = (bitField0_ & ~0x00000040);
        dealerSeatid_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 8 [packed = true];
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 cards = 8 [packed = true];</code>
       *
       * <pre>
       * 用户手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 8 [packed = true];</code>
       *
       * <pre>
       * 用户手牌
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 8 [packed = true];</code>
       *
       * <pre>
       * 用户手牌
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 8 [packed = true];</code>
       *
       * <pre>
       * 用户手牌
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 8 [packed = true];</code>
       *
       * <pre>
       * 用户手牌
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 8 [packed = true];</code>
       *
       * <pre>
       * 用户手牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 8 [packed = true];</code>
       *
       * <pre>
       * 用户手牌
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated .UserCommonCards in_users = 9;
      private java.util.List<Mahjong.UserCommonCards> inUsers_ =
        java.util.Collections.emptyList();
      private void ensureInUsersIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          inUsers_ = new java.util.ArrayList<Mahjong.UserCommonCards>(inUsers_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.UserCommonCards, Mahjong.UserCommonCards.Builder, Mahjong.UserCommonCardsOrBuilder> inUsersBuilder_;

      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public java.util.List<Mahjong.UserCommonCards> getInUsersList() {
        if (inUsersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inUsers_);
        } else {
          return inUsersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public int getInUsersCount() {
        if (inUsersBuilder_ == null) {
          return inUsers_.size();
        } else {
          return inUsersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public Mahjong.UserCommonCards getInUsers(int index) {
        if (inUsersBuilder_ == null) {
          return inUsers_.get(index);
        } else {
          return inUsersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public Builder setInUsers(
          int index, Mahjong.UserCommonCards value) {
        if (inUsersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInUsersIsMutable();
          inUsers_.set(index, value);
          onChanged();
        } else {
          inUsersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public Builder setInUsers(
          int index, Mahjong.UserCommonCards.Builder builderForValue) {
        if (inUsersBuilder_ == null) {
          ensureInUsersIsMutable();
          inUsers_.set(index, builderForValue.build());
          onChanged();
        } else {
          inUsersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public Builder addInUsers(Mahjong.UserCommonCards value) {
        if (inUsersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInUsersIsMutable();
          inUsers_.add(value);
          onChanged();
        } else {
          inUsersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public Builder addInUsers(
          int index, Mahjong.UserCommonCards value) {
        if (inUsersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInUsersIsMutable();
          inUsers_.add(index, value);
          onChanged();
        } else {
          inUsersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public Builder addInUsers(
          Mahjong.UserCommonCards.Builder builderForValue) {
        if (inUsersBuilder_ == null) {
          ensureInUsersIsMutable();
          inUsers_.add(builderForValue.build());
          onChanged();
        } else {
          inUsersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public Builder addInUsers(
          int index, Mahjong.UserCommonCards.Builder builderForValue) {
        if (inUsersBuilder_ == null) {
          ensureInUsersIsMutable();
          inUsers_.add(index, builderForValue.build());
          onChanged();
        } else {
          inUsersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public Builder addAllInUsers(
          java.lang.Iterable<? extends Mahjong.UserCommonCards> values) {
        if (inUsersBuilder_ == null) {
          ensureInUsersIsMutable();
          super.addAll(values, inUsers_);
          onChanged();
        } else {
          inUsersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public Builder clearInUsers() {
        if (inUsersBuilder_ == null) {
          inUsers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          inUsersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public Builder removeInUsers(int index) {
        if (inUsersBuilder_ == null) {
          ensureInUsersIsMutable();
          inUsers_.remove(index);
          onChanged();
        } else {
          inUsersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public Mahjong.UserCommonCards.Builder getInUsersBuilder(
          int index) {
        return getInUsersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public Mahjong.UserCommonCardsOrBuilder getInUsersOrBuilder(
          int index) {
        if (inUsersBuilder_ == null) {
          return inUsers_.get(index);  } else {
          return inUsersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public java.util.List<? extends Mahjong.UserCommonCardsOrBuilder> 
           getInUsersOrBuilderList() {
        if (inUsersBuilder_ != null) {
          return inUsersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inUsers_);
        }
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public Mahjong.UserCommonCards.Builder addInUsersBuilder() {
        return getInUsersFieldBuilder().addBuilder(
            Mahjong.UserCommonCards.getDefaultInstance());
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public Mahjong.UserCommonCards.Builder addInUsersBuilder(
          int index) {
        return getInUsersFieldBuilder().addBuilder(
            index, Mahjong.UserCommonCards.getDefaultInstance());
      }
      /**
       * <code>repeated .UserCommonCards in_users = 9;</code>
       *
       * <pre>
       * 牌局用户的基本信息
       * </pre>
       */
      public java.util.List<Mahjong.UserCommonCards.Builder> 
           getInUsersBuilderList() {
        return getInUsersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.UserCommonCards, Mahjong.UserCommonCards.Builder, Mahjong.UserCommonCardsOrBuilder> 
          getInUsersFieldBuilder() {
        if (inUsersBuilder_ == null) {
          inUsersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Mahjong.UserCommonCards, Mahjong.UserCommonCards.Builder, Mahjong.UserCommonCardsOrBuilder>(
                  inUsers_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          inUsers_ = null;
        }
        return inUsersBuilder_;
      }

      // optional int32 share_cards_len = 10;
      private int shareCardsLen_ ;
      /**
       * <code>optional int32 share_cards_len = 10;</code>
       *
       * <pre>
       * 公共牌长度
       * </pre>
       */
      public boolean hasShareCardsLen() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 share_cards_len = 10;</code>
       *
       * <pre>
       * 公共牌长度
       * </pre>
       */
      public int getShareCardsLen() {
        return shareCardsLen_;
      }
      /**
       * <code>optional int32 share_cards_len = 10;</code>
       *
       * <pre>
       * 公共牌长度
       * </pre>
       */
      public Builder setShareCardsLen(int value) {
        bitField0_ |= 0x00000200;
        shareCardsLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 share_cards_len = 10;</code>
       *
       * <pre>
       * 公共牌长度
       * </pre>
       */
      public Builder clearShareCardsLen() {
        bitField0_ = (bitField0_ & ~0x00000200);
        shareCardsLen_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_round = 11;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 11;</code>
       *
       * <pre>
       * 每一局内的第几轮
       * </pre>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 game_round = 11;</code>
       *
       * <pre>
       * 每一局内的第几轮
       * </pre>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 11;</code>
       *
       * <pre>
       * 每一局内的第几轮
       * </pre>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000400;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 11;</code>
       *
       * <pre>
       * 每一局内的第几轮
       * </pre>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000400);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // optional .MyOption my_option = 12;
      private Mahjong.MyOption myOption_ = Mahjong.MyOption.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.MyOption, Mahjong.MyOption.Builder, Mahjong.MyOptionOrBuilder> myOptionBuilder_;
      /**
       * <code>optional .MyOption my_option = 12;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public boolean hasMyOption() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .MyOption my_option = 12;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public Mahjong.MyOption getMyOption() {
        if (myOptionBuilder_ == null) {
          return myOption_;
        } else {
          return myOptionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .MyOption my_option = 12;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public Builder setMyOption(Mahjong.MyOption value) {
        if (myOptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          myOption_ = value;
          onChanged();
        } else {
          myOptionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .MyOption my_option = 12;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public Builder setMyOption(
          Mahjong.MyOption.Builder builderForValue) {
        if (myOptionBuilder_ == null) {
          myOption_ = builderForValue.build();
          onChanged();
        } else {
          myOptionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .MyOption my_option = 12;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public Builder mergeMyOption(Mahjong.MyOption value) {
        if (myOptionBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              myOption_ != Mahjong.MyOption.getDefaultInstance()) {
            myOption_ =
              Mahjong.MyOption.newBuilder(myOption_).mergeFrom(value).buildPartial();
          } else {
            myOption_ = value;
          }
          onChanged();
        } else {
          myOptionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .MyOption my_option = 12;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public Builder clearMyOption() {
        if (myOptionBuilder_ == null) {
          myOption_ = Mahjong.MyOption.getDefaultInstance();
          onChanged();
        } else {
          myOptionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .MyOption my_option = 12;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public Mahjong.MyOption.Builder getMyOptionBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getMyOptionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .MyOption my_option = 12;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public Mahjong.MyOptionOrBuilder getMyOptionOrBuilder() {
        if (myOptionBuilder_ != null) {
          return myOptionBuilder_.getMessageOrBuilder();
        } else {
          return myOption_;
        }
      }
      /**
       * <code>optional .MyOption my_option = 12;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.MyOption, Mahjong.MyOption.Builder, Mahjong.MyOptionOrBuilder> 
          getMyOptionFieldBuilder() {
        if (myOptionBuilder_ == null) {
          myOptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Mahjong.MyOption, Mahjong.MyOption.Builder, Mahjong.MyOptionOrBuilder>(
                  myOption_,
                  getParentForChildren(),
                  isClean());
          myOption_ = null;
        }
        return myOptionBuilder_;
      }

      // optional int32 recv_card_uin = 13;
      private int recvCardUin_ ;
      /**
       * <code>optional int32 recv_card_uin = 13;</code>
       *
       * <pre>
       * 叫牌的人是谁
       * </pre>
       */
      public boolean hasRecvCardUin() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 recv_card_uin = 13;</code>
       *
       * <pre>
       * 叫牌的人是谁
       * </pre>
       */
      public int getRecvCardUin() {
        return recvCardUin_;
      }
      /**
       * <code>optional int32 recv_card_uin = 13;</code>
       *
       * <pre>
       * 叫牌的人是谁
       * </pre>
       */
      public Builder setRecvCardUin(int value) {
        bitField0_ |= 0x00001000;
        recvCardUin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 recv_card_uin = 13;</code>
       *
       * <pre>
       * 叫牌的人是谁
       * </pre>
       */
      public Builder clearRecvCardUin() {
        bitField0_ = (bitField0_ & ~0x00001000);
        recvCardUin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 desk_remain_round = 14;
      private int deskRemainRound_ ;
      /**
       * <code>optional int32 desk_remain_round = 14;</code>
       *
       * <pre>
       * 牌桌剩余局数
       * </pre>
       */
      public boolean hasDeskRemainRound() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 desk_remain_round = 14;</code>
       *
       * <pre>
       * 牌桌剩余局数
       * </pre>
       */
      public int getDeskRemainRound() {
        return deskRemainRound_;
      }
      /**
       * <code>optional int32 desk_remain_round = 14;</code>
       *
       * <pre>
       * 牌桌剩余局数
       * </pre>
       */
      public Builder setDeskRemainRound(int value) {
        bitField0_ |= 0x00002000;
        deskRemainRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 desk_remain_round = 14;</code>
       *
       * <pre>
       * 牌桌剩余局数
       * </pre>
       */
      public Builder clearDeskRemainRound() {
        bitField0_ = (bitField0_ & ~0x00002000);
        deskRemainRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat_num = 15;
      private int seatNum_ ;
      /**
       * <code>optional int32 seat_num = 15;</code>
       *
       * <pre>
       * 这是几人桌
       * </pre>
       */
      public boolean hasSeatNum() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 seat_num = 15;</code>
       *
       * <pre>
       * 这是几人桌
       * </pre>
       */
      public int getSeatNum() {
        return seatNum_;
      }
      /**
       * <code>optional int32 seat_num = 15;</code>
       *
       * <pre>
       * 这是几人桌
       * </pre>
       */
      public Builder setSeatNum(int value) {
        bitField0_ |= 0x00004000;
        seatNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_num = 15;</code>
       *
       * <pre>
       * 这是几人桌
       * </pre>
       */
      public Builder clearSeatNum() {
        bitField0_ = (bitField0_ & ~0x00004000);
        seatNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remain_time = 16;
      private int remainTime_ ;
      /**
       * <code>optional int32 remain_time = 16;</code>
       *
       * <pre>
       * 解散牌桌投票剩余时长
       * </pre>
       */
      public boolean hasRemainTime() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 remain_time = 16;</code>
       *
       * <pre>
       * 解散牌桌投票剩余时长
       * </pre>
       */
      public int getRemainTime() {
        return remainTime_;
      }
      /**
       * <code>optional int32 remain_time = 16;</code>
       *
       * <pre>
       * 解散牌桌投票剩余时长
       * </pre>
       */
      public Builder setRemainTime(int value) {
        bitField0_ |= 0x00008000;
        remainTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remain_time = 16;</code>
       *
       * <pre>
       * 解散牌桌投票剩余时长
       * </pre>
       */
      public Builder clearRemainTime() {
        bitField0_ = (bitField0_ & ~0x00008000);
        remainTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 apply_uin = 17;
      private int applyUin_ ;
      /**
       * <code>optional int32 apply_uin = 17;</code>
       *
       * <pre>
       * 发起投票人
       * </pre>
       */
      public boolean hasApplyUin() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 apply_uin = 17;</code>
       *
       * <pre>
       * 发起投票人
       * </pre>
       */
      public int getApplyUin() {
        return applyUin_;
      }
      /**
       * <code>optional int32 apply_uin = 17;</code>
       *
       * <pre>
       * 发起投票人
       * </pre>
       */
      public Builder setApplyUin(int value) {
        bitField0_ |= 0x00010000;
        applyUin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 apply_uin = 17;</code>
       *
       * <pre>
       * 发起投票人
       * </pre>
       */
      public Builder clearApplyUin() {
        bitField0_ = (bitField0_ & ~0x00010000);
        applyUin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 win_type = 18;
      private int winType_ ;
      /**
       * <code>optional int32 win_type = 18;</code>
       *
       * <pre>
       * 1自摸 2点炮
       * </pre>
       */
      public boolean hasWinType() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 win_type = 18;</code>
       *
       * <pre>
       * 1自摸 2点炮
       * </pre>
       */
      public int getWinType() {
        return winType_;
      }
      /**
       * <code>optional int32 win_type = 18;</code>
       *
       * <pre>
       * 1自摸 2点炮
       * </pre>
       */
      public Builder setWinType(int value) {
        bitField0_ |= 0x00020000;
        winType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 win_type = 18;</code>
       *
       * <pre>
       * 1自摸 2点炮
       * </pre>
       */
      public Builder clearWinType() {
        bitField0_ = (bitField0_ & ~0x00020000);
        winType_ = 0;
        onChanged();
        return this;
      }

      // optional .ExtraDeskTypeInfo extra_type = 19;
      private Mahjong.ExtraDeskTypeInfo extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.ExtraDeskTypeInfo, Mahjong.ExtraDeskTypeInfo.Builder, Mahjong.ExtraDeskTypeInfoOrBuilder> extraTypeBuilder_;
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 19;</code>
       */
      public boolean hasExtraType() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 19;</code>
       */
      public Mahjong.ExtraDeskTypeInfo getExtraType() {
        if (extraTypeBuilder_ == null) {
          return extraType_;
        } else {
          return extraTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 19;</code>
       */
      public Builder setExtraType(Mahjong.ExtraDeskTypeInfo value) {
        if (extraTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          extraType_ = value;
          onChanged();
        } else {
          extraTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 19;</code>
       */
      public Builder setExtraType(
          Mahjong.ExtraDeskTypeInfo.Builder builderForValue) {
        if (extraTypeBuilder_ == null) {
          extraType_ = builderForValue.build();
          onChanged();
        } else {
          extraTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 19;</code>
       */
      public Builder mergeExtraType(Mahjong.ExtraDeskTypeInfo value) {
        if (extraTypeBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              extraType_ != Mahjong.ExtraDeskTypeInfo.getDefaultInstance()) {
            extraType_ =
              Mahjong.ExtraDeskTypeInfo.newBuilder(extraType_).mergeFrom(value).buildPartial();
          } else {
            extraType_ = value;
          }
          onChanged();
        } else {
          extraTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 19;</code>
       */
      public Builder clearExtraType() {
        if (extraTypeBuilder_ == null) {
          extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
          onChanged();
        } else {
          extraTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 19;</code>
       */
      public Mahjong.ExtraDeskTypeInfo.Builder getExtraTypeBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getExtraTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 19;</code>
       */
      public Mahjong.ExtraDeskTypeInfoOrBuilder getExtraTypeOrBuilder() {
        if (extraTypeBuilder_ != null) {
          return extraTypeBuilder_.getMessageOrBuilder();
        } else {
          return extraType_;
        }
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.ExtraDeskTypeInfo, Mahjong.ExtraDeskTypeInfo.Builder, Mahjong.ExtraDeskTypeInfoOrBuilder> 
          getExtraTypeFieldBuilder() {
        if (extraTypeBuilder_ == null) {
          extraTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Mahjong.ExtraDeskTypeInfo, Mahjong.ExtraDeskTypeInfo.Builder, Mahjong.ExtraDeskTypeInfoOrBuilder>(
                  extraType_,
                  getParentForChildren(),
                  isClean());
          extraType_ = null;
        }
        return extraTypeBuilder_;
      }

      // optional int32 type = 20;
      private int type_ ;
      /**
       * <code>optional int32 type = 20;</code>
       *
       * <pre>
       * 桌子类型 1万载 2转转
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 type = 20;</code>
       *
       * <pre>
       * 桌子类型 1万载 2转转
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 20;</code>
       *
       * <pre>
       * 桌子类型 1万载 2转转
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00080000;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 20;</code>
       *
       * <pre>
       * 桌子类型 1万载 2转转
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00080000);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pre_remain_time = 21;
      private int preRemainTime_ ;
      /**
       * <code>optional int32 pre_remain_time = 21;</code>
       *
       * <pre>
       * 选择飘分上火剩余时长
       * </pre>
       */
      public boolean hasPreRemainTime() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 pre_remain_time = 21;</code>
       *
       * <pre>
       * 选择飘分上火剩余时长
       * </pre>
       */
      public int getPreRemainTime() {
        return preRemainTime_;
      }
      /**
       * <code>optional int32 pre_remain_time = 21;</code>
       *
       * <pre>
       * 选择飘分上火剩余时长
       * </pre>
       */
      public Builder setPreRemainTime(int value) {
        bitField0_ |= 0x00100000;
        preRemainTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pre_remain_time = 21;</code>
       *
       * <pre>
       * 选择飘分上火剩余时长
       * </pre>
       */
      public Builder clearPreRemainTime() {
        bitField0_ = (bitField0_ & ~0x00100000);
        preRemainTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EvtDeskUserEnter)
    }

    static {
      defaultInstance = new EvtDeskUserEnter(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EvtDeskUserEnter)
  }

  public interface GameExitDeskReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code GameExitDeskReq}
   *
   * <pre>
   *客户端请求退出牌桌 7003
   * </pre>
   */
  public static final class GameExitDeskReq extends
      com.google.protobuf.GeneratedMessage
      implements GameExitDeskReqOrBuilder {
    // Use GameExitDeskReq.newBuilder() to construct.
    private GameExitDeskReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameExitDeskReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameExitDeskReq defaultInstance;
    public static GameExitDeskReq getDefaultInstance() {
      return defaultInstance;
    }

    public GameExitDeskReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameExitDeskReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameExitDeskReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameExitDeskReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameExitDeskReq.class, Mahjong.GameExitDeskReq.Builder.class);
    }

    public static com.google.protobuf.Parser<GameExitDeskReq> PARSER =
        new com.google.protobuf.AbstractParser<GameExitDeskReq>() {
      public GameExitDeskReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameExitDeskReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameExitDeskReq> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameExitDeskReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameExitDeskReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameExitDeskReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameExitDeskReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameExitDeskReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameExitDeskReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameExitDeskReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameExitDeskReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameExitDeskReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameExitDeskReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameExitDeskReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameExitDeskReq}
     *
     * <pre>
     *客户端请求退出牌桌 7003
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameExitDeskReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameExitDeskReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameExitDeskReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameExitDeskReq.class, Mahjong.GameExitDeskReq.Builder.class);
      }

      // Construct using Mahjong.GameExitDeskReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameExitDeskReq_descriptor;
      }

      public Mahjong.GameExitDeskReq getDefaultInstanceForType() {
        return Mahjong.GameExitDeskReq.getDefaultInstance();
      }

      public Mahjong.GameExitDeskReq build() {
        Mahjong.GameExitDeskReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameExitDeskReq buildPartial() {
        Mahjong.GameExitDeskReq result = new Mahjong.GameExitDeskReq(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameExitDeskReq) {
          return mergeFrom((Mahjong.GameExitDeskReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameExitDeskReq other) {
        if (other == Mahjong.GameExitDeskReq.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameExitDeskReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameExitDeskReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameExitDeskReq)
    }

    static {
      defaultInstance = new GameExitDeskReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameExitDeskReq)
  }

  public interface GameExitDeskRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 ret = 1;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>optional int32 ret = 1;</code>
     */
    int getRet();
  }
  /**
   * Protobuf type {@code GameExitDeskRsp}
   */
  public static final class GameExitDeskRsp extends
      com.google.protobuf.GeneratedMessage
      implements GameExitDeskRspOrBuilder {
    // Use GameExitDeskRsp.newBuilder() to construct.
    private GameExitDeskRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameExitDeskRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameExitDeskRsp defaultInstance;
    public static GameExitDeskRsp getDefaultInstance() {
      return defaultInstance;
    }

    public GameExitDeskRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameExitDeskRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ret_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameExitDeskRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameExitDeskRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameExitDeskRsp.class, Mahjong.GameExitDeskRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<GameExitDeskRsp> PARSER =
        new com.google.protobuf.AbstractParser<GameExitDeskRsp>() {
      public GameExitDeskRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameExitDeskRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameExitDeskRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 ret = 1;
    public static final int RET_FIELD_NUMBER = 1;
    private int ret_;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public int getRet() {
      return ret_;
    }

    private void initFields() {
      ret_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ret_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ret_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameExitDeskRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameExitDeskRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameExitDeskRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameExitDeskRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameExitDeskRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameExitDeskRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameExitDeskRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameExitDeskRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameExitDeskRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameExitDeskRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameExitDeskRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameExitDeskRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameExitDeskRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameExitDeskRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameExitDeskRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameExitDeskRsp.class, Mahjong.GameExitDeskRsp.Builder.class);
      }

      // Construct using Mahjong.GameExitDeskRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameExitDeskRsp_descriptor;
      }

      public Mahjong.GameExitDeskRsp getDefaultInstanceForType() {
        return Mahjong.GameExitDeskRsp.getDefaultInstance();
      }

      public Mahjong.GameExitDeskRsp build() {
        Mahjong.GameExitDeskRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameExitDeskRsp buildPartial() {
        Mahjong.GameExitDeskRsp result = new Mahjong.GameExitDeskRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ret_ = ret_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameExitDeskRsp) {
          return mergeFrom((Mahjong.GameExitDeskRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameExitDeskRsp other) {
        if (other == Mahjong.GameExitDeskRsp.getDefaultInstance()) return this;
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameExitDeskRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameExitDeskRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 ret = 1;
      private int ret_ ;
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000001;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ret_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameExitDeskRsp)
    }

    static {
      defaultInstance = new GameExitDeskRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameExitDeskRsp)
  }

  public interface DeskPlayInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 cards = 1 [packed = true];
    /**
     * <code>repeated int32 cards = 1 [packed = true];</code>
     *
     * <pre>
     * 当前手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 1 [packed = true];</code>
     *
     * <pre>
     * 当前手牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 1 [packed = true];</code>
     *
     * <pre>
     * 当前手牌
     * </pre>
     */
    int getCards(int index);

    // optional int32 card_len = 2;
    /**
     * <code>optional int32 card_len = 2;</code>
     *
     * <pre>
     * 当前手牌长度
     * </pre>
     */
    boolean hasCardLen();
    /**
     * <code>optional int32 card_len = 2;</code>
     *
     * <pre>
     * 当前手牌长度
     * </pre>
     */
    int getCardLen();

    // repeated int32 out_cards = 3 [packed = true];
    /**
     * <code>repeated int32 out_cards = 3 [packed = true];</code>
     *
     * <pre>
     * 吃杠碰的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getOutCardsList();
    /**
     * <code>repeated int32 out_cards = 3 [packed = true];</code>
     *
     * <pre>
     * 吃杠碰的牌
     * </pre>
     */
    int getOutCardsCount();
    /**
     * <code>repeated int32 out_cards = 3 [packed = true];</code>
     *
     * <pre>
     * 吃杠碰的牌
     * </pre>
     */
    int getOutCards(int index);

    // optional int32 out_card_len = 4;
    /**
     * <code>optional int32 out_card_len = 4;</code>
     *
     * <pre>
     * 吃杠碰的牌的长度
     * </pre>
     */
    boolean hasOutCardLen();
    /**
     * <code>optional int32 out_card_len = 4;</code>
     *
     * <pre>
     * 吃杠碰的牌的长度
     * </pre>
     */
    int getOutCardLen();

    // repeated int32 discards = 5 [packed = true];
    /**
     * <code>repeated int32 discards = 5 [packed = true];</code>
     *
     * <pre>
     * 出出去的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getDiscardsList();
    /**
     * <code>repeated int32 discards = 5 [packed = true];</code>
     *
     * <pre>
     * 出出去的牌
     * </pre>
     */
    int getDiscardsCount();
    /**
     * <code>repeated int32 discards = 5 [packed = true];</code>
     *
     * <pre>
     * 出出去的牌
     * </pre>
     */
    int getDiscards(int index);

    // optional int32 status = 6;
    /**
     * <code>optional int32 status = 6;</code>
     *
     * <pre>
     * 玩家的实时状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 6;</code>
     *
     * <pre>
     * 玩家的实时状态
     * </pre>
     */
    int getStatus();

    // optional int32 chips = 7;
    /**
     * <code>optional int32 chips = 7;</code>
     *
     * <pre>
     * 玩家的当前分数
     * </pre>
     */
    boolean hasChips();
    /**
     * <code>optional int32 chips = 7;</code>
     *
     * <pre>
     * 玩家的当前分数
     * </pre>
     */
    int getChips();

    // optional int32 round_win_chips = 8;
    /**
     * <code>optional int32 round_win_chips = 8;</code>
     *
     * <pre>
     * 这一局赢下的分数
     * </pre>
     */
    boolean hasRoundWinChips();
    /**
     * <code>optional int32 round_win_chips = 8;</code>
     *
     * <pre>
     * 这一局赢下的分数
     * </pre>
     */
    int getRoundWinChips();

    // optional int32 total_chi_num = 9;
    /**
     * <code>optional int32 total_chi_num = 9;</code>
     *
     * <pre>
     * 所有局数内的吃牌操作次数
     * </pre>
     */
    boolean hasTotalChiNum();
    /**
     * <code>optional int32 total_chi_num = 9;</code>
     *
     * <pre>
     * 所有局数内的吃牌操作次数
     * </pre>
     */
    int getTotalChiNum();

    // optional int32 total_peng_num = 10;
    /**
     * <code>optional int32 total_peng_num = 10;</code>
     *
     * <pre>
     * 所有局数内的碰牌操作次数
     * </pre>
     */
    boolean hasTotalPengNum();
    /**
     * <code>optional int32 total_peng_num = 10;</code>
     *
     * <pre>
     * 所有局数内的碰牌操作次数
     * </pre>
     */
    int getTotalPengNum();

    // optional int32 total_gang_num = 11;
    /**
     * <code>optional int32 total_gang_num = 11;</code>
     *
     * <pre>
     * 所有局数内的杠牌操作次数
     * </pre>
     */
    boolean hasTotalGangNum();
    /**
     * <code>optional int32 total_gang_num = 11;</code>
     *
     * <pre>
     * 所有局数内的杠牌操作次数
     * </pre>
     */
    int getTotalGangNum();

    // optional int32 total_ganged_num = 12;
    /**
     * <code>optional int32 total_ganged_num = 12;</code>
     *
     * <pre>
     * 所有局数内的被别人杠的次数
     * </pre>
     */
    boolean hasTotalGangedNum();
    /**
     * <code>optional int32 total_ganged_num = 12;</code>
     *
     * <pre>
     * 所有局数内的被别人杠的次数
     * </pre>
     */
    int getTotalGangedNum();

    // optional int32 total_hu_num = 13;
    /**
     * <code>optional int32 total_hu_num = 13;</code>
     *
     * <pre>
     * 所有局数内的胡牌次数
     * </pre>
     */
    boolean hasTotalHuNum();
    /**
     * <code>optional int32 total_hu_num = 13;</code>
     *
     * <pre>
     * 所有局数内的胡牌次数
     * </pre>
     */
    int getTotalHuNum();

    // optional int32 total_hued_num = 14;
    /**
     * <code>optional int32 total_hued_num = 14;</code>
     *
     * <pre>
     * 所有局数内被别人胡的次数
     * </pre>
     */
    boolean hasTotalHuedNum();
    /**
     * <code>optional int32 total_hued_num = 14;</code>
     *
     * <pre>
     * 所有局数内被别人胡的次数
     * </pre>
     */
    int getTotalHuedNum();

    // optional int32 round_chi_num = 15;
    /**
     * <code>optional int32 round_chi_num = 15;</code>
     *
     * <pre>
     * 单局
     * </pre>
     */
    boolean hasRoundChiNum();
    /**
     * <code>optional int32 round_chi_num = 15;</code>
     *
     * <pre>
     * 单局
     * </pre>
     */
    int getRoundChiNum();

    // optional int32 round_peng_num = 16;
    /**
     * <code>optional int32 round_peng_num = 16;</code>
     */
    boolean hasRoundPengNum();
    /**
     * <code>optional int32 round_peng_num = 16;</code>
     */
    int getRoundPengNum();

    // optional int32 round_gang_num = 17;
    /**
     * <code>optional int32 round_gang_num = 17;</code>
     */
    boolean hasRoundGangNum();
    /**
     * <code>optional int32 round_gang_num = 17;</code>
     */
    int getRoundGangNum();

    // optional int32 round_ganged_num = 18;
    /**
     * <code>optional int32 round_ganged_num = 18;</code>
     */
    boolean hasRoundGangedNum();
    /**
     * <code>optional int32 round_ganged_num = 18;</code>
     */
    int getRoundGangedNum();

    // optional int32 role = 19;
    /**
     * <code>optional int32 role = 19;</code>
     *
     * <pre>
     * 用户角色，是否是状态
     * </pre>
     */
    boolean hasRole();
    /**
     * <code>optional int32 role = 19;</code>
     *
     * <pre>
     * 用户角色，是否是状态
     * </pre>
     */
    int getRole();
  }
  /**
   * Protobuf type {@code DeskPlayInfo}
   */
  public static final class DeskPlayInfo extends
      com.google.protobuf.GeneratedMessage
      implements DeskPlayInfoOrBuilder {
    // Use DeskPlayInfo.newBuilder() to construct.
    private DeskPlayInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeskPlayInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeskPlayInfo defaultInstance;
    public static DeskPlayInfo getDefaultInstance() {
      return defaultInstance;
    }

    public DeskPlayInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeskPlayInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              cardLen_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                outCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              outCards_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                outCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                outCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              outCardLen_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                discards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              discards_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                discards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                discards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000004;
              status_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              chips_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              roundWinChips_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              totalChiNum_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              totalPengNum_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              totalGangNum_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              totalGangedNum_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000200;
              totalHuNum_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000400;
              totalHuedNum_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000800;
              roundChiNum_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00001000;
              roundPengNum_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00002000;
              roundGangNum_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00004000;
              roundGangedNum_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00008000;
              role_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          outCards_ = java.util.Collections.unmodifiableList(outCards_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          discards_ = java.util.Collections.unmodifiableList(discards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_DeskPlayInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_DeskPlayInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.DeskPlayInfo.class, Mahjong.DeskPlayInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<DeskPlayInfo> PARSER =
        new com.google.protobuf.AbstractParser<DeskPlayInfo>() {
      public DeskPlayInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeskPlayInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeskPlayInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 cards = 1 [packed = true];
    public static final int CARDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 1 [packed = true];</code>
     *
     * <pre>
     * 当前手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 1 [packed = true];</code>
     *
     * <pre>
     * 当前手牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 1 [packed = true];</code>
     *
     * <pre>
     * 当前手牌
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }
    private int cardsMemoizedSerializedSize = -1;

    // optional int32 card_len = 2;
    public static final int CARD_LEN_FIELD_NUMBER = 2;
    private int cardLen_;
    /**
     * <code>optional int32 card_len = 2;</code>
     *
     * <pre>
     * 当前手牌长度
     * </pre>
     */
    public boolean hasCardLen() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 card_len = 2;</code>
     *
     * <pre>
     * 当前手牌长度
     * </pre>
     */
    public int getCardLen() {
      return cardLen_;
    }

    // repeated int32 out_cards = 3 [packed = true];
    public static final int OUT_CARDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> outCards_;
    /**
     * <code>repeated int32 out_cards = 3 [packed = true];</code>
     *
     * <pre>
     * 吃杠碰的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOutCardsList() {
      return outCards_;
    }
    /**
     * <code>repeated int32 out_cards = 3 [packed = true];</code>
     *
     * <pre>
     * 吃杠碰的牌
     * </pre>
     */
    public int getOutCardsCount() {
      return outCards_.size();
    }
    /**
     * <code>repeated int32 out_cards = 3 [packed = true];</code>
     *
     * <pre>
     * 吃杠碰的牌
     * </pre>
     */
    public int getOutCards(int index) {
      return outCards_.get(index);
    }
    private int outCardsMemoizedSerializedSize = -1;

    // optional int32 out_card_len = 4;
    public static final int OUT_CARD_LEN_FIELD_NUMBER = 4;
    private int outCardLen_;
    /**
     * <code>optional int32 out_card_len = 4;</code>
     *
     * <pre>
     * 吃杠碰的牌的长度
     * </pre>
     */
    public boolean hasOutCardLen() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 out_card_len = 4;</code>
     *
     * <pre>
     * 吃杠碰的牌的长度
     * </pre>
     */
    public int getOutCardLen() {
      return outCardLen_;
    }

    // repeated int32 discards = 5 [packed = true];
    public static final int DISCARDS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> discards_;
    /**
     * <code>repeated int32 discards = 5 [packed = true];</code>
     *
     * <pre>
     * 出出去的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDiscardsList() {
      return discards_;
    }
    /**
     * <code>repeated int32 discards = 5 [packed = true];</code>
     *
     * <pre>
     * 出出去的牌
     * </pre>
     */
    public int getDiscardsCount() {
      return discards_.size();
    }
    /**
     * <code>repeated int32 discards = 5 [packed = true];</code>
     *
     * <pre>
     * 出出去的牌
     * </pre>
     */
    public int getDiscards(int index) {
      return discards_.get(index);
    }
    private int discardsMemoizedSerializedSize = -1;

    // optional int32 status = 6;
    public static final int STATUS_FIELD_NUMBER = 6;
    private int status_;
    /**
     * <code>optional int32 status = 6;</code>
     *
     * <pre>
     * 玩家的实时状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 status = 6;</code>
     *
     * <pre>
     * 玩家的实时状态
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // optional int32 chips = 7;
    public static final int CHIPS_FIELD_NUMBER = 7;
    private int chips_;
    /**
     * <code>optional int32 chips = 7;</code>
     *
     * <pre>
     * 玩家的当前分数
     * </pre>
     */
    public boolean hasChips() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 chips = 7;</code>
     *
     * <pre>
     * 玩家的当前分数
     * </pre>
     */
    public int getChips() {
      return chips_;
    }

    // optional int32 round_win_chips = 8;
    public static final int ROUND_WIN_CHIPS_FIELD_NUMBER = 8;
    private int roundWinChips_;
    /**
     * <code>optional int32 round_win_chips = 8;</code>
     *
     * <pre>
     * 这一局赢下的分数
     * </pre>
     */
    public boolean hasRoundWinChips() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 round_win_chips = 8;</code>
     *
     * <pre>
     * 这一局赢下的分数
     * </pre>
     */
    public int getRoundWinChips() {
      return roundWinChips_;
    }

    // optional int32 total_chi_num = 9;
    public static final int TOTAL_CHI_NUM_FIELD_NUMBER = 9;
    private int totalChiNum_;
    /**
     * <code>optional int32 total_chi_num = 9;</code>
     *
     * <pre>
     * 所有局数内的吃牌操作次数
     * </pre>
     */
    public boolean hasTotalChiNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 total_chi_num = 9;</code>
     *
     * <pre>
     * 所有局数内的吃牌操作次数
     * </pre>
     */
    public int getTotalChiNum() {
      return totalChiNum_;
    }

    // optional int32 total_peng_num = 10;
    public static final int TOTAL_PENG_NUM_FIELD_NUMBER = 10;
    private int totalPengNum_;
    /**
     * <code>optional int32 total_peng_num = 10;</code>
     *
     * <pre>
     * 所有局数内的碰牌操作次数
     * </pre>
     */
    public boolean hasTotalPengNum() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 total_peng_num = 10;</code>
     *
     * <pre>
     * 所有局数内的碰牌操作次数
     * </pre>
     */
    public int getTotalPengNum() {
      return totalPengNum_;
    }

    // optional int32 total_gang_num = 11;
    public static final int TOTAL_GANG_NUM_FIELD_NUMBER = 11;
    private int totalGangNum_;
    /**
     * <code>optional int32 total_gang_num = 11;</code>
     *
     * <pre>
     * 所有局数内的杠牌操作次数
     * </pre>
     */
    public boolean hasTotalGangNum() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 total_gang_num = 11;</code>
     *
     * <pre>
     * 所有局数内的杠牌操作次数
     * </pre>
     */
    public int getTotalGangNum() {
      return totalGangNum_;
    }

    // optional int32 total_ganged_num = 12;
    public static final int TOTAL_GANGED_NUM_FIELD_NUMBER = 12;
    private int totalGangedNum_;
    /**
     * <code>optional int32 total_ganged_num = 12;</code>
     *
     * <pre>
     * 所有局数内的被别人杠的次数
     * </pre>
     */
    public boolean hasTotalGangedNum() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 total_ganged_num = 12;</code>
     *
     * <pre>
     * 所有局数内的被别人杠的次数
     * </pre>
     */
    public int getTotalGangedNum() {
      return totalGangedNum_;
    }

    // optional int32 total_hu_num = 13;
    public static final int TOTAL_HU_NUM_FIELD_NUMBER = 13;
    private int totalHuNum_;
    /**
     * <code>optional int32 total_hu_num = 13;</code>
     *
     * <pre>
     * 所有局数内的胡牌次数
     * </pre>
     */
    public boolean hasTotalHuNum() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 total_hu_num = 13;</code>
     *
     * <pre>
     * 所有局数内的胡牌次数
     * </pre>
     */
    public int getTotalHuNum() {
      return totalHuNum_;
    }

    // optional int32 total_hued_num = 14;
    public static final int TOTAL_HUED_NUM_FIELD_NUMBER = 14;
    private int totalHuedNum_;
    /**
     * <code>optional int32 total_hued_num = 14;</code>
     *
     * <pre>
     * 所有局数内被别人胡的次数
     * </pre>
     */
    public boolean hasTotalHuedNum() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 total_hued_num = 14;</code>
     *
     * <pre>
     * 所有局数内被别人胡的次数
     * </pre>
     */
    public int getTotalHuedNum() {
      return totalHuedNum_;
    }

    // optional int32 round_chi_num = 15;
    public static final int ROUND_CHI_NUM_FIELD_NUMBER = 15;
    private int roundChiNum_;
    /**
     * <code>optional int32 round_chi_num = 15;</code>
     *
     * <pre>
     * 单局
     * </pre>
     */
    public boolean hasRoundChiNum() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 round_chi_num = 15;</code>
     *
     * <pre>
     * 单局
     * </pre>
     */
    public int getRoundChiNum() {
      return roundChiNum_;
    }

    // optional int32 round_peng_num = 16;
    public static final int ROUND_PENG_NUM_FIELD_NUMBER = 16;
    private int roundPengNum_;
    /**
     * <code>optional int32 round_peng_num = 16;</code>
     */
    public boolean hasRoundPengNum() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 round_peng_num = 16;</code>
     */
    public int getRoundPengNum() {
      return roundPengNum_;
    }

    // optional int32 round_gang_num = 17;
    public static final int ROUND_GANG_NUM_FIELD_NUMBER = 17;
    private int roundGangNum_;
    /**
     * <code>optional int32 round_gang_num = 17;</code>
     */
    public boolean hasRoundGangNum() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 round_gang_num = 17;</code>
     */
    public int getRoundGangNum() {
      return roundGangNum_;
    }

    // optional int32 round_ganged_num = 18;
    public static final int ROUND_GANGED_NUM_FIELD_NUMBER = 18;
    private int roundGangedNum_;
    /**
     * <code>optional int32 round_ganged_num = 18;</code>
     */
    public boolean hasRoundGangedNum() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 round_ganged_num = 18;</code>
     */
    public int getRoundGangedNum() {
      return roundGangedNum_;
    }

    // optional int32 role = 19;
    public static final int ROLE_FIELD_NUMBER = 19;
    private int role_;
    /**
     * <code>optional int32 role = 19;</code>
     *
     * <pre>
     * 用户角色，是否是状态
     * </pre>
     */
    public boolean hasRole() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 role = 19;</code>
     *
     * <pre>
     * 用户角色，是否是状态
     * </pre>
     */
    public int getRole() {
      return role_;
    }

    private void initFields() {
      cards_ = java.util.Collections.emptyList();
      cardLen_ = 0;
      outCards_ = java.util.Collections.emptyList();
      outCardLen_ = 0;
      discards_ = java.util.Collections.emptyList();
      status_ = 0;
      chips_ = 0;
      roundWinChips_ = 0;
      totalChiNum_ = 0;
      totalPengNum_ = 0;
      totalGangNum_ = 0;
      totalGangedNum_ = 0;
      totalHuNum_ = 0;
      totalHuedNum_ = 0;
      roundChiNum_ = 0;
      roundPengNum_ = 0;
      roundGangNum_ = 0;
      roundGangedNum_ = 0;
      role_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getCardsList().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(cardsMemoizedSerializedSize);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32NoTag(cards_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, cardLen_);
      }
      if (getOutCardsList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(outCardsMemoizedSerializedSize);
      }
      for (int i = 0; i < outCards_.size(); i++) {
        output.writeInt32NoTag(outCards_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, outCardLen_);
      }
      if (getDiscardsList().size() > 0) {
        output.writeRawVarint32(42);
        output.writeRawVarint32(discardsMemoizedSerializedSize);
      }
      for (int i = 0; i < discards_.size(); i++) {
        output.writeInt32NoTag(discards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(6, status_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(7, chips_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, roundWinChips_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(9, totalChiNum_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(10, totalPengNum_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(11, totalGangNum_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(12, totalGangedNum_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(13, totalHuNum_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(14, totalHuedNum_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(15, roundChiNum_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(16, roundPengNum_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(17, roundGangNum_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(18, roundGangedNum_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(19, role_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        if (!getCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        cardsMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cardLen_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(outCards_.get(i));
        }
        size += dataSize;
        if (!getOutCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        outCardsMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, outCardLen_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < discards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(discards_.get(i));
        }
        size += dataSize;
        if (!getDiscardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        discardsMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, status_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, chips_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, roundWinChips_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, totalChiNum_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, totalPengNum_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, totalGangNum_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, totalGangedNum_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, totalHuNum_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, totalHuedNum_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, roundChiNum_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, roundPengNum_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, roundGangNum_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, roundGangedNum_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, role_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.DeskPlayInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.DeskPlayInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.DeskPlayInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.DeskPlayInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.DeskPlayInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.DeskPlayInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.DeskPlayInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.DeskPlayInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.DeskPlayInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.DeskPlayInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.DeskPlayInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DeskPlayInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.DeskPlayInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_DeskPlayInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_DeskPlayInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.DeskPlayInfo.class, Mahjong.DeskPlayInfo.Builder.class);
      }

      // Construct using Mahjong.DeskPlayInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        cardLen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        outCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        outCardLen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        discards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        chips_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        roundWinChips_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        totalChiNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        totalPengNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        totalGangNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        totalGangedNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        totalHuNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        totalHuedNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        roundChiNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        roundPengNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        roundGangNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        roundGangedNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        role_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_DeskPlayInfo_descriptor;
      }

      public Mahjong.DeskPlayInfo getDefaultInstanceForType() {
        return Mahjong.DeskPlayInfo.getDefaultInstance();
      }

      public Mahjong.DeskPlayInfo build() {
        Mahjong.DeskPlayInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.DeskPlayInfo buildPartial() {
        Mahjong.DeskPlayInfo result = new Mahjong.DeskPlayInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cardLen_ = cardLen_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          outCards_ = java.util.Collections.unmodifiableList(outCards_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.outCards_ = outCards_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.outCardLen_ = outCardLen_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          discards_ = java.util.Collections.unmodifiableList(discards_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.discards_ = discards_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000004;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.chips_ = chips_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.roundWinChips_ = roundWinChips_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.totalChiNum_ = totalChiNum_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        result.totalPengNum_ = totalPengNum_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        result.totalGangNum_ = totalGangNum_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000100;
        }
        result.totalGangedNum_ = totalGangedNum_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.totalHuNum_ = totalHuNum_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.totalHuedNum_ = totalHuedNum_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.roundChiNum_ = roundChiNum_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.roundPengNum_ = roundPengNum_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.roundGangNum_ = roundGangNum_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.roundGangedNum_ = roundGangedNum_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.role_ = role_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.DeskPlayInfo) {
          return mergeFrom((Mahjong.DeskPlayInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.DeskPlayInfo other) {
        if (other == Mahjong.DeskPlayInfo.getDefaultInstance()) return this;
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasCardLen()) {
          setCardLen(other.getCardLen());
        }
        if (!other.outCards_.isEmpty()) {
          if (outCards_.isEmpty()) {
            outCards_ = other.outCards_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureOutCardsIsMutable();
            outCards_.addAll(other.outCards_);
          }
          onChanged();
        }
        if (other.hasOutCardLen()) {
          setOutCardLen(other.getOutCardLen());
        }
        if (!other.discards_.isEmpty()) {
          if (discards_.isEmpty()) {
            discards_ = other.discards_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureDiscardsIsMutable();
            discards_.addAll(other.discards_);
          }
          onChanged();
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasChips()) {
          setChips(other.getChips());
        }
        if (other.hasRoundWinChips()) {
          setRoundWinChips(other.getRoundWinChips());
        }
        if (other.hasTotalChiNum()) {
          setTotalChiNum(other.getTotalChiNum());
        }
        if (other.hasTotalPengNum()) {
          setTotalPengNum(other.getTotalPengNum());
        }
        if (other.hasTotalGangNum()) {
          setTotalGangNum(other.getTotalGangNum());
        }
        if (other.hasTotalGangedNum()) {
          setTotalGangedNum(other.getTotalGangedNum());
        }
        if (other.hasTotalHuNum()) {
          setTotalHuNum(other.getTotalHuNum());
        }
        if (other.hasTotalHuedNum()) {
          setTotalHuedNum(other.getTotalHuedNum());
        }
        if (other.hasRoundChiNum()) {
          setRoundChiNum(other.getRoundChiNum());
        }
        if (other.hasRoundPengNum()) {
          setRoundPengNum(other.getRoundPengNum());
        }
        if (other.hasRoundGangNum()) {
          setRoundGangNum(other.getRoundGangNum());
        }
        if (other.hasRoundGangedNum()) {
          setRoundGangedNum(other.getRoundGangedNum());
        }
        if (other.hasRole()) {
          setRole(other.getRole());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.DeskPlayInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.DeskPlayInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 cards = 1 [packed = true];
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 cards = 1 [packed = true];</code>
       *
       * <pre>
       * 当前手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 1 [packed = true];</code>
       *
       * <pre>
       * 当前手牌
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 1 [packed = true];</code>
       *
       * <pre>
       * 当前手牌
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 1 [packed = true];</code>
       *
       * <pre>
       * 当前手牌
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 1 [packed = true];</code>
       *
       * <pre>
       * 当前手牌
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 1 [packed = true];</code>
       *
       * <pre>
       * 当前手牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 1 [packed = true];</code>
       *
       * <pre>
       * 当前手牌
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // optional int32 card_len = 2;
      private int cardLen_ ;
      /**
       * <code>optional int32 card_len = 2;</code>
       *
       * <pre>
       * 当前手牌长度
       * </pre>
       */
      public boolean hasCardLen() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 card_len = 2;</code>
       *
       * <pre>
       * 当前手牌长度
       * </pre>
       */
      public int getCardLen() {
        return cardLen_;
      }
      /**
       * <code>optional int32 card_len = 2;</code>
       *
       * <pre>
       * 当前手牌长度
       * </pre>
       */
      public Builder setCardLen(int value) {
        bitField0_ |= 0x00000002;
        cardLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card_len = 2;</code>
       *
       * <pre>
       * 当前手牌长度
       * </pre>
       */
      public Builder clearCardLen() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cardLen_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 out_cards = 3 [packed = true];
      private java.util.List<java.lang.Integer> outCards_ = java.util.Collections.emptyList();
      private void ensureOutCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          outCards_ = new java.util.ArrayList<java.lang.Integer>(outCards_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 out_cards = 3 [packed = true];</code>
       *
       * <pre>
       * 吃杠碰的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOutCardsList() {
        return java.util.Collections.unmodifiableList(outCards_);
      }
      /**
       * <code>repeated int32 out_cards = 3 [packed = true];</code>
       *
       * <pre>
       * 吃杠碰的牌
       * </pre>
       */
      public int getOutCardsCount() {
        return outCards_.size();
      }
      /**
       * <code>repeated int32 out_cards = 3 [packed = true];</code>
       *
       * <pre>
       * 吃杠碰的牌
       * </pre>
       */
      public int getOutCards(int index) {
        return outCards_.get(index);
      }
      /**
       * <code>repeated int32 out_cards = 3 [packed = true];</code>
       *
       * <pre>
       * 吃杠碰的牌
       * </pre>
       */
      public Builder setOutCards(
          int index, int value) {
        ensureOutCardsIsMutable();
        outCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards = 3 [packed = true];</code>
       *
       * <pre>
       * 吃杠碰的牌
       * </pre>
       */
      public Builder addOutCards(int value) {
        ensureOutCardsIsMutable();
        outCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards = 3 [packed = true];</code>
       *
       * <pre>
       * 吃杠碰的牌
       * </pre>
       */
      public Builder addAllOutCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOutCardsIsMutable();
        super.addAll(values, outCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards = 3 [packed = true];</code>
       *
       * <pre>
       * 吃杠碰的牌
       * </pre>
       */
      public Builder clearOutCards() {
        outCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 out_card_len = 4;
      private int outCardLen_ ;
      /**
       * <code>optional int32 out_card_len = 4;</code>
       *
       * <pre>
       * 吃杠碰的牌的长度
       * </pre>
       */
      public boolean hasOutCardLen() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 out_card_len = 4;</code>
       *
       * <pre>
       * 吃杠碰的牌的长度
       * </pre>
       */
      public int getOutCardLen() {
        return outCardLen_;
      }
      /**
       * <code>optional int32 out_card_len = 4;</code>
       *
       * <pre>
       * 吃杠碰的牌的长度
       * </pre>
       */
      public Builder setOutCardLen(int value) {
        bitField0_ |= 0x00000008;
        outCardLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 out_card_len = 4;</code>
       *
       * <pre>
       * 吃杠碰的牌的长度
       * </pre>
       */
      public Builder clearOutCardLen() {
        bitField0_ = (bitField0_ & ~0x00000008);
        outCardLen_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 discards = 5 [packed = true];
      private java.util.List<java.lang.Integer> discards_ = java.util.Collections.emptyList();
      private void ensureDiscardsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          discards_ = new java.util.ArrayList<java.lang.Integer>(discards_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 discards = 5 [packed = true];</code>
       *
       * <pre>
       * 出出去的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDiscardsList() {
        return java.util.Collections.unmodifiableList(discards_);
      }
      /**
       * <code>repeated int32 discards = 5 [packed = true];</code>
       *
       * <pre>
       * 出出去的牌
       * </pre>
       */
      public int getDiscardsCount() {
        return discards_.size();
      }
      /**
       * <code>repeated int32 discards = 5 [packed = true];</code>
       *
       * <pre>
       * 出出去的牌
       * </pre>
       */
      public int getDiscards(int index) {
        return discards_.get(index);
      }
      /**
       * <code>repeated int32 discards = 5 [packed = true];</code>
       *
       * <pre>
       * 出出去的牌
       * </pre>
       */
      public Builder setDiscards(
          int index, int value) {
        ensureDiscardsIsMutable();
        discards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 discards = 5 [packed = true];</code>
       *
       * <pre>
       * 出出去的牌
       * </pre>
       */
      public Builder addDiscards(int value) {
        ensureDiscardsIsMutable();
        discards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 discards = 5 [packed = true];</code>
       *
       * <pre>
       * 出出去的牌
       * </pre>
       */
      public Builder addAllDiscards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDiscardsIsMutable();
        super.addAll(values, discards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 discards = 5 [packed = true];</code>
       *
       * <pre>
       * 出出去的牌
       * </pre>
       */
      public Builder clearDiscards() {
        discards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional int32 status = 6;
      private int status_ ;
      /**
       * <code>optional int32 status = 6;</code>
       *
       * <pre>
       * 玩家的实时状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 status = 6;</code>
       *
       * <pre>
       * 玩家的实时状态
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 6;</code>
       *
       * <pre>
       * 玩家的实时状态
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000020;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 6;</code>
       *
       * <pre>
       * 玩家的实时状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional int32 chips = 7;
      private int chips_ ;
      /**
       * <code>optional int32 chips = 7;</code>
       *
       * <pre>
       * 玩家的当前分数
       * </pre>
       */
      public boolean hasChips() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 chips = 7;</code>
       *
       * <pre>
       * 玩家的当前分数
       * </pre>
       */
      public int getChips() {
        return chips_;
      }
      /**
       * <code>optional int32 chips = 7;</code>
       *
       * <pre>
       * 玩家的当前分数
       * </pre>
       */
      public Builder setChips(int value) {
        bitField0_ |= 0x00000040;
        chips_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 chips = 7;</code>
       *
       * <pre>
       * 玩家的当前分数
       * </pre>
       */
      public Builder clearChips() {
        bitField0_ = (bitField0_ & ~0x00000040);
        chips_ = 0;
        onChanged();
        return this;
      }

      // optional int32 round_win_chips = 8;
      private int roundWinChips_ ;
      /**
       * <code>optional int32 round_win_chips = 8;</code>
       *
       * <pre>
       * 这一局赢下的分数
       * </pre>
       */
      public boolean hasRoundWinChips() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 round_win_chips = 8;</code>
       *
       * <pre>
       * 这一局赢下的分数
       * </pre>
       */
      public int getRoundWinChips() {
        return roundWinChips_;
      }
      /**
       * <code>optional int32 round_win_chips = 8;</code>
       *
       * <pre>
       * 这一局赢下的分数
       * </pre>
       */
      public Builder setRoundWinChips(int value) {
        bitField0_ |= 0x00000080;
        roundWinChips_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round_win_chips = 8;</code>
       *
       * <pre>
       * 这一局赢下的分数
       * </pre>
       */
      public Builder clearRoundWinChips() {
        bitField0_ = (bitField0_ & ~0x00000080);
        roundWinChips_ = 0;
        onChanged();
        return this;
      }

      // optional int32 total_chi_num = 9;
      private int totalChiNum_ ;
      /**
       * <code>optional int32 total_chi_num = 9;</code>
       *
       * <pre>
       * 所有局数内的吃牌操作次数
       * </pre>
       */
      public boolean hasTotalChiNum() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 total_chi_num = 9;</code>
       *
       * <pre>
       * 所有局数内的吃牌操作次数
       * </pre>
       */
      public int getTotalChiNum() {
        return totalChiNum_;
      }
      /**
       * <code>optional int32 total_chi_num = 9;</code>
       *
       * <pre>
       * 所有局数内的吃牌操作次数
       * </pre>
       */
      public Builder setTotalChiNum(int value) {
        bitField0_ |= 0x00000100;
        totalChiNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_chi_num = 9;</code>
       *
       * <pre>
       * 所有局数内的吃牌操作次数
       * </pre>
       */
      public Builder clearTotalChiNum() {
        bitField0_ = (bitField0_ & ~0x00000100);
        totalChiNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 total_peng_num = 10;
      private int totalPengNum_ ;
      /**
       * <code>optional int32 total_peng_num = 10;</code>
       *
       * <pre>
       * 所有局数内的碰牌操作次数
       * </pre>
       */
      public boolean hasTotalPengNum() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 total_peng_num = 10;</code>
       *
       * <pre>
       * 所有局数内的碰牌操作次数
       * </pre>
       */
      public int getTotalPengNum() {
        return totalPengNum_;
      }
      /**
       * <code>optional int32 total_peng_num = 10;</code>
       *
       * <pre>
       * 所有局数内的碰牌操作次数
       * </pre>
       */
      public Builder setTotalPengNum(int value) {
        bitField0_ |= 0x00000200;
        totalPengNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_peng_num = 10;</code>
       *
       * <pre>
       * 所有局数内的碰牌操作次数
       * </pre>
       */
      public Builder clearTotalPengNum() {
        bitField0_ = (bitField0_ & ~0x00000200);
        totalPengNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 total_gang_num = 11;
      private int totalGangNum_ ;
      /**
       * <code>optional int32 total_gang_num = 11;</code>
       *
       * <pre>
       * 所有局数内的杠牌操作次数
       * </pre>
       */
      public boolean hasTotalGangNum() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 total_gang_num = 11;</code>
       *
       * <pre>
       * 所有局数内的杠牌操作次数
       * </pre>
       */
      public int getTotalGangNum() {
        return totalGangNum_;
      }
      /**
       * <code>optional int32 total_gang_num = 11;</code>
       *
       * <pre>
       * 所有局数内的杠牌操作次数
       * </pre>
       */
      public Builder setTotalGangNum(int value) {
        bitField0_ |= 0x00000400;
        totalGangNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_gang_num = 11;</code>
       *
       * <pre>
       * 所有局数内的杠牌操作次数
       * </pre>
       */
      public Builder clearTotalGangNum() {
        bitField0_ = (bitField0_ & ~0x00000400);
        totalGangNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 total_ganged_num = 12;
      private int totalGangedNum_ ;
      /**
       * <code>optional int32 total_ganged_num = 12;</code>
       *
       * <pre>
       * 所有局数内的被别人杠的次数
       * </pre>
       */
      public boolean hasTotalGangedNum() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 total_ganged_num = 12;</code>
       *
       * <pre>
       * 所有局数内的被别人杠的次数
       * </pre>
       */
      public int getTotalGangedNum() {
        return totalGangedNum_;
      }
      /**
       * <code>optional int32 total_ganged_num = 12;</code>
       *
       * <pre>
       * 所有局数内的被别人杠的次数
       * </pre>
       */
      public Builder setTotalGangedNum(int value) {
        bitField0_ |= 0x00000800;
        totalGangedNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_ganged_num = 12;</code>
       *
       * <pre>
       * 所有局数内的被别人杠的次数
       * </pre>
       */
      public Builder clearTotalGangedNum() {
        bitField0_ = (bitField0_ & ~0x00000800);
        totalGangedNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 total_hu_num = 13;
      private int totalHuNum_ ;
      /**
       * <code>optional int32 total_hu_num = 13;</code>
       *
       * <pre>
       * 所有局数内的胡牌次数
       * </pre>
       */
      public boolean hasTotalHuNum() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 total_hu_num = 13;</code>
       *
       * <pre>
       * 所有局数内的胡牌次数
       * </pre>
       */
      public int getTotalHuNum() {
        return totalHuNum_;
      }
      /**
       * <code>optional int32 total_hu_num = 13;</code>
       *
       * <pre>
       * 所有局数内的胡牌次数
       * </pre>
       */
      public Builder setTotalHuNum(int value) {
        bitField0_ |= 0x00001000;
        totalHuNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_hu_num = 13;</code>
       *
       * <pre>
       * 所有局数内的胡牌次数
       * </pre>
       */
      public Builder clearTotalHuNum() {
        bitField0_ = (bitField0_ & ~0x00001000);
        totalHuNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 total_hued_num = 14;
      private int totalHuedNum_ ;
      /**
       * <code>optional int32 total_hued_num = 14;</code>
       *
       * <pre>
       * 所有局数内被别人胡的次数
       * </pre>
       */
      public boolean hasTotalHuedNum() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 total_hued_num = 14;</code>
       *
       * <pre>
       * 所有局数内被别人胡的次数
       * </pre>
       */
      public int getTotalHuedNum() {
        return totalHuedNum_;
      }
      /**
       * <code>optional int32 total_hued_num = 14;</code>
       *
       * <pre>
       * 所有局数内被别人胡的次数
       * </pre>
       */
      public Builder setTotalHuedNum(int value) {
        bitField0_ |= 0x00002000;
        totalHuedNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_hued_num = 14;</code>
       *
       * <pre>
       * 所有局数内被别人胡的次数
       * </pre>
       */
      public Builder clearTotalHuedNum() {
        bitField0_ = (bitField0_ & ~0x00002000);
        totalHuedNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 round_chi_num = 15;
      private int roundChiNum_ ;
      /**
       * <code>optional int32 round_chi_num = 15;</code>
       *
       * <pre>
       * 单局
       * </pre>
       */
      public boolean hasRoundChiNum() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 round_chi_num = 15;</code>
       *
       * <pre>
       * 单局
       * </pre>
       */
      public int getRoundChiNum() {
        return roundChiNum_;
      }
      /**
       * <code>optional int32 round_chi_num = 15;</code>
       *
       * <pre>
       * 单局
       * </pre>
       */
      public Builder setRoundChiNum(int value) {
        bitField0_ |= 0x00004000;
        roundChiNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round_chi_num = 15;</code>
       *
       * <pre>
       * 单局
       * </pre>
       */
      public Builder clearRoundChiNum() {
        bitField0_ = (bitField0_ & ~0x00004000);
        roundChiNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 round_peng_num = 16;
      private int roundPengNum_ ;
      /**
       * <code>optional int32 round_peng_num = 16;</code>
       */
      public boolean hasRoundPengNum() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 round_peng_num = 16;</code>
       */
      public int getRoundPengNum() {
        return roundPengNum_;
      }
      /**
       * <code>optional int32 round_peng_num = 16;</code>
       */
      public Builder setRoundPengNum(int value) {
        bitField0_ |= 0x00008000;
        roundPengNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round_peng_num = 16;</code>
       */
      public Builder clearRoundPengNum() {
        bitField0_ = (bitField0_ & ~0x00008000);
        roundPengNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 round_gang_num = 17;
      private int roundGangNum_ ;
      /**
       * <code>optional int32 round_gang_num = 17;</code>
       */
      public boolean hasRoundGangNum() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 round_gang_num = 17;</code>
       */
      public int getRoundGangNum() {
        return roundGangNum_;
      }
      /**
       * <code>optional int32 round_gang_num = 17;</code>
       */
      public Builder setRoundGangNum(int value) {
        bitField0_ |= 0x00010000;
        roundGangNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round_gang_num = 17;</code>
       */
      public Builder clearRoundGangNum() {
        bitField0_ = (bitField0_ & ~0x00010000);
        roundGangNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 round_ganged_num = 18;
      private int roundGangedNum_ ;
      /**
       * <code>optional int32 round_ganged_num = 18;</code>
       */
      public boolean hasRoundGangedNum() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 round_ganged_num = 18;</code>
       */
      public int getRoundGangedNum() {
        return roundGangedNum_;
      }
      /**
       * <code>optional int32 round_ganged_num = 18;</code>
       */
      public Builder setRoundGangedNum(int value) {
        bitField0_ |= 0x00020000;
        roundGangedNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round_ganged_num = 18;</code>
       */
      public Builder clearRoundGangedNum() {
        bitField0_ = (bitField0_ & ~0x00020000);
        roundGangedNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 role = 19;
      private int role_ ;
      /**
       * <code>optional int32 role = 19;</code>
       *
       * <pre>
       * 用户角色，是否是状态
       * </pre>
       */
      public boolean hasRole() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 role = 19;</code>
       *
       * <pre>
       * 用户角色，是否是状态
       * </pre>
       */
      public int getRole() {
        return role_;
      }
      /**
       * <code>optional int32 role = 19;</code>
       *
       * <pre>
       * 用户角色，是否是状态
       * </pre>
       */
      public Builder setRole(int value) {
        bitField0_ |= 0x00040000;
        role_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 role = 19;</code>
       *
       * <pre>
       * 用户角色，是否是状态
       * </pre>
       */
      public Builder clearRole() {
        bitField0_ = (bitField0_ & ~0x00040000);
        role_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DeskPlayInfo)
    }

    static {
      defaultInstance = new DeskPlayInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DeskPlayInfo)
  }

  public interface EvtUserExitOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 deskid = 1;
    /**
     * <code>optional int32 deskid = 1;</code>
     *
     * <pre>
     *desk id
     * </pre>
     */
    boolean hasDeskid();
    /**
     * <code>optional int32 deskid = 1;</code>
     *
     * <pre>
     *desk id
     * </pre>
     */
    int getDeskid();

    // optional int32 dealer = 2;
    /**
     * <code>optional int32 dealer = 2;</code>
     *
     * <pre>
     * dealer id
     * </pre>
     */
    boolean hasDealer();
    /**
     * <code>optional int32 dealer = 2;</code>
     *
     * <pre>
     * dealer id
     * </pre>
     */
    int getDealer();

    // optional int32 op_uin = 3;
    /**
     * <code>optional int32 op_uin = 3;</code>
     */
    boolean hasOpUin();
    /**
     * <code>optional int32 op_uin = 3;</code>
     */
    int getOpUin();

    // optional int32 op_status = 4;
    /**
     * <code>optional int32 op_status = 4;</code>
     */
    boolean hasOpStatus();
    /**
     * <code>optional int32 op_status = 4;</code>
     */
    int getOpStatus();

    // optional int32 next_uin = 5;
    /**
     * <code>optional int32 next_uin = 5;</code>
     */
    boolean hasNextUin();
    /**
     * <code>optional int32 next_uin = 5;</code>
     */
    int getNextUin();

    // optional .DeskPlayInfo play_info = 6;
    /**
     * <code>optional .DeskPlayInfo play_info = 6;</code>
     */
    boolean hasPlayInfo();
    /**
     * <code>optional .DeskPlayInfo play_info = 6;</code>
     */
    Mahjong.DeskPlayInfo getPlayInfo();
    /**
     * <code>optional .DeskPlayInfo play_info = 6;</code>
     */
    Mahjong.DeskPlayInfoOrBuilder getPlayInfoOrBuilder();

    // optional int64 player_op_past_time = 7;
    /**
     * <code>optional int64 player_op_past_time = 7;</code>
     */
    boolean hasPlayerOpPastTime();
    /**
     * <code>optional int64 player_op_past_time = 7;</code>
     */
    long getPlayerOpPastTime();

    // optional int32 dealer_seatid = 8;
    /**
     * <code>optional int32 dealer_seatid = 8;</code>
     *
     * <pre>
     * dealer的座位号
     * </pre>
     */
    boolean hasDealerSeatid();
    /**
     * <code>optional int32 dealer_seatid = 8;</code>
     *
     * <pre>
     * dealer的座位号
     * </pre>
     */
    int getDealerSeatid();

    // optional int32 reason = 9;
    /**
     * <code>optional int32 reason = 9;</code>
     *
     * <pre>
     * 退桌原因
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional int32 reason = 9;</code>
     *
     * <pre>
     * 退桌原因
     * </pre>
     */
    int getReason();
  }
  /**
   * Protobuf type {@code EvtUserExit}
   *
   * <pre>
   * 服务器用户退出广播 7017
   * </pre>
   */
  public static final class EvtUserExit extends
      com.google.protobuf.GeneratedMessage
      implements EvtUserExitOrBuilder {
    // Use EvtUserExit.newBuilder() to construct.
    private EvtUserExit(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EvtUserExit(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EvtUserExit defaultInstance;
    public static EvtUserExit getDefaultInstance() {
      return defaultInstance;
    }

    public EvtUserExit getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EvtUserExit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              deskid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              dealer_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              opUin_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              opStatus_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              nextUin_ = input.readInt32();
              break;
            }
            case 50: {
              Mahjong.DeskPlayInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = playInfo_.toBuilder();
              }
              playInfo_ = input.readMessage(Mahjong.DeskPlayInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playInfo_);
                playInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              playerOpPastTime_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              dealerSeatid_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              reason_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_EvtUserExit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_EvtUserExit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.EvtUserExit.class, Mahjong.EvtUserExit.Builder.class);
    }

    public static com.google.protobuf.Parser<EvtUserExit> PARSER =
        new com.google.protobuf.AbstractParser<EvtUserExit>() {
      public EvtUserExit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EvtUserExit(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EvtUserExit> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 deskid = 1;
    public static final int DESKID_FIELD_NUMBER = 1;
    private int deskid_;
    /**
     * <code>optional int32 deskid = 1;</code>
     *
     * <pre>
     *desk id
     * </pre>
     */
    public boolean hasDeskid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 deskid = 1;</code>
     *
     * <pre>
     *desk id
     * </pre>
     */
    public int getDeskid() {
      return deskid_;
    }

    // optional int32 dealer = 2;
    public static final int DEALER_FIELD_NUMBER = 2;
    private int dealer_;
    /**
     * <code>optional int32 dealer = 2;</code>
     *
     * <pre>
     * dealer id
     * </pre>
     */
    public boolean hasDealer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 dealer = 2;</code>
     *
     * <pre>
     * dealer id
     * </pre>
     */
    public int getDealer() {
      return dealer_;
    }

    // optional int32 op_uin = 3;
    public static final int OP_UIN_FIELD_NUMBER = 3;
    private int opUin_;
    /**
     * <code>optional int32 op_uin = 3;</code>
     */
    public boolean hasOpUin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 op_uin = 3;</code>
     */
    public int getOpUin() {
      return opUin_;
    }

    // optional int32 op_status = 4;
    public static final int OP_STATUS_FIELD_NUMBER = 4;
    private int opStatus_;
    /**
     * <code>optional int32 op_status = 4;</code>
     */
    public boolean hasOpStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 op_status = 4;</code>
     */
    public int getOpStatus() {
      return opStatus_;
    }

    // optional int32 next_uin = 5;
    public static final int NEXT_UIN_FIELD_NUMBER = 5;
    private int nextUin_;
    /**
     * <code>optional int32 next_uin = 5;</code>
     */
    public boolean hasNextUin() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 next_uin = 5;</code>
     */
    public int getNextUin() {
      return nextUin_;
    }

    // optional .DeskPlayInfo play_info = 6;
    public static final int PLAY_INFO_FIELD_NUMBER = 6;
    private Mahjong.DeskPlayInfo playInfo_;
    /**
     * <code>optional .DeskPlayInfo play_info = 6;</code>
     */
    public boolean hasPlayInfo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .DeskPlayInfo play_info = 6;</code>
     */
    public Mahjong.DeskPlayInfo getPlayInfo() {
      return playInfo_;
    }
    /**
     * <code>optional .DeskPlayInfo play_info = 6;</code>
     */
    public Mahjong.DeskPlayInfoOrBuilder getPlayInfoOrBuilder() {
      return playInfo_;
    }

    // optional int64 player_op_past_time = 7;
    public static final int PLAYER_OP_PAST_TIME_FIELD_NUMBER = 7;
    private long playerOpPastTime_;
    /**
     * <code>optional int64 player_op_past_time = 7;</code>
     */
    public boolean hasPlayerOpPastTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 player_op_past_time = 7;</code>
     */
    public long getPlayerOpPastTime() {
      return playerOpPastTime_;
    }

    // optional int32 dealer_seatid = 8;
    public static final int DEALER_SEATID_FIELD_NUMBER = 8;
    private int dealerSeatid_;
    /**
     * <code>optional int32 dealer_seatid = 8;</code>
     *
     * <pre>
     * dealer的座位号
     * </pre>
     */
    public boolean hasDealerSeatid() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 dealer_seatid = 8;</code>
     *
     * <pre>
     * dealer的座位号
     * </pre>
     */
    public int getDealerSeatid() {
      return dealerSeatid_;
    }

    // optional int32 reason = 9;
    public static final int REASON_FIELD_NUMBER = 9;
    private int reason_;
    /**
     * <code>optional int32 reason = 9;</code>
     *
     * <pre>
     * 退桌原因
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 reason = 9;</code>
     *
     * <pre>
     * 退桌原因
     * </pre>
     */
    public int getReason() {
      return reason_;
    }

    private void initFields() {
      deskid_ = 0;
      dealer_ = 0;
      opUin_ = 0;
      opStatus_ = 0;
      nextUin_ = 0;
      playInfo_ = Mahjong.DeskPlayInfo.getDefaultInstance();
      playerOpPastTime_ = 0L;
      dealerSeatid_ = 0;
      reason_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, deskid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, dealer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, opUin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, opStatus_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, nextUin_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, playInfo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, playerOpPastTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, dealerSeatid_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, reason_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, deskid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, dealer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, opUin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, opStatus_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, nextUin_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, playInfo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, playerOpPastTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, dealerSeatid_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, reason_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.EvtUserExit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.EvtUserExit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.EvtUserExit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.EvtUserExit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.EvtUserExit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.EvtUserExit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.EvtUserExit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.EvtUserExit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.EvtUserExit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.EvtUserExit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.EvtUserExit prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EvtUserExit}
     *
     * <pre>
     * 服务器用户退出广播 7017
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.EvtUserExitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_EvtUserExit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_EvtUserExit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.EvtUserExit.class, Mahjong.EvtUserExit.Builder.class);
      }

      // Construct using Mahjong.EvtUserExit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deskid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        dealer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        opUin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        opStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        nextUin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (playInfoBuilder_ == null) {
          playInfo_ = Mahjong.DeskPlayInfo.getDefaultInstance();
        } else {
          playInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        playerOpPastTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        dealerSeatid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        reason_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_EvtUserExit_descriptor;
      }

      public Mahjong.EvtUserExit getDefaultInstanceForType() {
        return Mahjong.EvtUserExit.getDefaultInstance();
      }

      public Mahjong.EvtUserExit build() {
        Mahjong.EvtUserExit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.EvtUserExit buildPartial() {
        Mahjong.EvtUserExit result = new Mahjong.EvtUserExit(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deskid_ = deskid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dealer_ = dealer_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.opUin_ = opUin_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.opStatus_ = opStatus_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nextUin_ = nextUin_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (playInfoBuilder_ == null) {
          result.playInfo_ = playInfo_;
        } else {
          result.playInfo_ = playInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.playerOpPastTime_ = playerOpPastTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.dealerSeatid_ = dealerSeatid_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.reason_ = reason_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.EvtUserExit) {
          return mergeFrom((Mahjong.EvtUserExit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.EvtUserExit other) {
        if (other == Mahjong.EvtUserExit.getDefaultInstance()) return this;
        if (other.hasDeskid()) {
          setDeskid(other.getDeskid());
        }
        if (other.hasDealer()) {
          setDealer(other.getDealer());
        }
        if (other.hasOpUin()) {
          setOpUin(other.getOpUin());
        }
        if (other.hasOpStatus()) {
          setOpStatus(other.getOpStatus());
        }
        if (other.hasNextUin()) {
          setNextUin(other.getNextUin());
        }
        if (other.hasPlayInfo()) {
          mergePlayInfo(other.getPlayInfo());
        }
        if (other.hasPlayerOpPastTime()) {
          setPlayerOpPastTime(other.getPlayerOpPastTime());
        }
        if (other.hasDealerSeatid()) {
          setDealerSeatid(other.getDealerSeatid());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.EvtUserExit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.EvtUserExit) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 deskid = 1;
      private int deskid_ ;
      /**
       * <code>optional int32 deskid = 1;</code>
       *
       * <pre>
       *desk id
       * </pre>
       */
      public boolean hasDeskid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 deskid = 1;</code>
       *
       * <pre>
       *desk id
       * </pre>
       */
      public int getDeskid() {
        return deskid_;
      }
      /**
       * <code>optional int32 deskid = 1;</code>
       *
       * <pre>
       *desk id
       * </pre>
       */
      public Builder setDeskid(int value) {
        bitField0_ |= 0x00000001;
        deskid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 deskid = 1;</code>
       *
       * <pre>
       *desk id
       * </pre>
       */
      public Builder clearDeskid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deskid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dealer = 2;
      private int dealer_ ;
      /**
       * <code>optional int32 dealer = 2;</code>
       *
       * <pre>
       * dealer id
       * </pre>
       */
      public boolean hasDealer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 dealer = 2;</code>
       *
       * <pre>
       * dealer id
       * </pre>
       */
      public int getDealer() {
        return dealer_;
      }
      /**
       * <code>optional int32 dealer = 2;</code>
       *
       * <pre>
       * dealer id
       * </pre>
       */
      public Builder setDealer(int value) {
        bitField0_ |= 0x00000002;
        dealer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dealer = 2;</code>
       *
       * <pre>
       * dealer id
       * </pre>
       */
      public Builder clearDealer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dealer_ = 0;
        onChanged();
        return this;
      }

      // optional int32 op_uin = 3;
      private int opUin_ ;
      /**
       * <code>optional int32 op_uin = 3;</code>
       */
      public boolean hasOpUin() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 op_uin = 3;</code>
       */
      public int getOpUin() {
        return opUin_;
      }
      /**
       * <code>optional int32 op_uin = 3;</code>
       */
      public Builder setOpUin(int value) {
        bitField0_ |= 0x00000004;
        opUin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 op_uin = 3;</code>
       */
      public Builder clearOpUin() {
        bitField0_ = (bitField0_ & ~0x00000004);
        opUin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 op_status = 4;
      private int opStatus_ ;
      /**
       * <code>optional int32 op_status = 4;</code>
       */
      public boolean hasOpStatus() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 op_status = 4;</code>
       */
      public int getOpStatus() {
        return opStatus_;
      }
      /**
       * <code>optional int32 op_status = 4;</code>
       */
      public Builder setOpStatus(int value) {
        bitField0_ |= 0x00000008;
        opStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 op_status = 4;</code>
       */
      public Builder clearOpStatus() {
        bitField0_ = (bitField0_ & ~0x00000008);
        opStatus_ = 0;
        onChanged();
        return this;
      }

      // optional int32 next_uin = 5;
      private int nextUin_ ;
      /**
       * <code>optional int32 next_uin = 5;</code>
       */
      public boolean hasNextUin() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 next_uin = 5;</code>
       */
      public int getNextUin() {
        return nextUin_;
      }
      /**
       * <code>optional int32 next_uin = 5;</code>
       */
      public Builder setNextUin(int value) {
        bitField0_ |= 0x00000010;
        nextUin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 next_uin = 5;</code>
       */
      public Builder clearNextUin() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nextUin_ = 0;
        onChanged();
        return this;
      }

      // optional .DeskPlayInfo play_info = 6;
      private Mahjong.DeskPlayInfo playInfo_ = Mahjong.DeskPlayInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.DeskPlayInfo, Mahjong.DeskPlayInfo.Builder, Mahjong.DeskPlayInfoOrBuilder> playInfoBuilder_;
      /**
       * <code>optional .DeskPlayInfo play_info = 6;</code>
       */
      public boolean hasPlayInfo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .DeskPlayInfo play_info = 6;</code>
       */
      public Mahjong.DeskPlayInfo getPlayInfo() {
        if (playInfoBuilder_ == null) {
          return playInfo_;
        } else {
          return playInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .DeskPlayInfo play_info = 6;</code>
       */
      public Builder setPlayInfo(Mahjong.DeskPlayInfo value) {
        if (playInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playInfo_ = value;
          onChanged();
        } else {
          playInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .DeskPlayInfo play_info = 6;</code>
       */
      public Builder setPlayInfo(
          Mahjong.DeskPlayInfo.Builder builderForValue) {
        if (playInfoBuilder_ == null) {
          playInfo_ = builderForValue.build();
          onChanged();
        } else {
          playInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .DeskPlayInfo play_info = 6;</code>
       */
      public Builder mergePlayInfo(Mahjong.DeskPlayInfo value) {
        if (playInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              playInfo_ != Mahjong.DeskPlayInfo.getDefaultInstance()) {
            playInfo_ =
              Mahjong.DeskPlayInfo.newBuilder(playInfo_).mergeFrom(value).buildPartial();
          } else {
            playInfo_ = value;
          }
          onChanged();
        } else {
          playInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .DeskPlayInfo play_info = 6;</code>
       */
      public Builder clearPlayInfo() {
        if (playInfoBuilder_ == null) {
          playInfo_ = Mahjong.DeskPlayInfo.getDefaultInstance();
          onChanged();
        } else {
          playInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .DeskPlayInfo play_info = 6;</code>
       */
      public Mahjong.DeskPlayInfo.Builder getPlayInfoBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getPlayInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .DeskPlayInfo play_info = 6;</code>
       */
      public Mahjong.DeskPlayInfoOrBuilder getPlayInfoOrBuilder() {
        if (playInfoBuilder_ != null) {
          return playInfoBuilder_.getMessageOrBuilder();
        } else {
          return playInfo_;
        }
      }
      /**
       * <code>optional .DeskPlayInfo play_info = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.DeskPlayInfo, Mahjong.DeskPlayInfo.Builder, Mahjong.DeskPlayInfoOrBuilder> 
          getPlayInfoFieldBuilder() {
        if (playInfoBuilder_ == null) {
          playInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Mahjong.DeskPlayInfo, Mahjong.DeskPlayInfo.Builder, Mahjong.DeskPlayInfoOrBuilder>(
                  playInfo_,
                  getParentForChildren(),
                  isClean());
          playInfo_ = null;
        }
        return playInfoBuilder_;
      }

      // optional int64 player_op_past_time = 7;
      private long playerOpPastTime_ ;
      /**
       * <code>optional int64 player_op_past_time = 7;</code>
       */
      public boolean hasPlayerOpPastTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 player_op_past_time = 7;</code>
       */
      public long getPlayerOpPastTime() {
        return playerOpPastTime_;
      }
      /**
       * <code>optional int64 player_op_past_time = 7;</code>
       */
      public Builder setPlayerOpPastTime(long value) {
        bitField0_ |= 0x00000040;
        playerOpPastTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 player_op_past_time = 7;</code>
       */
      public Builder clearPlayerOpPastTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        playerOpPastTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 dealer_seatid = 8;
      private int dealerSeatid_ ;
      /**
       * <code>optional int32 dealer_seatid = 8;</code>
       *
       * <pre>
       * dealer的座位号
       * </pre>
       */
      public boolean hasDealerSeatid() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 dealer_seatid = 8;</code>
       *
       * <pre>
       * dealer的座位号
       * </pre>
       */
      public int getDealerSeatid() {
        return dealerSeatid_;
      }
      /**
       * <code>optional int32 dealer_seatid = 8;</code>
       *
       * <pre>
       * dealer的座位号
       * </pre>
       */
      public Builder setDealerSeatid(int value) {
        bitField0_ |= 0x00000080;
        dealerSeatid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dealer_seatid = 8;</code>
       *
       * <pre>
       * dealer的座位号
       * </pre>
       */
      public Builder clearDealerSeatid() {
        bitField0_ = (bitField0_ & ~0x00000080);
        dealerSeatid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 reason = 9;
      private int reason_ ;
      /**
       * <code>optional int32 reason = 9;</code>
       *
       * <pre>
       * 退桌原因
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 reason = 9;</code>
       *
       * <pre>
       * 退桌原因
       * </pre>
       */
      public int getReason() {
        return reason_;
      }
      /**
       * <code>optional int32 reason = 9;</code>
       *
       * <pre>
       * 退桌原因
       * </pre>
       */
      public Builder setReason(int value) {
        bitField0_ |= 0x00000100;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reason = 9;</code>
       *
       * <pre>
       * 退桌原因
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000100);
        reason_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EvtUserExit)
    }

    static {
      defaultInstance = new EvtUserExit(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EvtUserExit)
  }

  public interface ClientNotifyStartGameReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code ClientNotifyStartGameReq}
   *
   * <pre>
   *客户端通知服务器立即开始游戏 7004
   * </pre>
   */
  public static final class ClientNotifyStartGameReq extends
      com.google.protobuf.GeneratedMessage
      implements ClientNotifyStartGameReqOrBuilder {
    // Use ClientNotifyStartGameReq.newBuilder() to construct.
    private ClientNotifyStartGameReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClientNotifyStartGameReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClientNotifyStartGameReq defaultInstance;
    public static ClientNotifyStartGameReq getDefaultInstance() {
      return defaultInstance;
    }

    public ClientNotifyStartGameReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClientNotifyStartGameReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_ClientNotifyStartGameReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_ClientNotifyStartGameReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.ClientNotifyStartGameReq.class, Mahjong.ClientNotifyStartGameReq.Builder.class);
    }

    public static com.google.protobuf.Parser<ClientNotifyStartGameReq> PARSER =
        new com.google.protobuf.AbstractParser<ClientNotifyStartGameReq>() {
      public ClientNotifyStartGameReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClientNotifyStartGameReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClientNotifyStartGameReq> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.ClientNotifyStartGameReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.ClientNotifyStartGameReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.ClientNotifyStartGameReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.ClientNotifyStartGameReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.ClientNotifyStartGameReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.ClientNotifyStartGameReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.ClientNotifyStartGameReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.ClientNotifyStartGameReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.ClientNotifyStartGameReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.ClientNotifyStartGameReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.ClientNotifyStartGameReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ClientNotifyStartGameReq}
     *
     * <pre>
     *客户端通知服务器立即开始游戏 7004
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.ClientNotifyStartGameReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_ClientNotifyStartGameReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_ClientNotifyStartGameReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.ClientNotifyStartGameReq.class, Mahjong.ClientNotifyStartGameReq.Builder.class);
      }

      // Construct using Mahjong.ClientNotifyStartGameReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_ClientNotifyStartGameReq_descriptor;
      }

      public Mahjong.ClientNotifyStartGameReq getDefaultInstanceForType() {
        return Mahjong.ClientNotifyStartGameReq.getDefaultInstance();
      }

      public Mahjong.ClientNotifyStartGameReq build() {
        Mahjong.ClientNotifyStartGameReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.ClientNotifyStartGameReq buildPartial() {
        Mahjong.ClientNotifyStartGameReq result = new Mahjong.ClientNotifyStartGameReq(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.ClientNotifyStartGameReq) {
          return mergeFrom((Mahjong.ClientNotifyStartGameReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.ClientNotifyStartGameReq other) {
        if (other == Mahjong.ClientNotifyStartGameReq.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.ClientNotifyStartGameReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.ClientNotifyStartGameReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ClientNotifyStartGameReq)
    }

    static {
      defaultInstance = new ClientNotifyStartGameReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ClientNotifyStartGameReq)
  }

  public interface ClientNotifyStartGameRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 ret = 1;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>optional int32 ret = 1;</code>
     */
    int getRet();
  }
  /**
   * Protobuf type {@code ClientNotifyStartGameRsp}
   */
  public static final class ClientNotifyStartGameRsp extends
      com.google.protobuf.GeneratedMessage
      implements ClientNotifyStartGameRspOrBuilder {
    // Use ClientNotifyStartGameRsp.newBuilder() to construct.
    private ClientNotifyStartGameRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClientNotifyStartGameRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClientNotifyStartGameRsp defaultInstance;
    public static ClientNotifyStartGameRsp getDefaultInstance() {
      return defaultInstance;
    }

    public ClientNotifyStartGameRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClientNotifyStartGameRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ret_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_ClientNotifyStartGameRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_ClientNotifyStartGameRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.ClientNotifyStartGameRsp.class, Mahjong.ClientNotifyStartGameRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<ClientNotifyStartGameRsp> PARSER =
        new com.google.protobuf.AbstractParser<ClientNotifyStartGameRsp>() {
      public ClientNotifyStartGameRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClientNotifyStartGameRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClientNotifyStartGameRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 ret = 1;
    public static final int RET_FIELD_NUMBER = 1;
    private int ret_;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public int getRet() {
      return ret_;
    }

    private void initFields() {
      ret_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ret_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ret_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.ClientNotifyStartGameRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.ClientNotifyStartGameRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.ClientNotifyStartGameRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.ClientNotifyStartGameRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.ClientNotifyStartGameRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.ClientNotifyStartGameRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.ClientNotifyStartGameRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.ClientNotifyStartGameRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.ClientNotifyStartGameRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.ClientNotifyStartGameRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.ClientNotifyStartGameRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ClientNotifyStartGameRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.ClientNotifyStartGameRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_ClientNotifyStartGameRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_ClientNotifyStartGameRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.ClientNotifyStartGameRsp.class, Mahjong.ClientNotifyStartGameRsp.Builder.class);
      }

      // Construct using Mahjong.ClientNotifyStartGameRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_ClientNotifyStartGameRsp_descriptor;
      }

      public Mahjong.ClientNotifyStartGameRsp getDefaultInstanceForType() {
        return Mahjong.ClientNotifyStartGameRsp.getDefaultInstance();
      }

      public Mahjong.ClientNotifyStartGameRsp build() {
        Mahjong.ClientNotifyStartGameRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.ClientNotifyStartGameRsp buildPartial() {
        Mahjong.ClientNotifyStartGameRsp result = new Mahjong.ClientNotifyStartGameRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ret_ = ret_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.ClientNotifyStartGameRsp) {
          return mergeFrom((Mahjong.ClientNotifyStartGameRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.ClientNotifyStartGameRsp other) {
        if (other == Mahjong.ClientNotifyStartGameRsp.getDefaultInstance()) return this;
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.ClientNotifyStartGameRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.ClientNotifyStartGameRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 ret = 1;
      private int ret_ ;
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000001;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ret_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ClientNotifyStartGameRsp)
    }

    static {
      defaultInstance = new ClientNotifyStartGameRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ClientNotifyStartGameRsp)
  }

  public interface GameSendCardReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 card = 1;
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     * 出哪张牌
     * </pre>
     */
    boolean hasCard();
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     * 出哪张牌
     * </pre>
     */
    int getCard();
  }
  /**
   * Protobuf type {@code GameSendCardReq}
   *
   * <pre>
   *出牌 7005
   * </pre>
   */
  public static final class GameSendCardReq extends
      com.google.protobuf.GeneratedMessage
      implements GameSendCardReqOrBuilder {
    // Use GameSendCardReq.newBuilder() to construct.
    private GameSendCardReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameSendCardReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameSendCardReq defaultInstance;
    public static GameSendCardReq getDefaultInstance() {
      return defaultInstance;
    }

    public GameSendCardReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameSendCardReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              card_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameSendCardReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameSendCardReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameSendCardReq.class, Mahjong.GameSendCardReq.Builder.class);
    }

    public static com.google.protobuf.Parser<GameSendCardReq> PARSER =
        new com.google.protobuf.AbstractParser<GameSendCardReq>() {
      public GameSendCardReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameSendCardReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameSendCardReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 card = 1;
    public static final int CARD_FIELD_NUMBER = 1;
    private int card_;
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     * 出哪张牌
     * </pre>
     */
    public boolean hasCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 card = 1;</code>
     *
     * <pre>
     * 出哪张牌
     * </pre>
     */
    public int getCard() {
      return card_;
    }

    private void initFields() {
      card_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, card_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, card_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameSendCardReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameSendCardReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameSendCardReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameSendCardReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameSendCardReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameSendCardReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameSendCardReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameSendCardReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameSendCardReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameSendCardReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameSendCardReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameSendCardReq}
     *
     * <pre>
     *出牌 7005
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameSendCardReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameSendCardReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameSendCardReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameSendCardReq.class, Mahjong.GameSendCardReq.Builder.class);
      }

      // Construct using Mahjong.GameSendCardReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        card_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameSendCardReq_descriptor;
      }

      public Mahjong.GameSendCardReq getDefaultInstanceForType() {
        return Mahjong.GameSendCardReq.getDefaultInstance();
      }

      public Mahjong.GameSendCardReq build() {
        Mahjong.GameSendCardReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameSendCardReq buildPartial() {
        Mahjong.GameSendCardReq result = new Mahjong.GameSendCardReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.card_ = card_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameSendCardReq) {
          return mergeFrom((Mahjong.GameSendCardReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameSendCardReq other) {
        if (other == Mahjong.GameSendCardReq.getDefaultInstance()) return this;
        if (other.hasCard()) {
          setCard(other.getCard());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameSendCardReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameSendCardReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 card = 1;
      private int card_ ;
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       * 出哪张牌
       * </pre>
       */
      public boolean hasCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       * 出哪张牌
       * </pre>
       */
      public int getCard() {
        return card_;
      }
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       * 出哪张牌
       * </pre>
       */
      public Builder setCard(int value) {
        bitField0_ |= 0x00000001;
        card_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 card = 1;</code>
       *
       * <pre>
       * 出哪张牌
       * </pre>
       */
      public Builder clearCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        card_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameSendCardReq)
    }

    static {
      defaultInstance = new GameSendCardReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameSendCardReq)
  }

  public interface GameSendCardRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 ret = 1;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>optional int32 ret = 1;</code>
     */
    int getRet();
  }
  /**
   * Protobuf type {@code GameSendCardRsp}
   */
  public static final class GameSendCardRsp extends
      com.google.protobuf.GeneratedMessage
      implements GameSendCardRspOrBuilder {
    // Use GameSendCardRsp.newBuilder() to construct.
    private GameSendCardRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameSendCardRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameSendCardRsp defaultInstance;
    public static GameSendCardRsp getDefaultInstance() {
      return defaultInstance;
    }

    public GameSendCardRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameSendCardRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ret_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameSendCardRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameSendCardRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameSendCardRsp.class, Mahjong.GameSendCardRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<GameSendCardRsp> PARSER =
        new com.google.protobuf.AbstractParser<GameSendCardRsp>() {
      public GameSendCardRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameSendCardRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameSendCardRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 ret = 1;
    public static final int RET_FIELD_NUMBER = 1;
    private int ret_;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public int getRet() {
      return ret_;
    }

    private void initFields() {
      ret_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ret_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ret_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameSendCardRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameSendCardRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameSendCardRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameSendCardRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameSendCardRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameSendCardRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameSendCardRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameSendCardRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameSendCardRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameSendCardRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameSendCardRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameSendCardRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameSendCardRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameSendCardRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameSendCardRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameSendCardRsp.class, Mahjong.GameSendCardRsp.Builder.class);
      }

      // Construct using Mahjong.GameSendCardRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameSendCardRsp_descriptor;
      }

      public Mahjong.GameSendCardRsp getDefaultInstanceForType() {
        return Mahjong.GameSendCardRsp.getDefaultInstance();
      }

      public Mahjong.GameSendCardRsp build() {
        Mahjong.GameSendCardRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameSendCardRsp buildPartial() {
        Mahjong.GameSendCardRsp result = new Mahjong.GameSendCardRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ret_ = ret_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameSendCardRsp) {
          return mergeFrom((Mahjong.GameSendCardRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameSendCardRsp other) {
        if (other == Mahjong.GameSendCardRsp.getDefaultInstance()) return this;
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameSendCardRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameSendCardRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 ret = 1;
      private int ret_ ;
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000001;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ret_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameSendCardRsp)
    }

    static {
      defaultInstance = new GameSendCardRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameSendCardRsp)
  }

  public interface GameOptionChiReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 index = 1;
    /**
     * <code>optional int32 index = 1;</code>
     *
     * <pre>
     * 吃哪一组牌
     * </pre>
     */
    boolean hasIndex();
    /**
     * <code>optional int32 index = 1;</code>
     *
     * <pre>
     * 吃哪一组牌
     * </pre>
     */
    int getIndex();
  }
  /**
   * Protobuf type {@code GameOptionChiReq}
   *
   * <pre>
   *吃牌 7006
   * </pre>
   */
  public static final class GameOptionChiReq extends
      com.google.protobuf.GeneratedMessage
      implements GameOptionChiReqOrBuilder {
    // Use GameOptionChiReq.newBuilder() to construct.
    private GameOptionChiReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOptionChiReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOptionChiReq defaultInstance;
    public static GameOptionChiReq getDefaultInstance() {
      return defaultInstance;
    }

    public GameOptionChiReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOptionChiReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              index_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameOptionChiReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameOptionChiReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameOptionChiReq.class, Mahjong.GameOptionChiReq.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOptionChiReq> PARSER =
        new com.google.protobuf.AbstractParser<GameOptionChiReq>() {
      public GameOptionChiReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOptionChiReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOptionChiReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 index = 1;
    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    /**
     * <code>optional int32 index = 1;</code>
     *
     * <pre>
     * 吃哪一组牌
     * </pre>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 index = 1;</code>
     *
     * <pre>
     * 吃哪一组牌
     * </pre>
     */
    public int getIndex() {
      return index_;
    }

    private void initFields() {
      index_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, index_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, index_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameOptionChiReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionChiReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionChiReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionChiReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionChiReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionChiReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionChiReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameOptionChiReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionChiReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionChiReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameOptionChiReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameOptionChiReq}
     *
     * <pre>
     *吃牌 7006
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameOptionChiReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameOptionChiReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameOptionChiReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameOptionChiReq.class, Mahjong.GameOptionChiReq.Builder.class);
      }

      // Construct using Mahjong.GameOptionChiReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameOptionChiReq_descriptor;
      }

      public Mahjong.GameOptionChiReq getDefaultInstanceForType() {
        return Mahjong.GameOptionChiReq.getDefaultInstance();
      }

      public Mahjong.GameOptionChiReq build() {
        Mahjong.GameOptionChiReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameOptionChiReq buildPartial() {
        Mahjong.GameOptionChiReq result = new Mahjong.GameOptionChiReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.index_ = index_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameOptionChiReq) {
          return mergeFrom((Mahjong.GameOptionChiReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameOptionChiReq other) {
        if (other == Mahjong.GameOptionChiReq.getDefaultInstance()) return this;
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameOptionChiReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameOptionChiReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 index = 1;
      private int index_ ;
      /**
       * <code>optional int32 index = 1;</code>
       *
       * <pre>
       * 吃哪一组牌
       * </pre>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 index = 1;</code>
       *
       * <pre>
       * 吃哪一组牌
       * </pre>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>optional int32 index = 1;</code>
       *
       * <pre>
       * 吃哪一组牌
       * </pre>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000001;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 index = 1;</code>
       *
       * <pre>
       * 吃哪一组牌
       * </pre>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameOptionChiReq)
    }

    static {
      defaultInstance = new GameOptionChiReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameOptionChiReq)
  }

  public interface GameOptionChiRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 ret = 1;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>optional int32 ret = 1;</code>
     */
    int getRet();
  }
  /**
   * Protobuf type {@code GameOptionChiRsp}
   */
  public static final class GameOptionChiRsp extends
      com.google.protobuf.GeneratedMessage
      implements GameOptionChiRspOrBuilder {
    // Use GameOptionChiRsp.newBuilder() to construct.
    private GameOptionChiRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOptionChiRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOptionChiRsp defaultInstance;
    public static GameOptionChiRsp getDefaultInstance() {
      return defaultInstance;
    }

    public GameOptionChiRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOptionChiRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ret_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameOptionChiRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameOptionChiRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameOptionChiRsp.class, Mahjong.GameOptionChiRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOptionChiRsp> PARSER =
        new com.google.protobuf.AbstractParser<GameOptionChiRsp>() {
      public GameOptionChiRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOptionChiRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOptionChiRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 ret = 1;
    public static final int RET_FIELD_NUMBER = 1;
    private int ret_;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public int getRet() {
      return ret_;
    }

    private void initFields() {
      ret_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ret_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ret_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameOptionChiRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionChiRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionChiRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionChiRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionChiRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionChiRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionChiRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameOptionChiRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionChiRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionChiRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameOptionChiRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameOptionChiRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameOptionChiRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameOptionChiRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameOptionChiRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameOptionChiRsp.class, Mahjong.GameOptionChiRsp.Builder.class);
      }

      // Construct using Mahjong.GameOptionChiRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameOptionChiRsp_descriptor;
      }

      public Mahjong.GameOptionChiRsp getDefaultInstanceForType() {
        return Mahjong.GameOptionChiRsp.getDefaultInstance();
      }

      public Mahjong.GameOptionChiRsp build() {
        Mahjong.GameOptionChiRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameOptionChiRsp buildPartial() {
        Mahjong.GameOptionChiRsp result = new Mahjong.GameOptionChiRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ret_ = ret_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameOptionChiRsp) {
          return mergeFrom((Mahjong.GameOptionChiRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameOptionChiRsp other) {
        if (other == Mahjong.GameOptionChiRsp.getDefaultInstance()) return this;
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameOptionChiRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameOptionChiRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 ret = 1;
      private int ret_ ;
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000001;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ret_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameOptionChiRsp)
    }

    static {
      defaultInstance = new GameOptionChiRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameOptionChiRsp)
  }

  public interface GameOptionPengReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code GameOptionPengReq}
   *
   * <pre>
   *碰牌 7007
   * </pre>
   */
  public static final class GameOptionPengReq extends
      com.google.protobuf.GeneratedMessage
      implements GameOptionPengReqOrBuilder {
    // Use GameOptionPengReq.newBuilder() to construct.
    private GameOptionPengReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOptionPengReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOptionPengReq defaultInstance;
    public static GameOptionPengReq getDefaultInstance() {
      return defaultInstance;
    }

    public GameOptionPengReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOptionPengReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameOptionPengReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameOptionPengReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameOptionPengReq.class, Mahjong.GameOptionPengReq.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOptionPengReq> PARSER =
        new com.google.protobuf.AbstractParser<GameOptionPengReq>() {
      public GameOptionPengReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOptionPengReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOptionPengReq> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameOptionPengReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionPengReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionPengReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionPengReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionPengReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionPengReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionPengReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameOptionPengReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionPengReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionPengReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameOptionPengReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameOptionPengReq}
     *
     * <pre>
     *碰牌 7007
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameOptionPengReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameOptionPengReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameOptionPengReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameOptionPengReq.class, Mahjong.GameOptionPengReq.Builder.class);
      }

      // Construct using Mahjong.GameOptionPengReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameOptionPengReq_descriptor;
      }

      public Mahjong.GameOptionPengReq getDefaultInstanceForType() {
        return Mahjong.GameOptionPengReq.getDefaultInstance();
      }

      public Mahjong.GameOptionPengReq build() {
        Mahjong.GameOptionPengReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameOptionPengReq buildPartial() {
        Mahjong.GameOptionPengReq result = new Mahjong.GameOptionPengReq(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameOptionPengReq) {
          return mergeFrom((Mahjong.GameOptionPengReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameOptionPengReq other) {
        if (other == Mahjong.GameOptionPengReq.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameOptionPengReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameOptionPengReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameOptionPengReq)
    }

    static {
      defaultInstance = new GameOptionPengReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameOptionPengReq)
  }

  public interface GameOptionPengRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 ret = 1;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>optional int32 ret = 1;</code>
     */
    int getRet();
  }
  /**
   * Protobuf type {@code GameOptionPengRsp}
   */
  public static final class GameOptionPengRsp extends
      com.google.protobuf.GeneratedMessage
      implements GameOptionPengRspOrBuilder {
    // Use GameOptionPengRsp.newBuilder() to construct.
    private GameOptionPengRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOptionPengRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOptionPengRsp defaultInstance;
    public static GameOptionPengRsp getDefaultInstance() {
      return defaultInstance;
    }

    public GameOptionPengRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOptionPengRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ret_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameOptionPengRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameOptionPengRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameOptionPengRsp.class, Mahjong.GameOptionPengRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOptionPengRsp> PARSER =
        new com.google.protobuf.AbstractParser<GameOptionPengRsp>() {
      public GameOptionPengRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOptionPengRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOptionPengRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 ret = 1;
    public static final int RET_FIELD_NUMBER = 1;
    private int ret_;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public int getRet() {
      return ret_;
    }

    private void initFields() {
      ret_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ret_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ret_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameOptionPengRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionPengRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionPengRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionPengRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionPengRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionPengRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionPengRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameOptionPengRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionPengRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionPengRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameOptionPengRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameOptionPengRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameOptionPengRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameOptionPengRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameOptionPengRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameOptionPengRsp.class, Mahjong.GameOptionPengRsp.Builder.class);
      }

      // Construct using Mahjong.GameOptionPengRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameOptionPengRsp_descriptor;
      }

      public Mahjong.GameOptionPengRsp getDefaultInstanceForType() {
        return Mahjong.GameOptionPengRsp.getDefaultInstance();
      }

      public Mahjong.GameOptionPengRsp build() {
        Mahjong.GameOptionPengRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameOptionPengRsp buildPartial() {
        Mahjong.GameOptionPengRsp result = new Mahjong.GameOptionPengRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ret_ = ret_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameOptionPengRsp) {
          return mergeFrom((Mahjong.GameOptionPengRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameOptionPengRsp other) {
        if (other == Mahjong.GameOptionPengRsp.getDefaultInstance()) return this;
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameOptionPengRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameOptionPengRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 ret = 1;
      private int ret_ ;
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000001;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ret_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameOptionPengRsp)
    }

    static {
      defaultInstance = new GameOptionPengRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameOptionPengRsp)
  }

  public interface GameOptionGangReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code GameOptionGangReq}
   *
   * <pre>
   *杠牌 7008
   * </pre>
   */
  public static final class GameOptionGangReq extends
      com.google.protobuf.GeneratedMessage
      implements GameOptionGangReqOrBuilder {
    // Use GameOptionGangReq.newBuilder() to construct.
    private GameOptionGangReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOptionGangReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOptionGangReq defaultInstance;
    public static GameOptionGangReq getDefaultInstance() {
      return defaultInstance;
    }

    public GameOptionGangReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOptionGangReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameOptionGangReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameOptionGangReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameOptionGangReq.class, Mahjong.GameOptionGangReq.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOptionGangReq> PARSER =
        new com.google.protobuf.AbstractParser<GameOptionGangReq>() {
      public GameOptionGangReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOptionGangReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOptionGangReq> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameOptionGangReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionGangReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionGangReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionGangReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionGangReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionGangReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionGangReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameOptionGangReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionGangReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionGangReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameOptionGangReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameOptionGangReq}
     *
     * <pre>
     *杠牌 7008
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameOptionGangReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameOptionGangReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameOptionGangReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameOptionGangReq.class, Mahjong.GameOptionGangReq.Builder.class);
      }

      // Construct using Mahjong.GameOptionGangReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameOptionGangReq_descriptor;
      }

      public Mahjong.GameOptionGangReq getDefaultInstanceForType() {
        return Mahjong.GameOptionGangReq.getDefaultInstance();
      }

      public Mahjong.GameOptionGangReq build() {
        Mahjong.GameOptionGangReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameOptionGangReq buildPartial() {
        Mahjong.GameOptionGangReq result = new Mahjong.GameOptionGangReq(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameOptionGangReq) {
          return mergeFrom((Mahjong.GameOptionGangReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameOptionGangReq other) {
        if (other == Mahjong.GameOptionGangReq.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameOptionGangReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameOptionGangReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameOptionGangReq)
    }

    static {
      defaultInstance = new GameOptionGangReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameOptionGangReq)
  }

  public interface GameOptionGangRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 ret = 1;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>optional int32 ret = 1;</code>
     */
    int getRet();
  }
  /**
   * Protobuf type {@code GameOptionGangRsp}
   */
  public static final class GameOptionGangRsp extends
      com.google.protobuf.GeneratedMessage
      implements GameOptionGangRspOrBuilder {
    // Use GameOptionGangRsp.newBuilder() to construct.
    private GameOptionGangRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOptionGangRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOptionGangRsp defaultInstance;
    public static GameOptionGangRsp getDefaultInstance() {
      return defaultInstance;
    }

    public GameOptionGangRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOptionGangRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ret_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameOptionGangRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameOptionGangRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameOptionGangRsp.class, Mahjong.GameOptionGangRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOptionGangRsp> PARSER =
        new com.google.protobuf.AbstractParser<GameOptionGangRsp>() {
      public GameOptionGangRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOptionGangRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOptionGangRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 ret = 1;
    public static final int RET_FIELD_NUMBER = 1;
    private int ret_;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public int getRet() {
      return ret_;
    }

    private void initFields() {
      ret_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ret_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ret_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameOptionGangRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionGangRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionGangRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionGangRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionGangRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionGangRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionGangRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameOptionGangRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionGangRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionGangRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameOptionGangRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameOptionGangRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameOptionGangRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameOptionGangRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameOptionGangRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameOptionGangRsp.class, Mahjong.GameOptionGangRsp.Builder.class);
      }

      // Construct using Mahjong.GameOptionGangRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameOptionGangRsp_descriptor;
      }

      public Mahjong.GameOptionGangRsp getDefaultInstanceForType() {
        return Mahjong.GameOptionGangRsp.getDefaultInstance();
      }

      public Mahjong.GameOptionGangRsp build() {
        Mahjong.GameOptionGangRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameOptionGangRsp buildPartial() {
        Mahjong.GameOptionGangRsp result = new Mahjong.GameOptionGangRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ret_ = ret_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameOptionGangRsp) {
          return mergeFrom((Mahjong.GameOptionGangRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameOptionGangRsp other) {
        if (other == Mahjong.GameOptionGangRsp.getDefaultInstance()) return this;
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameOptionGangRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameOptionGangRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 ret = 1;
      private int ret_ ;
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000001;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ret_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameOptionGangRsp)
    }

    static {
      defaultInstance = new GameOptionGangRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameOptionGangRsp)
  }

  public interface GameOptionHuReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code GameOptionHuReq}
   *
   * <pre>
   *胡牌 7009
   * </pre>
   */
  public static final class GameOptionHuReq extends
      com.google.protobuf.GeneratedMessage
      implements GameOptionHuReqOrBuilder {
    // Use GameOptionHuReq.newBuilder() to construct.
    private GameOptionHuReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOptionHuReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOptionHuReq defaultInstance;
    public static GameOptionHuReq getDefaultInstance() {
      return defaultInstance;
    }

    public GameOptionHuReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOptionHuReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameOptionHuReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameOptionHuReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameOptionHuReq.class, Mahjong.GameOptionHuReq.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOptionHuReq> PARSER =
        new com.google.protobuf.AbstractParser<GameOptionHuReq>() {
      public GameOptionHuReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOptionHuReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOptionHuReq> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameOptionHuReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionHuReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionHuReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionHuReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionHuReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionHuReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionHuReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameOptionHuReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionHuReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionHuReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameOptionHuReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameOptionHuReq}
     *
     * <pre>
     *胡牌 7009
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameOptionHuReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameOptionHuReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameOptionHuReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameOptionHuReq.class, Mahjong.GameOptionHuReq.Builder.class);
      }

      // Construct using Mahjong.GameOptionHuReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameOptionHuReq_descriptor;
      }

      public Mahjong.GameOptionHuReq getDefaultInstanceForType() {
        return Mahjong.GameOptionHuReq.getDefaultInstance();
      }

      public Mahjong.GameOptionHuReq build() {
        Mahjong.GameOptionHuReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameOptionHuReq buildPartial() {
        Mahjong.GameOptionHuReq result = new Mahjong.GameOptionHuReq(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameOptionHuReq) {
          return mergeFrom((Mahjong.GameOptionHuReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameOptionHuReq other) {
        if (other == Mahjong.GameOptionHuReq.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameOptionHuReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameOptionHuReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameOptionHuReq)
    }

    static {
      defaultInstance = new GameOptionHuReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameOptionHuReq)
  }

  public interface GameOptionHuRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 ret = 1;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>optional int32 ret = 1;</code>
     */
    int getRet();
  }
  /**
   * Protobuf type {@code GameOptionHuRsp}
   */
  public static final class GameOptionHuRsp extends
      com.google.protobuf.GeneratedMessage
      implements GameOptionHuRspOrBuilder {
    // Use GameOptionHuRsp.newBuilder() to construct.
    private GameOptionHuRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOptionHuRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOptionHuRsp defaultInstance;
    public static GameOptionHuRsp getDefaultInstance() {
      return defaultInstance;
    }

    public GameOptionHuRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOptionHuRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ret_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameOptionHuRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameOptionHuRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameOptionHuRsp.class, Mahjong.GameOptionHuRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOptionHuRsp> PARSER =
        new com.google.protobuf.AbstractParser<GameOptionHuRsp>() {
      public GameOptionHuRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOptionHuRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOptionHuRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 ret = 1;
    public static final int RET_FIELD_NUMBER = 1;
    private int ret_;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public int getRet() {
      return ret_;
    }

    private void initFields() {
      ret_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ret_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ret_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameOptionHuRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionHuRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionHuRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionHuRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionHuRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionHuRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionHuRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameOptionHuRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionHuRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionHuRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameOptionHuRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameOptionHuRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameOptionHuRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameOptionHuRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameOptionHuRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameOptionHuRsp.class, Mahjong.GameOptionHuRsp.Builder.class);
      }

      // Construct using Mahjong.GameOptionHuRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameOptionHuRsp_descriptor;
      }

      public Mahjong.GameOptionHuRsp getDefaultInstanceForType() {
        return Mahjong.GameOptionHuRsp.getDefaultInstance();
      }

      public Mahjong.GameOptionHuRsp build() {
        Mahjong.GameOptionHuRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameOptionHuRsp buildPartial() {
        Mahjong.GameOptionHuRsp result = new Mahjong.GameOptionHuRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ret_ = ret_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameOptionHuRsp) {
          return mergeFrom((Mahjong.GameOptionHuRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameOptionHuRsp other) {
        if (other == Mahjong.GameOptionHuRsp.getDefaultInstance()) return this;
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameOptionHuRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameOptionHuRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 ret = 1;
      private int ret_ ;
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000001;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ret_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameOptionHuRsp)
    }

    static {
      defaultInstance = new GameOptionHuRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameOptionHuRsp)
  }

  public interface GameOptionPassReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code GameOptionPassReq}
   *
   * <pre>
   *可以吃杠碰胡操作时选择不操作，也即是过牌操作 7010
   * </pre>
   */
  public static final class GameOptionPassReq extends
      com.google.protobuf.GeneratedMessage
      implements GameOptionPassReqOrBuilder {
    // Use GameOptionPassReq.newBuilder() to construct.
    private GameOptionPassReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOptionPassReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOptionPassReq defaultInstance;
    public static GameOptionPassReq getDefaultInstance() {
      return defaultInstance;
    }

    public GameOptionPassReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOptionPassReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameOptionPassReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameOptionPassReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameOptionPassReq.class, Mahjong.GameOptionPassReq.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOptionPassReq> PARSER =
        new com.google.protobuf.AbstractParser<GameOptionPassReq>() {
      public GameOptionPassReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOptionPassReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOptionPassReq> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameOptionPassReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionPassReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionPassReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionPassReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionPassReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionPassReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionPassReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameOptionPassReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionPassReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionPassReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameOptionPassReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameOptionPassReq}
     *
     * <pre>
     *可以吃杠碰胡操作时选择不操作，也即是过牌操作 7010
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameOptionPassReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameOptionPassReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameOptionPassReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameOptionPassReq.class, Mahjong.GameOptionPassReq.Builder.class);
      }

      // Construct using Mahjong.GameOptionPassReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameOptionPassReq_descriptor;
      }

      public Mahjong.GameOptionPassReq getDefaultInstanceForType() {
        return Mahjong.GameOptionPassReq.getDefaultInstance();
      }

      public Mahjong.GameOptionPassReq build() {
        Mahjong.GameOptionPassReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameOptionPassReq buildPartial() {
        Mahjong.GameOptionPassReq result = new Mahjong.GameOptionPassReq(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameOptionPassReq) {
          return mergeFrom((Mahjong.GameOptionPassReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameOptionPassReq other) {
        if (other == Mahjong.GameOptionPassReq.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameOptionPassReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameOptionPassReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameOptionPassReq)
    }

    static {
      defaultInstance = new GameOptionPassReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameOptionPassReq)
  }

  public interface GameOptionPassRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 ret = 1;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>optional int32 ret = 1;</code>
     */
    int getRet();
  }
  /**
   * Protobuf type {@code GameOptionPassRsp}
   */
  public static final class GameOptionPassRsp extends
      com.google.protobuf.GeneratedMessage
      implements GameOptionPassRspOrBuilder {
    // Use GameOptionPassRsp.newBuilder() to construct.
    private GameOptionPassRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOptionPassRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOptionPassRsp defaultInstance;
    public static GameOptionPassRsp getDefaultInstance() {
      return defaultInstance;
    }

    public GameOptionPassRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOptionPassRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ret_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameOptionPassRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameOptionPassRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameOptionPassRsp.class, Mahjong.GameOptionPassRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOptionPassRsp> PARSER =
        new com.google.protobuf.AbstractParser<GameOptionPassRsp>() {
      public GameOptionPassRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOptionPassRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOptionPassRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 ret = 1;
    public static final int RET_FIELD_NUMBER = 1;
    private int ret_;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public int getRet() {
      return ret_;
    }

    private void initFields() {
      ret_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ret_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ret_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameOptionPassRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionPassRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionPassRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionPassRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionPassRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionPassRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionPassRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameOptionPassRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionPassRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionPassRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameOptionPassRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameOptionPassRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameOptionPassRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameOptionPassRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameOptionPassRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameOptionPassRsp.class, Mahjong.GameOptionPassRsp.Builder.class);
      }

      // Construct using Mahjong.GameOptionPassRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameOptionPassRsp_descriptor;
      }

      public Mahjong.GameOptionPassRsp getDefaultInstanceForType() {
        return Mahjong.GameOptionPassRsp.getDefaultInstance();
      }

      public Mahjong.GameOptionPassRsp build() {
        Mahjong.GameOptionPassRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameOptionPassRsp buildPartial() {
        Mahjong.GameOptionPassRsp result = new Mahjong.GameOptionPassRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ret_ = ret_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameOptionPassRsp) {
          return mergeFrom((Mahjong.GameOptionPassRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameOptionPassRsp other) {
        if (other == Mahjong.GameOptionPassRsp.getDefaultInstance()) return this;
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameOptionPassRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameOptionPassRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 ret = 1;
      private int ret_ ;
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000001;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ret_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameOptionPassRsp)
    }

    static {
      defaultInstance = new GameOptionPassRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameOptionPassRsp)
  }

  public interface GamePlayerReadyReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 status = 1;
    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     *0 取消准备 1准备 2同意取消桌子 3拒绝取消桌子 4同意上火 5拒绝上火 6飘分分数 
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     *0 取消准备 1准备 2同意取消桌子 3拒绝取消桌子 4同意上火 5拒绝上火 6飘分分数 
     * </pre>
     */
    int getStatus();

    // optional int32 piaofen = 2;
    /**
     * <code>optional int32 piaofen = 2;</code>
     */
    boolean hasPiaofen();
    /**
     * <code>optional int32 piaofen = 2;</code>
     */
    int getPiaofen();
  }
  /**
   * Protobuf type {@code GamePlayerReadyReq}
   *
   * <pre>
   *客户端请求改变用户状态 7012
   * </pre>
   */
  public static final class GamePlayerReadyReq extends
      com.google.protobuf.GeneratedMessage
      implements GamePlayerReadyReqOrBuilder {
    // Use GamePlayerReadyReq.newBuilder() to construct.
    private GamePlayerReadyReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GamePlayerReadyReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GamePlayerReadyReq defaultInstance;
    public static GamePlayerReadyReq getDefaultInstance() {
      return defaultInstance;
    }

    public GamePlayerReadyReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GamePlayerReadyReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              status_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              piaofen_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GamePlayerReadyReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GamePlayerReadyReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GamePlayerReadyReq.class, Mahjong.GamePlayerReadyReq.Builder.class);
    }

    public static com.google.protobuf.Parser<GamePlayerReadyReq> PARSER =
        new com.google.protobuf.AbstractParser<GamePlayerReadyReq>() {
      public GamePlayerReadyReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GamePlayerReadyReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GamePlayerReadyReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_;
    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     *0 取消准备 1准备 2同意取消桌子 3拒绝取消桌子 4同意上火 5拒绝上火 6飘分分数 
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     *0 取消准备 1准备 2同意取消桌子 3拒绝取消桌子 4同意上火 5拒绝上火 6飘分分数 
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // optional int32 piaofen = 2;
    public static final int PIAOFEN_FIELD_NUMBER = 2;
    private int piaofen_;
    /**
     * <code>optional int32 piaofen = 2;</code>
     */
    public boolean hasPiaofen() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 piaofen = 2;</code>
     */
    public int getPiaofen() {
      return piaofen_;
    }

    private void initFields() {
      status_ = 0;
      piaofen_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, piaofen_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, piaofen_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GamePlayerReadyReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GamePlayerReadyReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GamePlayerReadyReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GamePlayerReadyReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GamePlayerReadyReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GamePlayerReadyReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GamePlayerReadyReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GamePlayerReadyReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GamePlayerReadyReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GamePlayerReadyReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GamePlayerReadyReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GamePlayerReadyReq}
     *
     * <pre>
     *客户端请求改变用户状态 7012
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GamePlayerReadyReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GamePlayerReadyReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GamePlayerReadyReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GamePlayerReadyReq.class, Mahjong.GamePlayerReadyReq.Builder.class);
      }

      // Construct using Mahjong.GamePlayerReadyReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        piaofen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GamePlayerReadyReq_descriptor;
      }

      public Mahjong.GamePlayerReadyReq getDefaultInstanceForType() {
        return Mahjong.GamePlayerReadyReq.getDefaultInstance();
      }

      public Mahjong.GamePlayerReadyReq build() {
        Mahjong.GamePlayerReadyReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GamePlayerReadyReq buildPartial() {
        Mahjong.GamePlayerReadyReq result = new Mahjong.GamePlayerReadyReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.piaofen_ = piaofen_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GamePlayerReadyReq) {
          return mergeFrom((Mahjong.GamePlayerReadyReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GamePlayerReadyReq other) {
        if (other == Mahjong.GamePlayerReadyReq.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasPiaofen()) {
          setPiaofen(other.getPiaofen());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GamePlayerReadyReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GamePlayerReadyReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 status = 1;
      private int status_ ;
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       *0 取消准备 1准备 2同意取消桌子 3拒绝取消桌子 4同意上火 5拒绝上火 6飘分分数 
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       *0 取消准备 1准备 2同意取消桌子 3拒绝取消桌子 4同意上火 5拒绝上火 6飘分分数 
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       *0 取消准备 1准备 2同意取消桌子 3拒绝取消桌子 4同意上火 5拒绝上火 6飘分分数 
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       *0 取消准备 1准备 2同意取消桌子 3拒绝取消桌子 4同意上火 5拒绝上火 6飘分分数 
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional int32 piaofen = 2;
      private int piaofen_ ;
      /**
       * <code>optional int32 piaofen = 2;</code>
       */
      public boolean hasPiaofen() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 piaofen = 2;</code>
       */
      public int getPiaofen() {
        return piaofen_;
      }
      /**
       * <code>optional int32 piaofen = 2;</code>
       */
      public Builder setPiaofen(int value) {
        bitField0_ |= 0x00000002;
        piaofen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 piaofen = 2;</code>
       */
      public Builder clearPiaofen() {
        bitField0_ = (bitField0_ & ~0x00000002);
        piaofen_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GamePlayerReadyReq)
    }

    static {
      defaultInstance = new GamePlayerReadyReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GamePlayerReadyReq)
  }

  public interface UserStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 uin = 1;
    /**
     * <code>optional int32 uin = 1;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    boolean hasUin();
    /**
     * <code>optional int32 uin = 1;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    int getUin();

    // optional int32 status = 2;
    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     * 见status
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     * 见status
     * </pre>
     */
    int getStatus();

    // optional int32 piaofen = 3;
    /**
     * <code>optional int32 piaofen = 3;</code>
     *
     * <pre>
     * 用户飘了多少分
     * </pre>
     */
    boolean hasPiaofen();
    /**
     * <code>optional int32 piaofen = 3;</code>
     *
     * <pre>
     * 用户飘了多少分
     * </pre>
     */
    int getPiaofen();

    // optional int32 shanghuo = 4;
    /**
     * <code>optional int32 shanghuo = 4;</code>
     *
     * <pre>
     * 是否选择了上火 1不上火 2上火
     * </pre>
     */
    boolean hasShanghuo();
    /**
     * <code>optional int32 shanghuo = 4;</code>
     *
     * <pre>
     * 是否选择了上火 1不上火 2上火
     * </pre>
     */
    int getShanghuo();
  }
  /**
   * Protobuf type {@code UserStatus}
   */
  public static final class UserStatus extends
      com.google.protobuf.GeneratedMessage
      implements UserStatusOrBuilder {
    // Use UserStatus.newBuilder() to construct.
    private UserStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UserStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UserStatus defaultInstance;
    public static UserStatus getDefaultInstance() {
      return defaultInstance;
    }

    public UserStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UserStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uin_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              piaofen_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              shanghuo_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_UserStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_UserStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.UserStatus.class, Mahjong.UserStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<UserStatus> PARSER =
        new com.google.protobuf.AbstractParser<UserStatus>() {
      public UserStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 uin = 1;
    public static final int UIN_FIELD_NUMBER = 1;
    private int uin_;
    /**
     * <code>optional int32 uin = 1;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public boolean hasUin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 uin = 1;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public int getUin() {
      return uin_;
    }

    // optional int32 status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     * 见status
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     * 见status
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // optional int32 piaofen = 3;
    public static final int PIAOFEN_FIELD_NUMBER = 3;
    private int piaofen_;
    /**
     * <code>optional int32 piaofen = 3;</code>
     *
     * <pre>
     * 用户飘了多少分
     * </pre>
     */
    public boolean hasPiaofen() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 piaofen = 3;</code>
     *
     * <pre>
     * 用户飘了多少分
     * </pre>
     */
    public int getPiaofen() {
      return piaofen_;
    }

    // optional int32 shanghuo = 4;
    public static final int SHANGHUO_FIELD_NUMBER = 4;
    private int shanghuo_;
    /**
     * <code>optional int32 shanghuo = 4;</code>
     *
     * <pre>
     * 是否选择了上火 1不上火 2上火
     * </pre>
     */
    public boolean hasShanghuo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 shanghuo = 4;</code>
     *
     * <pre>
     * 是否选择了上火 1不上火 2上火
     * </pre>
     */
    public int getShanghuo() {
      return shanghuo_;
    }

    private void initFields() {
      uin_ = 0;
      status_ = 0;
      piaofen_ = 0;
      shanghuo_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, piaofen_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, shanghuo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, piaofen_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, shanghuo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.UserStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.UserStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.UserStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.UserStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.UserStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.UserStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.UserStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.UserStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.UserStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.UserStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.UserStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code UserStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.UserStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_UserStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_UserStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.UserStatus.class, Mahjong.UserStatus.Builder.class);
      }

      // Construct using Mahjong.UserStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        piaofen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        shanghuo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_UserStatus_descriptor;
      }

      public Mahjong.UserStatus getDefaultInstanceForType() {
        return Mahjong.UserStatus.getDefaultInstance();
      }

      public Mahjong.UserStatus build() {
        Mahjong.UserStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.UserStatus buildPartial() {
        Mahjong.UserStatus result = new Mahjong.UserStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uin_ = uin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.piaofen_ = piaofen_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.shanghuo_ = shanghuo_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.UserStatus) {
          return mergeFrom((Mahjong.UserStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.UserStatus other) {
        if (other == Mahjong.UserStatus.getDefaultInstance()) return this;
        if (other.hasUin()) {
          setUin(other.getUin());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasPiaofen()) {
          setPiaofen(other.getPiaofen());
        }
        if (other.hasShanghuo()) {
          setShanghuo(other.getShanghuo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.UserStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.UserStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 uin = 1;
      private int uin_ ;
      /**
       * <code>optional int32 uin = 1;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public boolean hasUin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 uin = 1;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public int getUin() {
        return uin_;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder setUin(int value) {
        bitField0_ |= 0x00000001;
        uin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder clearUin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 status = 2;
      private int status_ ;
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       * 见status
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       * 见status
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       * 见status
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       * 见status
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional int32 piaofen = 3;
      private int piaofen_ ;
      /**
       * <code>optional int32 piaofen = 3;</code>
       *
       * <pre>
       * 用户飘了多少分
       * </pre>
       */
      public boolean hasPiaofen() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 piaofen = 3;</code>
       *
       * <pre>
       * 用户飘了多少分
       * </pre>
       */
      public int getPiaofen() {
        return piaofen_;
      }
      /**
       * <code>optional int32 piaofen = 3;</code>
       *
       * <pre>
       * 用户飘了多少分
       * </pre>
       */
      public Builder setPiaofen(int value) {
        bitField0_ |= 0x00000004;
        piaofen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 piaofen = 3;</code>
       *
       * <pre>
       * 用户飘了多少分
       * </pre>
       */
      public Builder clearPiaofen() {
        bitField0_ = (bitField0_ & ~0x00000004);
        piaofen_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shanghuo = 4;
      private int shanghuo_ ;
      /**
       * <code>optional int32 shanghuo = 4;</code>
       *
       * <pre>
       * 是否选择了上火 1不上火 2上火
       * </pre>
       */
      public boolean hasShanghuo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 shanghuo = 4;</code>
       *
       * <pre>
       * 是否选择了上火 1不上火 2上火
       * </pre>
       */
      public int getShanghuo() {
        return shanghuo_;
      }
      /**
       * <code>optional int32 shanghuo = 4;</code>
       *
       * <pre>
       * 是否选择了上火 1不上火 2上火
       * </pre>
       */
      public Builder setShanghuo(int value) {
        bitField0_ |= 0x00000008;
        shanghuo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shanghuo = 4;</code>
       *
       * <pre>
       * 是否选择了上火 1不上火 2上火
       * </pre>
       */
      public Builder clearShanghuo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        shanghuo_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:UserStatus)
    }

    static {
      defaultInstance = new UserStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:UserStatus)
  }

  public interface GamePlayerReadyEvtOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .UserStatus users = 1;
    /**
     * <code>repeated .UserStatus users = 1;</code>
     */
    java.util.List<Mahjong.UserStatus> 
        getUsersList();
    /**
     * <code>repeated .UserStatus users = 1;</code>
     */
    Mahjong.UserStatus getUsers(int index);
    /**
     * <code>repeated .UserStatus users = 1;</code>
     */
    int getUsersCount();
    /**
     * <code>repeated .UserStatus users = 1;</code>
     */
    java.util.List<? extends Mahjong.UserStatusOrBuilder> 
        getUsersOrBuilderList();
    /**
     * <code>repeated .UserStatus users = 1;</code>
     */
    Mahjong.UserStatusOrBuilder getUsersOrBuilder(
        int index);

    // optional int32 pre_remain_time = 2;
    /**
     * <code>optional int32 pre_remain_time = 2;</code>
     *
     * <pre>
     * 选择飘分上火剩余时间
     * </pre>
     */
    boolean hasPreRemainTime();
    /**
     * <code>optional int32 pre_remain_time = 2;</code>
     *
     * <pre>
     * 选择飘分上火剩余时间
     * </pre>
     */
    int getPreRemainTime();

    // optional int32 deskid = 3;
    /**
     * <code>optional int32 deskid = 3;</code>
     */
    boolean hasDeskid();
    /**
     * <code>optional int32 deskid = 3;</code>
     */
    int getDeskid();
  }
  /**
   * Protobuf type {@code GamePlayerReadyEvt}
   *
   * <pre>
   *服务器用户状态改变广播 7012
   * </pre>
   */
  public static final class GamePlayerReadyEvt extends
      com.google.protobuf.GeneratedMessage
      implements GamePlayerReadyEvtOrBuilder {
    // Use GamePlayerReadyEvt.newBuilder() to construct.
    private GamePlayerReadyEvt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GamePlayerReadyEvt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GamePlayerReadyEvt defaultInstance;
    public static GamePlayerReadyEvt getDefaultInstance() {
      return defaultInstance;
    }

    public GamePlayerReadyEvt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GamePlayerReadyEvt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                users_ = new java.util.ArrayList<Mahjong.UserStatus>();
                mutable_bitField0_ |= 0x00000001;
              }
              users_.add(input.readMessage(Mahjong.UserStatus.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              preRemainTime_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              deskid_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          users_ = java.util.Collections.unmodifiableList(users_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GamePlayerReadyEvt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GamePlayerReadyEvt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GamePlayerReadyEvt.class, Mahjong.GamePlayerReadyEvt.Builder.class);
    }

    public static com.google.protobuf.Parser<GamePlayerReadyEvt> PARSER =
        new com.google.protobuf.AbstractParser<GamePlayerReadyEvt>() {
      public GamePlayerReadyEvt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GamePlayerReadyEvt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GamePlayerReadyEvt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .UserStatus users = 1;
    public static final int USERS_FIELD_NUMBER = 1;
    private java.util.List<Mahjong.UserStatus> users_;
    /**
     * <code>repeated .UserStatus users = 1;</code>
     */
    public java.util.List<Mahjong.UserStatus> getUsersList() {
      return users_;
    }
    /**
     * <code>repeated .UserStatus users = 1;</code>
     */
    public java.util.List<? extends Mahjong.UserStatusOrBuilder> 
        getUsersOrBuilderList() {
      return users_;
    }
    /**
     * <code>repeated .UserStatus users = 1;</code>
     */
    public int getUsersCount() {
      return users_.size();
    }
    /**
     * <code>repeated .UserStatus users = 1;</code>
     */
    public Mahjong.UserStatus getUsers(int index) {
      return users_.get(index);
    }
    /**
     * <code>repeated .UserStatus users = 1;</code>
     */
    public Mahjong.UserStatusOrBuilder getUsersOrBuilder(
        int index) {
      return users_.get(index);
    }

    // optional int32 pre_remain_time = 2;
    public static final int PRE_REMAIN_TIME_FIELD_NUMBER = 2;
    private int preRemainTime_;
    /**
     * <code>optional int32 pre_remain_time = 2;</code>
     *
     * <pre>
     * 选择飘分上火剩余时间
     * </pre>
     */
    public boolean hasPreRemainTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 pre_remain_time = 2;</code>
     *
     * <pre>
     * 选择飘分上火剩余时间
     * </pre>
     */
    public int getPreRemainTime() {
      return preRemainTime_;
    }

    // optional int32 deskid = 3;
    public static final int DESKID_FIELD_NUMBER = 3;
    private int deskid_;
    /**
     * <code>optional int32 deskid = 3;</code>
     */
    public boolean hasDeskid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 deskid = 3;</code>
     */
    public int getDeskid() {
      return deskid_;
    }

    private void initFields() {
      users_ = java.util.Collections.emptyList();
      preRemainTime_ = 0;
      deskid_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < users_.size(); i++) {
        output.writeMessage(1, users_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, preRemainTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, deskid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < users_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, users_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, preRemainTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, deskid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GamePlayerReadyEvt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GamePlayerReadyEvt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GamePlayerReadyEvt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GamePlayerReadyEvt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GamePlayerReadyEvt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GamePlayerReadyEvt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GamePlayerReadyEvt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GamePlayerReadyEvt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GamePlayerReadyEvt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GamePlayerReadyEvt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GamePlayerReadyEvt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GamePlayerReadyEvt}
     *
     * <pre>
     *服务器用户状态改变广播 7012
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GamePlayerReadyEvtOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GamePlayerReadyEvt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GamePlayerReadyEvt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GamePlayerReadyEvt.class, Mahjong.GamePlayerReadyEvt.Builder.class);
      }

      // Construct using Mahjong.GamePlayerReadyEvt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUsersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (usersBuilder_ == null) {
          users_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          usersBuilder_.clear();
        }
        preRemainTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        deskid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GamePlayerReadyEvt_descriptor;
      }

      public Mahjong.GamePlayerReadyEvt getDefaultInstanceForType() {
        return Mahjong.GamePlayerReadyEvt.getDefaultInstance();
      }

      public Mahjong.GamePlayerReadyEvt build() {
        Mahjong.GamePlayerReadyEvt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GamePlayerReadyEvt buildPartial() {
        Mahjong.GamePlayerReadyEvt result = new Mahjong.GamePlayerReadyEvt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (usersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            users_ = java.util.Collections.unmodifiableList(users_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.users_ = users_;
        } else {
          result.users_ = usersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.preRemainTime_ = preRemainTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.deskid_ = deskid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GamePlayerReadyEvt) {
          return mergeFrom((Mahjong.GamePlayerReadyEvt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GamePlayerReadyEvt other) {
        if (other == Mahjong.GamePlayerReadyEvt.getDefaultInstance()) return this;
        if (usersBuilder_ == null) {
          if (!other.users_.isEmpty()) {
            if (users_.isEmpty()) {
              users_ = other.users_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureUsersIsMutable();
              users_.addAll(other.users_);
            }
            onChanged();
          }
        } else {
          if (!other.users_.isEmpty()) {
            if (usersBuilder_.isEmpty()) {
              usersBuilder_.dispose();
              usersBuilder_ = null;
              users_ = other.users_;
              bitField0_ = (bitField0_ & ~0x00000001);
              usersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getUsersFieldBuilder() : null;
            } else {
              usersBuilder_.addAllMessages(other.users_);
            }
          }
        }
        if (other.hasPreRemainTime()) {
          setPreRemainTime(other.getPreRemainTime());
        }
        if (other.hasDeskid()) {
          setDeskid(other.getDeskid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GamePlayerReadyEvt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GamePlayerReadyEvt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .UserStatus users = 1;
      private java.util.List<Mahjong.UserStatus> users_ =
        java.util.Collections.emptyList();
      private void ensureUsersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          users_ = new java.util.ArrayList<Mahjong.UserStatus>(users_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.UserStatus, Mahjong.UserStatus.Builder, Mahjong.UserStatusOrBuilder> usersBuilder_;

      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public java.util.List<Mahjong.UserStatus> getUsersList() {
        if (usersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(users_);
        } else {
          return usersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public int getUsersCount() {
        if (usersBuilder_ == null) {
          return users_.size();
        } else {
          return usersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public Mahjong.UserStatus getUsers(int index) {
        if (usersBuilder_ == null) {
          return users_.get(index);
        } else {
          return usersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public Builder setUsers(
          int index, Mahjong.UserStatus value) {
        if (usersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsersIsMutable();
          users_.set(index, value);
          onChanged();
        } else {
          usersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public Builder setUsers(
          int index, Mahjong.UserStatus.Builder builderForValue) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.set(index, builderForValue.build());
          onChanged();
        } else {
          usersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public Builder addUsers(Mahjong.UserStatus value) {
        if (usersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsersIsMutable();
          users_.add(value);
          onChanged();
        } else {
          usersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public Builder addUsers(
          int index, Mahjong.UserStatus value) {
        if (usersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsersIsMutable();
          users_.add(index, value);
          onChanged();
        } else {
          usersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public Builder addUsers(
          Mahjong.UserStatus.Builder builderForValue) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.add(builderForValue.build());
          onChanged();
        } else {
          usersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public Builder addUsers(
          int index, Mahjong.UserStatus.Builder builderForValue) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.add(index, builderForValue.build());
          onChanged();
        } else {
          usersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public Builder addAllUsers(
          java.lang.Iterable<? extends Mahjong.UserStatus> values) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          super.addAll(values, users_);
          onChanged();
        } else {
          usersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public Builder clearUsers() {
        if (usersBuilder_ == null) {
          users_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          usersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public Builder removeUsers(int index) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.remove(index);
          onChanged();
        } else {
          usersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public Mahjong.UserStatus.Builder getUsersBuilder(
          int index) {
        return getUsersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public Mahjong.UserStatusOrBuilder getUsersOrBuilder(
          int index) {
        if (usersBuilder_ == null) {
          return users_.get(index);  } else {
          return usersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public java.util.List<? extends Mahjong.UserStatusOrBuilder> 
           getUsersOrBuilderList() {
        if (usersBuilder_ != null) {
          return usersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(users_);
        }
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public Mahjong.UserStatus.Builder addUsersBuilder() {
        return getUsersFieldBuilder().addBuilder(
            Mahjong.UserStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public Mahjong.UserStatus.Builder addUsersBuilder(
          int index) {
        return getUsersFieldBuilder().addBuilder(
            index, Mahjong.UserStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .UserStatus users = 1;</code>
       */
      public java.util.List<Mahjong.UserStatus.Builder> 
           getUsersBuilderList() {
        return getUsersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.UserStatus, Mahjong.UserStatus.Builder, Mahjong.UserStatusOrBuilder> 
          getUsersFieldBuilder() {
        if (usersBuilder_ == null) {
          usersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Mahjong.UserStatus, Mahjong.UserStatus.Builder, Mahjong.UserStatusOrBuilder>(
                  users_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          users_ = null;
        }
        return usersBuilder_;
      }

      // optional int32 pre_remain_time = 2;
      private int preRemainTime_ ;
      /**
       * <code>optional int32 pre_remain_time = 2;</code>
       *
       * <pre>
       * 选择飘分上火剩余时间
       * </pre>
       */
      public boolean hasPreRemainTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 pre_remain_time = 2;</code>
       *
       * <pre>
       * 选择飘分上火剩余时间
       * </pre>
       */
      public int getPreRemainTime() {
        return preRemainTime_;
      }
      /**
       * <code>optional int32 pre_remain_time = 2;</code>
       *
       * <pre>
       * 选择飘分上火剩余时间
       * </pre>
       */
      public Builder setPreRemainTime(int value) {
        bitField0_ |= 0x00000002;
        preRemainTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pre_remain_time = 2;</code>
       *
       * <pre>
       * 选择飘分上火剩余时间
       * </pre>
       */
      public Builder clearPreRemainTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        preRemainTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 deskid = 3;
      private int deskid_ ;
      /**
       * <code>optional int32 deskid = 3;</code>
       */
      public boolean hasDeskid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 deskid = 3;</code>
       */
      public int getDeskid() {
        return deskid_;
      }
      /**
       * <code>optional int32 deskid = 3;</code>
       */
      public Builder setDeskid(int value) {
        bitField0_ |= 0x00000004;
        deskid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 deskid = 3;</code>
       */
      public Builder clearDeskid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        deskid_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GamePlayerReadyEvt)
    }

    static {
      defaultInstance = new GamePlayerReadyEvt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GamePlayerReadyEvt)
  }

  public interface GameOptionGangNotFirstReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 gang_card = 1;
    /**
     * <code>optional int32 gang_card = 1;</code>
     */
    boolean hasGangCard();
    /**
     * <code>optional int32 gang_card = 1;</code>
     */
    int getGangCard();
  }
  /**
   * Protobuf type {@code GameOptionGangNotFirstReq}
   *
   * <pre>
   *客户端主动请求杠牌（主要用于叫起来第四张牌后不第一时间选择杠牌，而是过了几手之后再杠牌，因为服务器当前只有第一时间杠牌的操作，所以第一时间没杠后续的判断就客户端来判断，然后主动发消息杠牌） 7013
   * </pre>
   */
  public static final class GameOptionGangNotFirstReq extends
      com.google.protobuf.GeneratedMessage
      implements GameOptionGangNotFirstReqOrBuilder {
    // Use GameOptionGangNotFirstReq.newBuilder() to construct.
    private GameOptionGangNotFirstReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOptionGangNotFirstReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOptionGangNotFirstReq defaultInstance;
    public static GameOptionGangNotFirstReq getDefaultInstance() {
      return defaultInstance;
    }

    public GameOptionGangNotFirstReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOptionGangNotFirstReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gangCard_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameOptionGangNotFirstReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameOptionGangNotFirstReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameOptionGangNotFirstReq.class, Mahjong.GameOptionGangNotFirstReq.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOptionGangNotFirstReq> PARSER =
        new com.google.protobuf.AbstractParser<GameOptionGangNotFirstReq>() {
      public GameOptionGangNotFirstReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOptionGangNotFirstReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOptionGangNotFirstReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 gang_card = 1;
    public static final int GANG_CARD_FIELD_NUMBER = 1;
    private int gangCard_;
    /**
     * <code>optional int32 gang_card = 1;</code>
     */
    public boolean hasGangCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 gang_card = 1;</code>
     */
    public int getGangCard() {
      return gangCard_;
    }

    private void initFields() {
      gangCard_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, gangCard_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, gangCard_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameOptionGangNotFirstReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionGangNotFirstReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionGangNotFirstReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionGangNotFirstReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionGangNotFirstReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionGangNotFirstReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionGangNotFirstReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameOptionGangNotFirstReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionGangNotFirstReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionGangNotFirstReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameOptionGangNotFirstReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameOptionGangNotFirstReq}
     *
     * <pre>
     *客户端主动请求杠牌（主要用于叫起来第四张牌后不第一时间选择杠牌，而是过了几手之后再杠牌，因为服务器当前只有第一时间杠牌的操作，所以第一时间没杠后续的判断就客户端来判断，然后主动发消息杠牌） 7013
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameOptionGangNotFirstReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameOptionGangNotFirstReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameOptionGangNotFirstReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameOptionGangNotFirstReq.class, Mahjong.GameOptionGangNotFirstReq.Builder.class);
      }

      // Construct using Mahjong.GameOptionGangNotFirstReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gangCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameOptionGangNotFirstReq_descriptor;
      }

      public Mahjong.GameOptionGangNotFirstReq getDefaultInstanceForType() {
        return Mahjong.GameOptionGangNotFirstReq.getDefaultInstance();
      }

      public Mahjong.GameOptionGangNotFirstReq build() {
        Mahjong.GameOptionGangNotFirstReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameOptionGangNotFirstReq buildPartial() {
        Mahjong.GameOptionGangNotFirstReq result = new Mahjong.GameOptionGangNotFirstReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gangCard_ = gangCard_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameOptionGangNotFirstReq) {
          return mergeFrom((Mahjong.GameOptionGangNotFirstReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameOptionGangNotFirstReq other) {
        if (other == Mahjong.GameOptionGangNotFirstReq.getDefaultInstance()) return this;
        if (other.hasGangCard()) {
          setGangCard(other.getGangCard());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameOptionGangNotFirstReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameOptionGangNotFirstReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 gang_card = 1;
      private int gangCard_ ;
      /**
       * <code>optional int32 gang_card = 1;</code>
       */
      public boolean hasGangCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 gang_card = 1;</code>
       */
      public int getGangCard() {
        return gangCard_;
      }
      /**
       * <code>optional int32 gang_card = 1;</code>
       */
      public Builder setGangCard(int value) {
        bitField0_ |= 0x00000001;
        gangCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gang_card = 1;</code>
       */
      public Builder clearGangCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gangCard_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameOptionGangNotFirstReq)
    }

    static {
      defaultInstance = new GameOptionGangNotFirstReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameOptionGangNotFirstReq)
  }

  public interface GameOptionGangNotFirstRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 ret = 1;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>optional int32 ret = 1;</code>
     */
    int getRet();
  }
  /**
   * Protobuf type {@code GameOptionGangNotFirstRsp}
   */
  public static final class GameOptionGangNotFirstRsp extends
      com.google.protobuf.GeneratedMessage
      implements GameOptionGangNotFirstRspOrBuilder {
    // Use GameOptionGangNotFirstRsp.newBuilder() to construct.
    private GameOptionGangNotFirstRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOptionGangNotFirstRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOptionGangNotFirstRsp defaultInstance;
    public static GameOptionGangNotFirstRsp getDefaultInstance() {
      return defaultInstance;
    }

    public GameOptionGangNotFirstRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOptionGangNotFirstRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ret_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameOptionGangNotFirstRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameOptionGangNotFirstRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameOptionGangNotFirstRsp.class, Mahjong.GameOptionGangNotFirstRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOptionGangNotFirstRsp> PARSER =
        new com.google.protobuf.AbstractParser<GameOptionGangNotFirstRsp>() {
      public GameOptionGangNotFirstRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOptionGangNotFirstRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOptionGangNotFirstRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 ret = 1;
    public static final int RET_FIELD_NUMBER = 1;
    private int ret_;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public int getRet() {
      return ret_;
    }

    private void initFields() {
      ret_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ret_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ret_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameOptionGangNotFirstRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionGangNotFirstRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionGangNotFirstRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOptionGangNotFirstRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOptionGangNotFirstRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionGangNotFirstRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionGangNotFirstRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameOptionGangNotFirstRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOptionGangNotFirstRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOptionGangNotFirstRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameOptionGangNotFirstRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameOptionGangNotFirstRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameOptionGangNotFirstRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameOptionGangNotFirstRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameOptionGangNotFirstRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameOptionGangNotFirstRsp.class, Mahjong.GameOptionGangNotFirstRsp.Builder.class);
      }

      // Construct using Mahjong.GameOptionGangNotFirstRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameOptionGangNotFirstRsp_descriptor;
      }

      public Mahjong.GameOptionGangNotFirstRsp getDefaultInstanceForType() {
        return Mahjong.GameOptionGangNotFirstRsp.getDefaultInstance();
      }

      public Mahjong.GameOptionGangNotFirstRsp build() {
        Mahjong.GameOptionGangNotFirstRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameOptionGangNotFirstRsp buildPartial() {
        Mahjong.GameOptionGangNotFirstRsp result = new Mahjong.GameOptionGangNotFirstRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ret_ = ret_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameOptionGangNotFirstRsp) {
          return mergeFrom((Mahjong.GameOptionGangNotFirstRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameOptionGangNotFirstRsp other) {
        if (other == Mahjong.GameOptionGangNotFirstRsp.getDefaultInstance()) return this;
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameOptionGangNotFirstRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameOptionGangNotFirstRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 ret = 1;
      private int ret_ ;
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000001;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ret_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameOptionGangNotFirstRsp)
    }

    static {
      defaultInstance = new GameOptionGangNotFirstRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameOptionGangNotFirstRsp)
  }

  public interface ApplyDeleteReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code ApplyDeleteReq}
   *
   * <pre>
   *申请解散房间 7014
   * </pre>
   */
  public static final class ApplyDeleteReq extends
      com.google.protobuf.GeneratedMessage
      implements ApplyDeleteReqOrBuilder {
    // Use ApplyDeleteReq.newBuilder() to construct.
    private ApplyDeleteReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ApplyDeleteReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ApplyDeleteReq defaultInstance;
    public static ApplyDeleteReq getDefaultInstance() {
      return defaultInstance;
    }

    public ApplyDeleteReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ApplyDeleteReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_ApplyDeleteReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_ApplyDeleteReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.ApplyDeleteReq.class, Mahjong.ApplyDeleteReq.Builder.class);
    }

    public static com.google.protobuf.Parser<ApplyDeleteReq> PARSER =
        new com.google.protobuf.AbstractParser<ApplyDeleteReq>() {
      public ApplyDeleteReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ApplyDeleteReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ApplyDeleteReq> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.ApplyDeleteReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.ApplyDeleteReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.ApplyDeleteReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.ApplyDeleteReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.ApplyDeleteReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.ApplyDeleteReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.ApplyDeleteReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.ApplyDeleteReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.ApplyDeleteReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.ApplyDeleteReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.ApplyDeleteReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ApplyDeleteReq}
     *
     * <pre>
     *申请解散房间 7014
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.ApplyDeleteReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_ApplyDeleteReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_ApplyDeleteReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.ApplyDeleteReq.class, Mahjong.ApplyDeleteReq.Builder.class);
      }

      // Construct using Mahjong.ApplyDeleteReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_ApplyDeleteReq_descriptor;
      }

      public Mahjong.ApplyDeleteReq getDefaultInstanceForType() {
        return Mahjong.ApplyDeleteReq.getDefaultInstance();
      }

      public Mahjong.ApplyDeleteReq build() {
        Mahjong.ApplyDeleteReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.ApplyDeleteReq buildPartial() {
        Mahjong.ApplyDeleteReq result = new Mahjong.ApplyDeleteReq(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.ApplyDeleteReq) {
          return mergeFrom((Mahjong.ApplyDeleteReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.ApplyDeleteReq other) {
        if (other == Mahjong.ApplyDeleteReq.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.ApplyDeleteReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.ApplyDeleteReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ApplyDeleteReq)
    }

    static {
      defaultInstance = new ApplyDeleteReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ApplyDeleteReq)
  }

  public interface ApplyDeleteEvtOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 apply_uin = 1;
    /**
     * <code>optional int32 apply_uin = 1;</code>
     *
     * <pre>
     *申请解散牌桌的人
     * </pre>
     */
    boolean hasApplyUin();
    /**
     * <code>optional int32 apply_uin = 1;</code>
     *
     * <pre>
     *申请解散牌桌的人
     * </pre>
     */
    int getApplyUin();

    // optional int32 game_status = 2;
    /**
     * <code>optional int32 game_status = 2;</code>
     *
     * <pre>
     *牌桌游戏状态，0 未开始，1 已开始
     * </pre>
     */
    boolean hasGameStatus();
    /**
     * <code>optional int32 game_status = 2;</code>
     *
     * <pre>
     *牌桌游戏状态，0 未开始，1 已开始
     * </pre>
     */
    int getGameStatus();

    // optional int32 remain_time = 3;
    /**
     * <code>optional int32 remain_time = 3;</code>
     *
     * <pre>
     * 投票剩余时长             
     * </pre>
     */
    boolean hasRemainTime();
    /**
     * <code>optional int32 remain_time = 3;</code>
     *
     * <pre>
     * 投票剩余时长             
     * </pre>
     */
    int getRemainTime();

    // optional int32 status = 4;
    /**
     * <code>optional int32 status = 4;</code>
     *
     * <pre>
     * 牌桌状态  
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 4;</code>
     *
     * <pre>
     * 牌桌状态  
     * </pre>
     */
    int getStatus();

    // optional int32 deskid = 5;
    /**
     * <code>optional int32 deskid = 5;</code>
     */
    boolean hasDeskid();
    /**
     * <code>optional int32 deskid = 5;</code>
     */
    int getDeskid();
  }
  /**
   * Protobuf type {@code ApplyDeleteEvt}
   */
  public static final class ApplyDeleteEvt extends
      com.google.protobuf.GeneratedMessage
      implements ApplyDeleteEvtOrBuilder {
    // Use ApplyDeleteEvt.newBuilder() to construct.
    private ApplyDeleteEvt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ApplyDeleteEvt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ApplyDeleteEvt defaultInstance;
    public static ApplyDeleteEvt getDefaultInstance() {
      return defaultInstance;
    }

    public ApplyDeleteEvt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ApplyDeleteEvt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              applyUin_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gameStatus_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              remainTime_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              status_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              deskid_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_ApplyDeleteEvt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_ApplyDeleteEvt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.ApplyDeleteEvt.class, Mahjong.ApplyDeleteEvt.Builder.class);
    }

    public static com.google.protobuf.Parser<ApplyDeleteEvt> PARSER =
        new com.google.protobuf.AbstractParser<ApplyDeleteEvt>() {
      public ApplyDeleteEvt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ApplyDeleteEvt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ApplyDeleteEvt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 apply_uin = 1;
    public static final int APPLY_UIN_FIELD_NUMBER = 1;
    private int applyUin_;
    /**
     * <code>optional int32 apply_uin = 1;</code>
     *
     * <pre>
     *申请解散牌桌的人
     * </pre>
     */
    public boolean hasApplyUin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 apply_uin = 1;</code>
     *
     * <pre>
     *申请解散牌桌的人
     * </pre>
     */
    public int getApplyUin() {
      return applyUin_;
    }

    // optional int32 game_status = 2;
    public static final int GAME_STATUS_FIELD_NUMBER = 2;
    private int gameStatus_;
    /**
     * <code>optional int32 game_status = 2;</code>
     *
     * <pre>
     *牌桌游戏状态，0 未开始，1 已开始
     * </pre>
     */
    public boolean hasGameStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 game_status = 2;</code>
     *
     * <pre>
     *牌桌游戏状态，0 未开始，1 已开始
     * </pre>
     */
    public int getGameStatus() {
      return gameStatus_;
    }

    // optional int32 remain_time = 3;
    public static final int REMAIN_TIME_FIELD_NUMBER = 3;
    private int remainTime_;
    /**
     * <code>optional int32 remain_time = 3;</code>
     *
     * <pre>
     * 投票剩余时长             
     * </pre>
     */
    public boolean hasRemainTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 remain_time = 3;</code>
     *
     * <pre>
     * 投票剩余时长             
     * </pre>
     */
    public int getRemainTime() {
      return remainTime_;
    }

    // optional int32 status = 4;
    public static final int STATUS_FIELD_NUMBER = 4;
    private int status_;
    /**
     * <code>optional int32 status = 4;</code>
     *
     * <pre>
     * 牌桌状态  
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 status = 4;</code>
     *
     * <pre>
     * 牌桌状态  
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // optional int32 deskid = 5;
    public static final int DESKID_FIELD_NUMBER = 5;
    private int deskid_;
    /**
     * <code>optional int32 deskid = 5;</code>
     */
    public boolean hasDeskid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 deskid = 5;</code>
     */
    public int getDeskid() {
      return deskid_;
    }

    private void initFields() {
      applyUin_ = 0;
      gameStatus_ = 0;
      remainTime_ = 0;
      status_ = 0;
      deskid_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, applyUin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, gameStatus_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, remainTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, deskid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, applyUin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gameStatus_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, remainTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, deskid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.ApplyDeleteEvt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.ApplyDeleteEvt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.ApplyDeleteEvt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.ApplyDeleteEvt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.ApplyDeleteEvt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.ApplyDeleteEvt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.ApplyDeleteEvt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.ApplyDeleteEvt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.ApplyDeleteEvt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.ApplyDeleteEvt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.ApplyDeleteEvt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ApplyDeleteEvt}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.ApplyDeleteEvtOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_ApplyDeleteEvt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_ApplyDeleteEvt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.ApplyDeleteEvt.class, Mahjong.ApplyDeleteEvt.Builder.class);
      }

      // Construct using Mahjong.ApplyDeleteEvt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        applyUin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        gameStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        remainTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        deskid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_ApplyDeleteEvt_descriptor;
      }

      public Mahjong.ApplyDeleteEvt getDefaultInstanceForType() {
        return Mahjong.ApplyDeleteEvt.getDefaultInstance();
      }

      public Mahjong.ApplyDeleteEvt build() {
        Mahjong.ApplyDeleteEvt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.ApplyDeleteEvt buildPartial() {
        Mahjong.ApplyDeleteEvt result = new Mahjong.ApplyDeleteEvt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.applyUin_ = applyUin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameStatus_ = gameStatus_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.remainTime_ = remainTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.deskid_ = deskid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.ApplyDeleteEvt) {
          return mergeFrom((Mahjong.ApplyDeleteEvt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.ApplyDeleteEvt other) {
        if (other == Mahjong.ApplyDeleteEvt.getDefaultInstance()) return this;
        if (other.hasApplyUin()) {
          setApplyUin(other.getApplyUin());
        }
        if (other.hasGameStatus()) {
          setGameStatus(other.getGameStatus());
        }
        if (other.hasRemainTime()) {
          setRemainTime(other.getRemainTime());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasDeskid()) {
          setDeskid(other.getDeskid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.ApplyDeleteEvt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.ApplyDeleteEvt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 apply_uin = 1;
      private int applyUin_ ;
      /**
       * <code>optional int32 apply_uin = 1;</code>
       *
       * <pre>
       *申请解散牌桌的人
       * </pre>
       */
      public boolean hasApplyUin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 apply_uin = 1;</code>
       *
       * <pre>
       *申请解散牌桌的人
       * </pre>
       */
      public int getApplyUin() {
        return applyUin_;
      }
      /**
       * <code>optional int32 apply_uin = 1;</code>
       *
       * <pre>
       *申请解散牌桌的人
       * </pre>
       */
      public Builder setApplyUin(int value) {
        bitField0_ |= 0x00000001;
        applyUin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 apply_uin = 1;</code>
       *
       * <pre>
       *申请解散牌桌的人
       * </pre>
       */
      public Builder clearApplyUin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        applyUin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_status = 2;
      private int gameStatus_ ;
      /**
       * <code>optional int32 game_status = 2;</code>
       *
       * <pre>
       *牌桌游戏状态，0 未开始，1 已开始
       * </pre>
       */
      public boolean hasGameStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 game_status = 2;</code>
       *
       * <pre>
       *牌桌游戏状态，0 未开始，1 已开始
       * </pre>
       */
      public int getGameStatus() {
        return gameStatus_;
      }
      /**
       * <code>optional int32 game_status = 2;</code>
       *
       * <pre>
       *牌桌游戏状态，0 未开始，1 已开始
       * </pre>
       */
      public Builder setGameStatus(int value) {
        bitField0_ |= 0x00000002;
        gameStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_status = 2;</code>
       *
       * <pre>
       *牌桌游戏状态，0 未开始，1 已开始
       * </pre>
       */
      public Builder clearGameStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gameStatus_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remain_time = 3;
      private int remainTime_ ;
      /**
       * <code>optional int32 remain_time = 3;</code>
       *
       * <pre>
       * 投票剩余时长             
       * </pre>
       */
      public boolean hasRemainTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 remain_time = 3;</code>
       *
       * <pre>
       * 投票剩余时长             
       * </pre>
       */
      public int getRemainTime() {
        return remainTime_;
      }
      /**
       * <code>optional int32 remain_time = 3;</code>
       *
       * <pre>
       * 投票剩余时长             
       * </pre>
       */
      public Builder setRemainTime(int value) {
        bitField0_ |= 0x00000004;
        remainTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remain_time = 3;</code>
       *
       * <pre>
       * 投票剩余时长             
       * </pre>
       */
      public Builder clearRemainTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        remainTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 status = 4;
      private int status_ ;
      /**
       * <code>optional int32 status = 4;</code>
       *
       * <pre>
       * 牌桌状态  
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 status = 4;</code>
       *
       * <pre>
       * 牌桌状态  
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 4;</code>
       *
       * <pre>
       * 牌桌状态  
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000008;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 4;</code>
       *
       * <pre>
       * 牌桌状态  
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional int32 deskid = 5;
      private int deskid_ ;
      /**
       * <code>optional int32 deskid = 5;</code>
       */
      public boolean hasDeskid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 deskid = 5;</code>
       */
      public int getDeskid() {
        return deskid_;
      }
      /**
       * <code>optional int32 deskid = 5;</code>
       */
      public Builder setDeskid(int value) {
        bitField0_ |= 0x00000010;
        deskid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 deskid = 5;</code>
       */
      public Builder clearDeskid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        deskid_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ApplyDeleteEvt)
    }

    static {
      defaultInstance = new ApplyDeleteEvt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ApplyDeleteEvt)
  }

  public interface UserOptionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 uin = 1;
    /**
     * <code>optional int32 uin = 1;</code>
     */
    boolean hasUin();
    /**
     * <code>optional int32 uin = 1;</code>
     */
    int getUin();

    // optional int32 type = 2;
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     * 1吃 2碰 3暗杠 4擦杠 5明杠 6出牌
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     * 1吃 2碰 3暗杠 4擦杠 5明杠 6出牌
     * </pre>
     */
    int getType();
  }
  /**
   * Protobuf type {@code UserOption}
   */
  public static final class UserOption extends
      com.google.protobuf.GeneratedMessage
      implements UserOptionOrBuilder {
    // Use UserOption.newBuilder() to construct.
    private UserOption(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UserOption(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UserOption defaultInstance;
    public static UserOption getDefaultInstance() {
      return defaultInstance;
    }

    public UserOption getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UserOption(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uin_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_UserOption_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_UserOption_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.UserOption.class, Mahjong.UserOption.Builder.class);
    }

    public static com.google.protobuf.Parser<UserOption> PARSER =
        new com.google.protobuf.AbstractParser<UserOption>() {
      public UserOption parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserOption(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserOption> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 uin = 1;
    public static final int UIN_FIELD_NUMBER = 1;
    private int uin_;
    /**
     * <code>optional int32 uin = 1;</code>
     */
    public boolean hasUin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 uin = 1;</code>
     */
    public int getUin() {
      return uin_;
    }

    // optional int32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     * 1吃 2碰 3暗杠 4擦杠 5明杠 6出牌
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     * 1吃 2碰 3暗杠 4擦杠 5明杠 6出牌
     * </pre>
     */
    public int getType() {
      return type_;
    }

    private void initFields() {
      uin_ = 0;
      type_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.UserOption parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.UserOption parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.UserOption parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.UserOption parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.UserOption parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.UserOption parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.UserOption parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.UserOption parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.UserOption parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.UserOption parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.UserOption prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code UserOption}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.UserOptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_UserOption_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_UserOption_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.UserOption.class, Mahjong.UserOption.Builder.class);
      }

      // Construct using Mahjong.UserOption.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_UserOption_descriptor;
      }

      public Mahjong.UserOption getDefaultInstanceForType() {
        return Mahjong.UserOption.getDefaultInstance();
      }

      public Mahjong.UserOption build() {
        Mahjong.UserOption result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.UserOption buildPartial() {
        Mahjong.UserOption result = new Mahjong.UserOption(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uin_ = uin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.UserOption) {
          return mergeFrom((Mahjong.UserOption)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.UserOption other) {
        if (other == Mahjong.UserOption.getDefaultInstance()) return this;
        if (other.hasUin()) {
          setUin(other.getUin());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.UserOption parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.UserOption) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 uin = 1;
      private int uin_ ;
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public boolean hasUin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public int getUin() {
        return uin_;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public Builder setUin(int value) {
        bitField0_ |= 0x00000001;
        uin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public Builder clearUin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 type = 2;
      private int type_ ;
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       * 1吃 2碰 3暗杠 4擦杠 5明杠 6出牌
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       * 1吃 2碰 3暗杠 4擦杠 5明杠 6出牌
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       * 1吃 2碰 3暗杠 4擦杠 5明杠 6出牌
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       * 1吃 2碰 3暗杠 4擦杠 5明杠 6出牌
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:UserOption)
    }

    static {
      defaultInstance = new UserOption(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:UserOption)
  }

  public interface GameInfoEvtOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 deskid = 1;
    /**
     * <code>optional int32 deskid = 1;</code>
     *
     * <pre>
     * desk id
     * </pre>
     */
    boolean hasDeskid();
    /**
     * <code>optional int32 deskid = 1;</code>
     *
     * <pre>
     * desk id
     * </pre>
     */
    int getDeskid();

    // optional int32 next_uin = 2;
    /**
     * <code>optional int32 next_uin = 2;</code>
     *
     * <pre>
     * 当前可进行操作的人
     * </pre>
     */
    boolean hasNextUin();
    /**
     * <code>optional int32 next_uin = 2;</code>
     *
     * <pre>
     * 当前可进行操作的人
     * </pre>
     */
    int getNextUin();

    // optional int32 max_round = 3;
    /**
     * <code>optional int32 max_round = 3;</code>
     *
     * <pre>
     * 桌子一共可以进行多少局牌
     * </pre>
     */
    boolean hasMaxRound();
    /**
     * <code>optional int32 max_round = 3;</code>
     *
     * <pre>
     * 桌子一共可以进行多少局牌
     * </pre>
     */
    int getMaxRound();

    // repeated int32 cards = 4 [packed = true];
    /**
     * <code>repeated int32 cards = 4 [packed = true];</code>
     *
     * <pre>
     * 手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 4 [packed = true];</code>
     *
     * <pre>
     * 手牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 4 [packed = true];</code>
     *
     * <pre>
     * 手牌
     * </pre>
     */
    int getCards(int index);

    // optional int32 dealer_seatid = 5;
    /**
     * <code>optional int32 dealer_seatid = 5;</code>
     *
     * <pre>
     * 庄家的座位号
     * </pre>
     */
    boolean hasDealerSeatid();
    /**
     * <code>optional int32 dealer_seatid = 5;</code>
     *
     * <pre>
     * 庄家的座位号
     * </pre>
     */
    int getDealerSeatid();

    // repeated .UserCommonCards users = 6;
    /**
     * <code>repeated .UserCommonCards users = 6;</code>
     */
    java.util.List<Mahjong.UserCommonCards> 
        getUsersList();
    /**
     * <code>repeated .UserCommonCards users = 6;</code>
     */
    Mahjong.UserCommonCards getUsers(int index);
    /**
     * <code>repeated .UserCommonCards users = 6;</code>
     */
    int getUsersCount();
    /**
     * <code>repeated .UserCommonCards users = 6;</code>
     */
    java.util.List<? extends Mahjong.UserCommonCardsOrBuilder> 
        getUsersOrBuilderList();
    /**
     * <code>repeated .UserCommonCards users = 6;</code>
     */
    Mahjong.UserCommonCardsOrBuilder getUsersOrBuilder(
        int index);

    // optional .UserOption op_user = 7;
    /**
     * <code>optional .UserOption op_user = 7;</code>
     *
     * <pre>
     * 用户做的操作
     * </pre>
     */
    boolean hasOpUser();
    /**
     * <code>optional .UserOption op_user = 7;</code>
     *
     * <pre>
     * 用户做的操作
     * </pre>
     */
    Mahjong.UserOption getOpUser();
    /**
     * <code>optional .UserOption op_user = 7;</code>
     *
     * <pre>
     * 用户做的操作
     * </pre>
     */
    Mahjong.UserOptionOrBuilder getOpUserOrBuilder();

    // optional int32 share_cards_len = 8;
    /**
     * <code>optional int32 share_cards_len = 8;</code>
     *
     * <pre>
     * 公共牌长度
     * </pre>
     */
    boolean hasShareCardsLen();
    /**
     * <code>optional int32 share_cards_len = 8;</code>
     *
     * <pre>
     * 公共牌长度
     * </pre>
     */
    int getShareCardsLen();

    // optional int32 game_round = 9;
    /**
     * <code>optional int32 game_round = 9;</code>
     *
     * <pre>
     * 一局牌内的第几轮
     * </pre>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 9;</code>
     *
     * <pre>
     * 一局牌内的第几轮
     * </pre>
     */
    int getGameRound();

    // optional .MyOption my_option = 10;
    /**
     * <code>optional .MyOption my_option = 10;</code>
     *
     * <pre>
     * 自己可以进行的操作
     * </pre>
     */
    boolean hasMyOption();
    /**
     * <code>optional .MyOption my_option = 10;</code>
     *
     * <pre>
     * 自己可以进行的操作
     * </pre>
     */
    Mahjong.MyOption getMyOption();
    /**
     * <code>optional .MyOption my_option = 10;</code>
     *
     * <pre>
     * 自己可以进行的操作
     * </pre>
     */
    Mahjong.MyOptionOrBuilder getMyOptionOrBuilder();

    // optional int32 status = 11;
    /**
     * <code>optional int32 status = 11;</code>
     *
     * <pre>
     * 这里是桌子的状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 11;</code>
     *
     * <pre>
     * 这里是桌子的状态
     * </pre>
     */
    int getStatus();

    // optional int32 recv_card_uin = 12;
    /**
     * <code>optional int32 recv_card_uin = 12;</code>
     *
     * <pre>
     * 桌子里面谁叫了牌
     * </pre>
     */
    boolean hasRecvCardUin();
    /**
     * <code>optional int32 recv_card_uin = 12;</code>
     *
     * <pre>
     * 桌子里面谁叫了牌
     * </pre>
     */
    int getRecvCardUin();

    // optional int32 desk_remain_round = 13;
    /**
     * <code>optional int32 desk_remain_round = 13;</code>
     *
     * <pre>
     * 牌桌剩余局数
     * </pre>
     */
    boolean hasDeskRemainRound();
    /**
     * <code>optional int32 desk_remain_round = 13;</code>
     *
     * <pre>
     * 牌桌剩余局数
     * </pre>
     */
    int getDeskRemainRound();

    // optional int32 seat_num = 14;
    /**
     * <code>optional int32 seat_num = 14;</code>
     *
     * <pre>
     * 这是几人桌
     * </pre>
     */
    boolean hasSeatNum();
    /**
     * <code>optional int32 seat_num = 14;</code>
     *
     * <pre>
     * 这是几人桌
     * </pre>
     */
    int getSeatNum();
  }
  /**
   * Protobuf type {@code GameInfoEvt}
   *
   * <pre>
   *服务器关于牌局内每次信息变化广播 7011
   * </pre>
   */
  public static final class GameInfoEvt extends
      com.google.protobuf.GeneratedMessage
      implements GameInfoEvtOrBuilder {
    // Use GameInfoEvt.newBuilder() to construct.
    private GameInfoEvt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameInfoEvt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameInfoEvt defaultInstance;
    public static GameInfoEvt getDefaultInstance() {
      return defaultInstance;
    }

    public GameInfoEvt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameInfoEvt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              deskid_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nextUin_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              maxRound_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              dealerSeatid_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                users_ = new java.util.ArrayList<Mahjong.UserCommonCards>();
                mutable_bitField0_ |= 0x00000020;
              }
              users_.add(input.readMessage(Mahjong.UserCommonCards.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              Mahjong.UserOption.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = opUser_.toBuilder();
              }
              opUser_ = input.readMessage(Mahjong.UserOption.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(opUser_);
                opUser_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              shareCardsLen_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              gameRound_ = input.readInt32();
              break;
            }
            case 82: {
              Mahjong.MyOption.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = myOption_.toBuilder();
              }
              myOption_ = input.readMessage(Mahjong.MyOption.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(myOption_);
                myOption_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              status_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              recvCardUin_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000400;
              deskRemainRound_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000800;
              seatNum_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          users_ = java.util.Collections.unmodifiableList(users_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameInfoEvt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameInfoEvt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameInfoEvt.class, Mahjong.GameInfoEvt.Builder.class);
    }

    public static com.google.protobuf.Parser<GameInfoEvt> PARSER =
        new com.google.protobuf.AbstractParser<GameInfoEvt>() {
      public GameInfoEvt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameInfoEvt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameInfoEvt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 deskid = 1;
    public static final int DESKID_FIELD_NUMBER = 1;
    private int deskid_;
    /**
     * <code>optional int32 deskid = 1;</code>
     *
     * <pre>
     * desk id
     * </pre>
     */
    public boolean hasDeskid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 deskid = 1;</code>
     *
     * <pre>
     * desk id
     * </pre>
     */
    public int getDeskid() {
      return deskid_;
    }

    // optional int32 next_uin = 2;
    public static final int NEXT_UIN_FIELD_NUMBER = 2;
    private int nextUin_;
    /**
     * <code>optional int32 next_uin = 2;</code>
     *
     * <pre>
     * 当前可进行操作的人
     * </pre>
     */
    public boolean hasNextUin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 next_uin = 2;</code>
     *
     * <pre>
     * 当前可进行操作的人
     * </pre>
     */
    public int getNextUin() {
      return nextUin_;
    }

    // optional int32 max_round = 3;
    public static final int MAX_ROUND_FIELD_NUMBER = 3;
    private int maxRound_;
    /**
     * <code>optional int32 max_round = 3;</code>
     *
     * <pre>
     * 桌子一共可以进行多少局牌
     * </pre>
     */
    public boolean hasMaxRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 max_round = 3;</code>
     *
     * <pre>
     * 桌子一共可以进行多少局牌
     * </pre>
     */
    public int getMaxRound() {
      return maxRound_;
    }

    // repeated int32 cards = 4 [packed = true];
    public static final int CARDS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 4 [packed = true];</code>
     *
     * <pre>
     * 手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 4 [packed = true];</code>
     *
     * <pre>
     * 手牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 4 [packed = true];</code>
     *
     * <pre>
     * 手牌
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }
    private int cardsMemoizedSerializedSize = -1;

    // optional int32 dealer_seatid = 5;
    public static final int DEALER_SEATID_FIELD_NUMBER = 5;
    private int dealerSeatid_;
    /**
     * <code>optional int32 dealer_seatid = 5;</code>
     *
     * <pre>
     * 庄家的座位号
     * </pre>
     */
    public boolean hasDealerSeatid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 dealer_seatid = 5;</code>
     *
     * <pre>
     * 庄家的座位号
     * </pre>
     */
    public int getDealerSeatid() {
      return dealerSeatid_;
    }

    // repeated .UserCommonCards users = 6;
    public static final int USERS_FIELD_NUMBER = 6;
    private java.util.List<Mahjong.UserCommonCards> users_;
    /**
     * <code>repeated .UserCommonCards users = 6;</code>
     */
    public java.util.List<Mahjong.UserCommonCards> getUsersList() {
      return users_;
    }
    /**
     * <code>repeated .UserCommonCards users = 6;</code>
     */
    public java.util.List<? extends Mahjong.UserCommonCardsOrBuilder> 
        getUsersOrBuilderList() {
      return users_;
    }
    /**
     * <code>repeated .UserCommonCards users = 6;</code>
     */
    public int getUsersCount() {
      return users_.size();
    }
    /**
     * <code>repeated .UserCommonCards users = 6;</code>
     */
    public Mahjong.UserCommonCards getUsers(int index) {
      return users_.get(index);
    }
    /**
     * <code>repeated .UserCommonCards users = 6;</code>
     */
    public Mahjong.UserCommonCardsOrBuilder getUsersOrBuilder(
        int index) {
      return users_.get(index);
    }

    // optional .UserOption op_user = 7;
    public static final int OP_USER_FIELD_NUMBER = 7;
    private Mahjong.UserOption opUser_;
    /**
     * <code>optional .UserOption op_user = 7;</code>
     *
     * <pre>
     * 用户做的操作
     * </pre>
     */
    public boolean hasOpUser() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .UserOption op_user = 7;</code>
     *
     * <pre>
     * 用户做的操作
     * </pre>
     */
    public Mahjong.UserOption getOpUser() {
      return opUser_;
    }
    /**
     * <code>optional .UserOption op_user = 7;</code>
     *
     * <pre>
     * 用户做的操作
     * </pre>
     */
    public Mahjong.UserOptionOrBuilder getOpUserOrBuilder() {
      return opUser_;
    }

    // optional int32 share_cards_len = 8;
    public static final int SHARE_CARDS_LEN_FIELD_NUMBER = 8;
    private int shareCardsLen_;
    /**
     * <code>optional int32 share_cards_len = 8;</code>
     *
     * <pre>
     * 公共牌长度
     * </pre>
     */
    public boolean hasShareCardsLen() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 share_cards_len = 8;</code>
     *
     * <pre>
     * 公共牌长度
     * </pre>
     */
    public int getShareCardsLen() {
      return shareCardsLen_;
    }

    // optional int32 game_round = 9;
    public static final int GAME_ROUND_FIELD_NUMBER = 9;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 9;</code>
     *
     * <pre>
     * 一局牌内的第几轮
     * </pre>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 game_round = 9;</code>
     *
     * <pre>
     * 一局牌内的第几轮
     * </pre>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // optional .MyOption my_option = 10;
    public static final int MY_OPTION_FIELD_NUMBER = 10;
    private Mahjong.MyOption myOption_;
    /**
     * <code>optional .MyOption my_option = 10;</code>
     *
     * <pre>
     * 自己可以进行的操作
     * </pre>
     */
    public boolean hasMyOption() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .MyOption my_option = 10;</code>
     *
     * <pre>
     * 自己可以进行的操作
     * </pre>
     */
    public Mahjong.MyOption getMyOption() {
      return myOption_;
    }
    /**
     * <code>optional .MyOption my_option = 10;</code>
     *
     * <pre>
     * 自己可以进行的操作
     * </pre>
     */
    public Mahjong.MyOptionOrBuilder getMyOptionOrBuilder() {
      return myOption_;
    }

    // optional int32 status = 11;
    public static final int STATUS_FIELD_NUMBER = 11;
    private int status_;
    /**
     * <code>optional int32 status = 11;</code>
     *
     * <pre>
     * 这里是桌子的状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 status = 11;</code>
     *
     * <pre>
     * 这里是桌子的状态
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // optional int32 recv_card_uin = 12;
    public static final int RECV_CARD_UIN_FIELD_NUMBER = 12;
    private int recvCardUin_;
    /**
     * <code>optional int32 recv_card_uin = 12;</code>
     *
     * <pre>
     * 桌子里面谁叫了牌
     * </pre>
     */
    public boolean hasRecvCardUin() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 recv_card_uin = 12;</code>
     *
     * <pre>
     * 桌子里面谁叫了牌
     * </pre>
     */
    public int getRecvCardUin() {
      return recvCardUin_;
    }

    // optional int32 desk_remain_round = 13;
    public static final int DESK_REMAIN_ROUND_FIELD_NUMBER = 13;
    private int deskRemainRound_;
    /**
     * <code>optional int32 desk_remain_round = 13;</code>
     *
     * <pre>
     * 牌桌剩余局数
     * </pre>
     */
    public boolean hasDeskRemainRound() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 desk_remain_round = 13;</code>
     *
     * <pre>
     * 牌桌剩余局数
     * </pre>
     */
    public int getDeskRemainRound() {
      return deskRemainRound_;
    }

    // optional int32 seat_num = 14;
    public static final int SEAT_NUM_FIELD_NUMBER = 14;
    private int seatNum_;
    /**
     * <code>optional int32 seat_num = 14;</code>
     *
     * <pre>
     * 这是几人桌
     * </pre>
     */
    public boolean hasSeatNum() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 seat_num = 14;</code>
     *
     * <pre>
     * 这是几人桌
     * </pre>
     */
    public int getSeatNum() {
      return seatNum_;
    }

    private void initFields() {
      deskid_ = 0;
      nextUin_ = 0;
      maxRound_ = 0;
      cards_ = java.util.Collections.emptyList();
      dealerSeatid_ = 0;
      users_ = java.util.Collections.emptyList();
      opUser_ = Mahjong.UserOption.getDefaultInstance();
      shareCardsLen_ = 0;
      gameRound_ = 0;
      myOption_ = Mahjong.MyOption.getDefaultInstance();
      status_ = 0;
      recvCardUin_ = 0;
      deskRemainRound_ = 0;
      seatNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, deskid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, nextUin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, maxRound_);
      }
      if (getCardsList().size() > 0) {
        output.writeRawVarint32(34);
        output.writeRawVarint32(cardsMemoizedSerializedSize);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32NoTag(cards_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, dealerSeatid_);
      }
      for (int i = 0; i < users_.size(); i++) {
        output.writeMessage(6, users_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(7, opUser_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, shareCardsLen_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, gameRound_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(10, myOption_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(11, status_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(12, recvCardUin_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(13, deskRemainRound_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(14, seatNum_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, deskid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, nextUin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, maxRound_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        if (!getCardsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        cardsMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, dealerSeatid_);
      }
      for (int i = 0; i < users_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, users_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, opUser_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, shareCardsLen_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, gameRound_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, myOption_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, status_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, recvCardUin_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, deskRemainRound_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, seatNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameInfoEvt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameInfoEvt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameInfoEvt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameInfoEvt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameInfoEvt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameInfoEvt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameInfoEvt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameInfoEvt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameInfoEvt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameInfoEvt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameInfoEvt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameInfoEvt}
     *
     * <pre>
     *服务器关于牌局内每次信息变化广播 7011
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameInfoEvtOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameInfoEvt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameInfoEvt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameInfoEvt.class, Mahjong.GameInfoEvt.Builder.class);
      }

      // Construct using Mahjong.GameInfoEvt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getUsersFieldBuilder();
          getOpUserFieldBuilder();
          getMyOptionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deskid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nextUin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        dealerSeatid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (usersBuilder_ == null) {
          users_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          usersBuilder_.clear();
        }
        if (opUserBuilder_ == null) {
          opUser_ = Mahjong.UserOption.getDefaultInstance();
        } else {
          opUserBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        shareCardsLen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (myOptionBuilder_ == null) {
          myOption_ = Mahjong.MyOption.getDefaultInstance();
        } else {
          myOptionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        recvCardUin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        deskRemainRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        seatNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameInfoEvt_descriptor;
      }

      public Mahjong.GameInfoEvt getDefaultInstanceForType() {
        return Mahjong.GameInfoEvt.getDefaultInstance();
      }

      public Mahjong.GameInfoEvt build() {
        Mahjong.GameInfoEvt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameInfoEvt buildPartial() {
        Mahjong.GameInfoEvt result = new Mahjong.GameInfoEvt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deskid_ = deskid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nextUin_ = nextUin_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxRound_ = maxRound_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dealerSeatid_ = dealerSeatid_;
        if (usersBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            users_ = java.util.Collections.unmodifiableList(users_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.users_ = users_;
        } else {
          result.users_ = usersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        if (opUserBuilder_ == null) {
          result.opUser_ = opUser_;
        } else {
          result.opUser_ = opUserBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.shareCardsLen_ = shareCardsLen_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.gameRound_ = gameRound_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        if (myOptionBuilder_ == null) {
          result.myOption_ = myOption_;
        } else {
          result.myOption_ = myOptionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.recvCardUin_ = recvCardUin_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.deskRemainRound_ = deskRemainRound_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.seatNum_ = seatNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameInfoEvt) {
          return mergeFrom((Mahjong.GameInfoEvt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameInfoEvt other) {
        if (other == Mahjong.GameInfoEvt.getDefaultInstance()) return this;
        if (other.hasDeskid()) {
          setDeskid(other.getDeskid());
        }
        if (other.hasNextUin()) {
          setNextUin(other.getNextUin());
        }
        if (other.hasMaxRound()) {
          setMaxRound(other.getMaxRound());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasDealerSeatid()) {
          setDealerSeatid(other.getDealerSeatid());
        }
        if (usersBuilder_ == null) {
          if (!other.users_.isEmpty()) {
            if (users_.isEmpty()) {
              users_ = other.users_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureUsersIsMutable();
              users_.addAll(other.users_);
            }
            onChanged();
          }
        } else {
          if (!other.users_.isEmpty()) {
            if (usersBuilder_.isEmpty()) {
              usersBuilder_.dispose();
              usersBuilder_ = null;
              users_ = other.users_;
              bitField0_ = (bitField0_ & ~0x00000020);
              usersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getUsersFieldBuilder() : null;
            } else {
              usersBuilder_.addAllMessages(other.users_);
            }
          }
        }
        if (other.hasOpUser()) {
          mergeOpUser(other.getOpUser());
        }
        if (other.hasShareCardsLen()) {
          setShareCardsLen(other.getShareCardsLen());
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (other.hasMyOption()) {
          mergeMyOption(other.getMyOption());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRecvCardUin()) {
          setRecvCardUin(other.getRecvCardUin());
        }
        if (other.hasDeskRemainRound()) {
          setDeskRemainRound(other.getDeskRemainRound());
        }
        if (other.hasSeatNum()) {
          setSeatNum(other.getSeatNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameInfoEvt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameInfoEvt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 deskid = 1;
      private int deskid_ ;
      /**
       * <code>optional int32 deskid = 1;</code>
       *
       * <pre>
       * desk id
       * </pre>
       */
      public boolean hasDeskid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 deskid = 1;</code>
       *
       * <pre>
       * desk id
       * </pre>
       */
      public int getDeskid() {
        return deskid_;
      }
      /**
       * <code>optional int32 deskid = 1;</code>
       *
       * <pre>
       * desk id
       * </pre>
       */
      public Builder setDeskid(int value) {
        bitField0_ |= 0x00000001;
        deskid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 deskid = 1;</code>
       *
       * <pre>
       * desk id
       * </pre>
       */
      public Builder clearDeskid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deskid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 next_uin = 2;
      private int nextUin_ ;
      /**
       * <code>optional int32 next_uin = 2;</code>
       *
       * <pre>
       * 当前可进行操作的人
       * </pre>
       */
      public boolean hasNextUin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 next_uin = 2;</code>
       *
       * <pre>
       * 当前可进行操作的人
       * </pre>
       */
      public int getNextUin() {
        return nextUin_;
      }
      /**
       * <code>optional int32 next_uin = 2;</code>
       *
       * <pre>
       * 当前可进行操作的人
       * </pre>
       */
      public Builder setNextUin(int value) {
        bitField0_ |= 0x00000002;
        nextUin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 next_uin = 2;</code>
       *
       * <pre>
       * 当前可进行操作的人
       * </pre>
       */
      public Builder clearNextUin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nextUin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 max_round = 3;
      private int maxRound_ ;
      /**
       * <code>optional int32 max_round = 3;</code>
       *
       * <pre>
       * 桌子一共可以进行多少局牌
       * </pre>
       */
      public boolean hasMaxRound() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 max_round = 3;</code>
       *
       * <pre>
       * 桌子一共可以进行多少局牌
       * </pre>
       */
      public int getMaxRound() {
        return maxRound_;
      }
      /**
       * <code>optional int32 max_round = 3;</code>
       *
       * <pre>
       * 桌子一共可以进行多少局牌
       * </pre>
       */
      public Builder setMaxRound(int value) {
        bitField0_ |= 0x00000004;
        maxRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_round = 3;</code>
       *
       * <pre>
       * 桌子一共可以进行多少局牌
       * </pre>
       */
      public Builder clearMaxRound() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxRound_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 4 [packed = true];
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 cards = 4 [packed = true];</code>
       *
       * <pre>
       * 手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 4 [packed = true];</code>
       *
       * <pre>
       * 手牌
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 4 [packed = true];</code>
       *
       * <pre>
       * 手牌
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 4 [packed = true];</code>
       *
       * <pre>
       * 手牌
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 4 [packed = true];</code>
       *
       * <pre>
       * 手牌
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 4 [packed = true];</code>
       *
       * <pre>
       * 手牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 4 [packed = true];</code>
       *
       * <pre>
       * 手牌
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional int32 dealer_seatid = 5;
      private int dealerSeatid_ ;
      /**
       * <code>optional int32 dealer_seatid = 5;</code>
       *
       * <pre>
       * 庄家的座位号
       * </pre>
       */
      public boolean hasDealerSeatid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 dealer_seatid = 5;</code>
       *
       * <pre>
       * 庄家的座位号
       * </pre>
       */
      public int getDealerSeatid() {
        return dealerSeatid_;
      }
      /**
       * <code>optional int32 dealer_seatid = 5;</code>
       *
       * <pre>
       * 庄家的座位号
       * </pre>
       */
      public Builder setDealerSeatid(int value) {
        bitField0_ |= 0x00000010;
        dealerSeatid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dealer_seatid = 5;</code>
       *
       * <pre>
       * 庄家的座位号
       * </pre>
       */
      public Builder clearDealerSeatid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dealerSeatid_ = 0;
        onChanged();
        return this;
      }

      // repeated .UserCommonCards users = 6;
      private java.util.List<Mahjong.UserCommonCards> users_ =
        java.util.Collections.emptyList();
      private void ensureUsersIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          users_ = new java.util.ArrayList<Mahjong.UserCommonCards>(users_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.UserCommonCards, Mahjong.UserCommonCards.Builder, Mahjong.UserCommonCardsOrBuilder> usersBuilder_;

      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public java.util.List<Mahjong.UserCommonCards> getUsersList() {
        if (usersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(users_);
        } else {
          return usersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public int getUsersCount() {
        if (usersBuilder_ == null) {
          return users_.size();
        } else {
          return usersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public Mahjong.UserCommonCards getUsers(int index) {
        if (usersBuilder_ == null) {
          return users_.get(index);
        } else {
          return usersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public Builder setUsers(
          int index, Mahjong.UserCommonCards value) {
        if (usersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsersIsMutable();
          users_.set(index, value);
          onChanged();
        } else {
          usersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public Builder setUsers(
          int index, Mahjong.UserCommonCards.Builder builderForValue) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.set(index, builderForValue.build());
          onChanged();
        } else {
          usersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public Builder addUsers(Mahjong.UserCommonCards value) {
        if (usersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsersIsMutable();
          users_.add(value);
          onChanged();
        } else {
          usersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public Builder addUsers(
          int index, Mahjong.UserCommonCards value) {
        if (usersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsersIsMutable();
          users_.add(index, value);
          onChanged();
        } else {
          usersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public Builder addUsers(
          Mahjong.UserCommonCards.Builder builderForValue) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.add(builderForValue.build());
          onChanged();
        } else {
          usersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public Builder addUsers(
          int index, Mahjong.UserCommonCards.Builder builderForValue) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.add(index, builderForValue.build());
          onChanged();
        } else {
          usersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public Builder addAllUsers(
          java.lang.Iterable<? extends Mahjong.UserCommonCards> values) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          super.addAll(values, users_);
          onChanged();
        } else {
          usersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public Builder clearUsers() {
        if (usersBuilder_ == null) {
          users_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          usersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public Builder removeUsers(int index) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.remove(index);
          onChanged();
        } else {
          usersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public Mahjong.UserCommonCards.Builder getUsersBuilder(
          int index) {
        return getUsersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public Mahjong.UserCommonCardsOrBuilder getUsersOrBuilder(
          int index) {
        if (usersBuilder_ == null) {
          return users_.get(index);  } else {
          return usersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public java.util.List<? extends Mahjong.UserCommonCardsOrBuilder> 
           getUsersOrBuilderList() {
        if (usersBuilder_ != null) {
          return usersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(users_);
        }
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public Mahjong.UserCommonCards.Builder addUsersBuilder() {
        return getUsersFieldBuilder().addBuilder(
            Mahjong.UserCommonCards.getDefaultInstance());
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public Mahjong.UserCommonCards.Builder addUsersBuilder(
          int index) {
        return getUsersFieldBuilder().addBuilder(
            index, Mahjong.UserCommonCards.getDefaultInstance());
      }
      /**
       * <code>repeated .UserCommonCards users = 6;</code>
       */
      public java.util.List<Mahjong.UserCommonCards.Builder> 
           getUsersBuilderList() {
        return getUsersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.UserCommonCards, Mahjong.UserCommonCards.Builder, Mahjong.UserCommonCardsOrBuilder> 
          getUsersFieldBuilder() {
        if (usersBuilder_ == null) {
          usersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Mahjong.UserCommonCards, Mahjong.UserCommonCards.Builder, Mahjong.UserCommonCardsOrBuilder>(
                  users_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          users_ = null;
        }
        return usersBuilder_;
      }

      // optional .UserOption op_user = 7;
      private Mahjong.UserOption opUser_ = Mahjong.UserOption.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.UserOption, Mahjong.UserOption.Builder, Mahjong.UserOptionOrBuilder> opUserBuilder_;
      /**
       * <code>optional .UserOption op_user = 7;</code>
       *
       * <pre>
       * 用户做的操作
       * </pre>
       */
      public boolean hasOpUser() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .UserOption op_user = 7;</code>
       *
       * <pre>
       * 用户做的操作
       * </pre>
       */
      public Mahjong.UserOption getOpUser() {
        if (opUserBuilder_ == null) {
          return opUser_;
        } else {
          return opUserBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .UserOption op_user = 7;</code>
       *
       * <pre>
       * 用户做的操作
       * </pre>
       */
      public Builder setOpUser(Mahjong.UserOption value) {
        if (opUserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          opUser_ = value;
          onChanged();
        } else {
          opUserBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .UserOption op_user = 7;</code>
       *
       * <pre>
       * 用户做的操作
       * </pre>
       */
      public Builder setOpUser(
          Mahjong.UserOption.Builder builderForValue) {
        if (opUserBuilder_ == null) {
          opUser_ = builderForValue.build();
          onChanged();
        } else {
          opUserBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .UserOption op_user = 7;</code>
       *
       * <pre>
       * 用户做的操作
       * </pre>
       */
      public Builder mergeOpUser(Mahjong.UserOption value) {
        if (opUserBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              opUser_ != Mahjong.UserOption.getDefaultInstance()) {
            opUser_ =
              Mahjong.UserOption.newBuilder(opUser_).mergeFrom(value).buildPartial();
          } else {
            opUser_ = value;
          }
          onChanged();
        } else {
          opUserBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .UserOption op_user = 7;</code>
       *
       * <pre>
       * 用户做的操作
       * </pre>
       */
      public Builder clearOpUser() {
        if (opUserBuilder_ == null) {
          opUser_ = Mahjong.UserOption.getDefaultInstance();
          onChanged();
        } else {
          opUserBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .UserOption op_user = 7;</code>
       *
       * <pre>
       * 用户做的操作
       * </pre>
       */
      public Mahjong.UserOption.Builder getOpUserBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getOpUserFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .UserOption op_user = 7;</code>
       *
       * <pre>
       * 用户做的操作
       * </pre>
       */
      public Mahjong.UserOptionOrBuilder getOpUserOrBuilder() {
        if (opUserBuilder_ != null) {
          return opUserBuilder_.getMessageOrBuilder();
        } else {
          return opUser_;
        }
      }
      /**
       * <code>optional .UserOption op_user = 7;</code>
       *
       * <pre>
       * 用户做的操作
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.UserOption, Mahjong.UserOption.Builder, Mahjong.UserOptionOrBuilder> 
          getOpUserFieldBuilder() {
        if (opUserBuilder_ == null) {
          opUserBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Mahjong.UserOption, Mahjong.UserOption.Builder, Mahjong.UserOptionOrBuilder>(
                  opUser_,
                  getParentForChildren(),
                  isClean());
          opUser_ = null;
        }
        return opUserBuilder_;
      }

      // optional int32 share_cards_len = 8;
      private int shareCardsLen_ ;
      /**
       * <code>optional int32 share_cards_len = 8;</code>
       *
       * <pre>
       * 公共牌长度
       * </pre>
       */
      public boolean hasShareCardsLen() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 share_cards_len = 8;</code>
       *
       * <pre>
       * 公共牌长度
       * </pre>
       */
      public int getShareCardsLen() {
        return shareCardsLen_;
      }
      /**
       * <code>optional int32 share_cards_len = 8;</code>
       *
       * <pre>
       * 公共牌长度
       * </pre>
       */
      public Builder setShareCardsLen(int value) {
        bitField0_ |= 0x00000080;
        shareCardsLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 share_cards_len = 8;</code>
       *
       * <pre>
       * 公共牌长度
       * </pre>
       */
      public Builder clearShareCardsLen() {
        bitField0_ = (bitField0_ & ~0x00000080);
        shareCardsLen_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_round = 9;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 9;</code>
       *
       * <pre>
       * 一局牌内的第几轮
       * </pre>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 game_round = 9;</code>
       *
       * <pre>
       * 一局牌内的第几轮
       * </pre>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 9;</code>
       *
       * <pre>
       * 一局牌内的第几轮
       * </pre>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000100;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 9;</code>
       *
       * <pre>
       * 一局牌内的第几轮
       * </pre>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000100);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // optional .MyOption my_option = 10;
      private Mahjong.MyOption myOption_ = Mahjong.MyOption.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.MyOption, Mahjong.MyOption.Builder, Mahjong.MyOptionOrBuilder> myOptionBuilder_;
      /**
       * <code>optional .MyOption my_option = 10;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public boolean hasMyOption() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .MyOption my_option = 10;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public Mahjong.MyOption getMyOption() {
        if (myOptionBuilder_ == null) {
          return myOption_;
        } else {
          return myOptionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .MyOption my_option = 10;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public Builder setMyOption(Mahjong.MyOption value) {
        if (myOptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          myOption_ = value;
          onChanged();
        } else {
          myOptionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .MyOption my_option = 10;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public Builder setMyOption(
          Mahjong.MyOption.Builder builderForValue) {
        if (myOptionBuilder_ == null) {
          myOption_ = builderForValue.build();
          onChanged();
        } else {
          myOptionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .MyOption my_option = 10;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public Builder mergeMyOption(Mahjong.MyOption value) {
        if (myOptionBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              myOption_ != Mahjong.MyOption.getDefaultInstance()) {
            myOption_ =
              Mahjong.MyOption.newBuilder(myOption_).mergeFrom(value).buildPartial();
          } else {
            myOption_ = value;
          }
          onChanged();
        } else {
          myOptionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .MyOption my_option = 10;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public Builder clearMyOption() {
        if (myOptionBuilder_ == null) {
          myOption_ = Mahjong.MyOption.getDefaultInstance();
          onChanged();
        } else {
          myOptionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .MyOption my_option = 10;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public Mahjong.MyOption.Builder getMyOptionBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getMyOptionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .MyOption my_option = 10;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      public Mahjong.MyOptionOrBuilder getMyOptionOrBuilder() {
        if (myOptionBuilder_ != null) {
          return myOptionBuilder_.getMessageOrBuilder();
        } else {
          return myOption_;
        }
      }
      /**
       * <code>optional .MyOption my_option = 10;</code>
       *
       * <pre>
       * 自己可以进行的操作
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.MyOption, Mahjong.MyOption.Builder, Mahjong.MyOptionOrBuilder> 
          getMyOptionFieldBuilder() {
        if (myOptionBuilder_ == null) {
          myOptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Mahjong.MyOption, Mahjong.MyOption.Builder, Mahjong.MyOptionOrBuilder>(
                  myOption_,
                  getParentForChildren(),
                  isClean());
          myOption_ = null;
        }
        return myOptionBuilder_;
      }

      // optional int32 status = 11;
      private int status_ ;
      /**
       * <code>optional int32 status = 11;</code>
       *
       * <pre>
       * 这里是桌子的状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 status = 11;</code>
       *
       * <pre>
       * 这里是桌子的状态
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 11;</code>
       *
       * <pre>
       * 这里是桌子的状态
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000400;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 11;</code>
       *
       * <pre>
       * 这里是桌子的状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000400);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional int32 recv_card_uin = 12;
      private int recvCardUin_ ;
      /**
       * <code>optional int32 recv_card_uin = 12;</code>
       *
       * <pre>
       * 桌子里面谁叫了牌
       * </pre>
       */
      public boolean hasRecvCardUin() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 recv_card_uin = 12;</code>
       *
       * <pre>
       * 桌子里面谁叫了牌
       * </pre>
       */
      public int getRecvCardUin() {
        return recvCardUin_;
      }
      /**
       * <code>optional int32 recv_card_uin = 12;</code>
       *
       * <pre>
       * 桌子里面谁叫了牌
       * </pre>
       */
      public Builder setRecvCardUin(int value) {
        bitField0_ |= 0x00000800;
        recvCardUin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 recv_card_uin = 12;</code>
       *
       * <pre>
       * 桌子里面谁叫了牌
       * </pre>
       */
      public Builder clearRecvCardUin() {
        bitField0_ = (bitField0_ & ~0x00000800);
        recvCardUin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 desk_remain_round = 13;
      private int deskRemainRound_ ;
      /**
       * <code>optional int32 desk_remain_round = 13;</code>
       *
       * <pre>
       * 牌桌剩余局数
       * </pre>
       */
      public boolean hasDeskRemainRound() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 desk_remain_round = 13;</code>
       *
       * <pre>
       * 牌桌剩余局数
       * </pre>
       */
      public int getDeskRemainRound() {
        return deskRemainRound_;
      }
      /**
       * <code>optional int32 desk_remain_round = 13;</code>
       *
       * <pre>
       * 牌桌剩余局数
       * </pre>
       */
      public Builder setDeskRemainRound(int value) {
        bitField0_ |= 0x00001000;
        deskRemainRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 desk_remain_round = 13;</code>
       *
       * <pre>
       * 牌桌剩余局数
       * </pre>
       */
      public Builder clearDeskRemainRound() {
        bitField0_ = (bitField0_ & ~0x00001000);
        deskRemainRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat_num = 14;
      private int seatNum_ ;
      /**
       * <code>optional int32 seat_num = 14;</code>
       *
       * <pre>
       * 这是几人桌
       * </pre>
       */
      public boolean hasSeatNum() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 seat_num = 14;</code>
       *
       * <pre>
       * 这是几人桌
       * </pre>
       */
      public int getSeatNum() {
        return seatNum_;
      }
      /**
       * <code>optional int32 seat_num = 14;</code>
       *
       * <pre>
       * 这是几人桌
       * </pre>
       */
      public Builder setSeatNum(int value) {
        bitField0_ |= 0x00002000;
        seatNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_num = 14;</code>
       *
       * <pre>
       * 这是几人桌
       * </pre>
       */
      public Builder clearSeatNum() {
        bitField0_ = (bitField0_ & ~0x00002000);
        seatNum_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameInfoEvt)
    }

    static {
      defaultInstance = new GameInfoEvt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameInfoEvt)
  }

  public interface GameOverResultInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 uin = 1;
    /**
     * <code>optional int32 uin = 1;</code>
     */
    boolean hasUin();
    /**
     * <code>optional int32 uin = 1;</code>
     */
    int getUin();

    // optional int64 chips = 2;
    /**
     * <code>optional int64 chips = 2;</code>
     */
    boolean hasChips();
    /**
     * <code>optional int64 chips = 2;</code>
     */
    long getChips();

    // optional int32 round_chi_num = 3;
    /**
     * <code>optional int32 round_chi_num = 3;</code>
     */
    boolean hasRoundChiNum();
    /**
     * <code>optional int32 round_chi_num = 3;</code>
     */
    int getRoundChiNum();

    // optional int32 round_peng_num = 4;
    /**
     * <code>optional int32 round_peng_num = 4;</code>
     */
    boolean hasRoundPengNum();
    /**
     * <code>optional int32 round_peng_num = 4;</code>
     */
    int getRoundPengNum();

    // repeated int32 round_gang_list = 5;
    /**
     * <code>repeated int32 round_gang_list = 5;</code>
     *
     * <pre>
     * 1暗杠 2擦杠 3明杠
     * </pre>
     */
    java.util.List<java.lang.Integer> getRoundGangListList();
    /**
     * <code>repeated int32 round_gang_list = 5;</code>
     *
     * <pre>
     * 1暗杠 2擦杠 3明杠
     * </pre>
     */
    int getRoundGangListCount();
    /**
     * <code>repeated int32 round_gang_list = 5;</code>
     *
     * <pre>
     * 1暗杠 2擦杠 3明杠
     * </pre>
     */
    int getRoundGangList(int index);

    // repeated int32 round_hu_list = 6;
    /**
     * <code>repeated int32 round_hu_list = 6;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getRoundHuListList();
    /**
     * <code>repeated int32 round_hu_list = 6;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    int getRoundHuListCount();
    /**
     * <code>repeated int32 round_hu_list = 6;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    int getRoundHuList(int index);

    // repeated int32 round_win_list = 7;
    /**
     * <code>repeated int32 round_win_list = 7;</code>
     *
     * <pre>
     * 1自摸 2接炮 3放炮
     * </pre>
     */
    java.util.List<java.lang.Integer> getRoundWinListList();
    /**
     * <code>repeated int32 round_win_list = 7;</code>
     *
     * <pre>
     * 1自摸 2接炮 3放炮
     * </pre>
     */
    int getRoundWinListCount();
    /**
     * <code>repeated int32 round_win_list = 7;</code>
     *
     * <pre>
     * 1自摸 2接炮 3放炮
     * </pre>
     */
    int getRoundWinList(int index);

    // optional int32 total_chi_num = 8;
    /**
     * <code>optional int32 total_chi_num = 8;</code>
     */
    boolean hasTotalChiNum();
    /**
     * <code>optional int32 total_chi_num = 8;</code>
     */
    int getTotalChiNum();

    // optional int32 total_peng_num = 9;
    /**
     * <code>optional int32 total_peng_num = 9;</code>
     */
    boolean hasTotalPengNum();
    /**
     * <code>optional int32 total_peng_num = 9;</code>
     */
    int getTotalPengNum();

    // repeated int32 total_gang_list = 10;
    /**
     * <code>repeated int32 total_gang_list = 10;</code>
     */
    java.util.List<java.lang.Integer> getTotalGangListList();
    /**
     * <code>repeated int32 total_gang_list = 10;</code>
     */
    int getTotalGangListCount();
    /**
     * <code>repeated int32 total_gang_list = 10;</code>
     */
    int getTotalGangList(int index);

    // repeated int32 total_hu_list = 11;
    /**
     * <code>repeated int32 total_hu_list = 11;</code>
     *
     * <pre>
     * 总的胡牌列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getTotalHuListList();
    /**
     * <code>repeated int32 total_hu_list = 11;</code>
     *
     * <pre>
     * 总的胡牌列表
     * </pre>
     */
    int getTotalHuListCount();
    /**
     * <code>repeated int32 total_hu_list = 11;</code>
     *
     * <pre>
     * 总的胡牌列表
     * </pre>
     */
    int getTotalHuList(int index);

    // repeated int32 total_win_list = 12;
    /**
     * <code>repeated int32 total_win_list = 12;</code>
     */
    java.util.List<java.lang.Integer> getTotalWinListList();
    /**
     * <code>repeated int32 total_win_list = 12;</code>
     */
    int getTotalWinListCount();
    /**
     * <code>repeated int32 total_win_list = 12;</code>
     */
    int getTotalWinList(int index);

    // optional int32 status = 13;
    /**
     * <code>optional int32 status = 13;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 13;</code>
     */
    int getStatus();

    // optional int32 piaofen = 14;
    /**
     * <code>optional int32 piaofen = 14;</code>
     *
     * <pre>
     * -1无选择
     * </pre>
     */
    boolean hasPiaofen();
    /**
     * <code>optional int32 piaofen = 14;</code>
     *
     * <pre>
     * -1无选择
     * </pre>
     */
    int getPiaofen();

    // optional int32 shanghuo = 15;
    /**
     * <code>optional int32 shanghuo = 15;</code>
     *
     * <pre>
     * -1无选择 1不上火 2上火
     * </pre>
     */
    boolean hasShanghuo();
    /**
     * <code>optional int32 shanghuo = 15;</code>
     *
     * <pre>
     * -1无选择 1不上火 2上火
     * </pre>
     */
    int getShanghuo();

    // optional int32 bird_num = 16;
    /**
     * <code>optional int32 bird_num = 16;</code>
     *
     * <pre>
     * 抓到多少张鸟
     * </pre>
     */
    boolean hasBirdNum();
    /**
     * <code>optional int32 bird_num = 16;</code>
     *
     * <pre>
     * 抓到多少张鸟
     * </pre>
     */
    int getBirdNum();

    // repeated int32 cards = 17;
    /**
     * <code>repeated int32 cards = 17;</code>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 17;</code>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 17;</code>
     */
    int getCards(int index);

    // repeated int32 out_cards = 18;
    /**
     * <code>repeated int32 out_cards = 18;</code>
     */
    java.util.List<java.lang.Integer> getOutCardsList();
    /**
     * <code>repeated int32 out_cards = 18;</code>
     */
    int getOutCardsCount();
    /**
     * <code>repeated int32 out_cards = 18;</code>
     */
    int getOutCards(int index);

    // repeated int32 op_list = 19;
    /**
     * <code>repeated int32 op_list = 19;</code>
     *
     * <pre>
     * 结束时做了什么操作
     * </pre>
     */
    java.util.List<java.lang.Integer> getOpListList();
    /**
     * <code>repeated int32 op_list = 19;</code>
     *
     * <pre>
     * 结束时做了什么操作
     * </pre>
     */
    int getOpListCount();
    /**
     * <code>repeated int32 op_list = 19;</code>
     *
     * <pre>
     * 结束时做了什么操作
     * </pre>
     */
    int getOpList(int index);

    // optional int32 round_win_chips = 20;
    /**
     * <code>optional int32 round_win_chips = 20;</code>
     */
    boolean hasRoundWinChips();
    /**
     * <code>optional int32 round_win_chips = 20;</code>
     */
    int getRoundWinChips();

    // repeated int32 over_chips_details = 21;
    /**
     * <code>repeated int32 over_chips_details = 21;</code>
     *
     * <pre>
     *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
     * </pre>
     */
    java.util.List<java.lang.Integer> getOverChipsDetailsList();
    /**
     * <code>repeated int32 over_chips_details = 21;</code>
     *
     * <pre>
     *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
     * </pre>
     */
    int getOverChipsDetailsCount();
    /**
     * <code>repeated int32 over_chips_details = 21;</code>
     *
     * <pre>
     *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
     * </pre>
     */
    int getOverChipsDetails(int index);

    // optional int32 round_win_chips_before = 22;
    /**
     * <code>optional int32 round_win_chips_before = 22;</code>
     */
    boolean hasRoundWinChipsBefore();
    /**
     * <code>optional int32 round_win_chips_before = 22;</code>
     */
    int getRoundWinChipsBefore();
  }
  /**
   * Protobuf type {@code GameOverResultInfo}
   */
  public static final class GameOverResultInfo extends
      com.google.protobuf.GeneratedMessage
      implements GameOverResultInfoOrBuilder {
    // Use GameOverResultInfo.newBuilder() to construct.
    private GameOverResultInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GameOverResultInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GameOverResultInfo defaultInstance;
    public static GameOverResultInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GameOverResultInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GameOverResultInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uin_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              chips_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              roundChiNum_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              roundPengNum_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                roundGangList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              roundGangList_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                roundGangList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                roundGangList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                roundHuList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              roundHuList_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                roundHuList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                roundHuList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                roundWinList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              roundWinList_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                roundWinList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                roundWinList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              totalChiNum_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              totalPengNum_ = input.readInt32();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                totalGangList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              totalGangList_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                totalGangList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                totalGangList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                totalHuList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              totalHuList_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                totalHuList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                totalHuList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                totalWinList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              totalWinList_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                totalWinList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                totalWinList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              bitField0_ |= 0x00000040;
              status_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000080;
              piaofen_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000100;
              shanghuo_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000200;
              birdNum_ = input.readInt32();
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                outCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              outCards_.add(input.readInt32());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                outCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                outCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 152: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                opList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              opList_.add(input.readInt32());
              break;
            }
            case 154: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                opList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                opList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 160: {
              bitField0_ |= 0x00000400;
              roundWinChips_ = input.readInt32();
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                overChipsDetails_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              overChipsDetails_.add(input.readInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                overChipsDetails_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                overChipsDetails_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 176: {
              bitField0_ |= 0x00000800;
              roundWinChipsBefore_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          roundGangList_ = java.util.Collections.unmodifiableList(roundGangList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          roundHuList_ = java.util.Collections.unmodifiableList(roundHuList_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          roundWinList_ = java.util.Collections.unmodifiableList(roundWinList_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          totalGangList_ = java.util.Collections.unmodifiableList(totalGangList_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          totalHuList_ = java.util.Collections.unmodifiableList(totalHuList_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          totalWinList_ = java.util.Collections.unmodifiableList(totalWinList_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          outCards_ = java.util.Collections.unmodifiableList(outCards_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          opList_ = java.util.Collections.unmodifiableList(opList_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          overChipsDetails_ = java.util.Collections.unmodifiableList(overChipsDetails_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_GameOverResultInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_GameOverResultInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.GameOverResultInfo.class, Mahjong.GameOverResultInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GameOverResultInfo> PARSER =
        new com.google.protobuf.AbstractParser<GameOverResultInfo>() {
      public GameOverResultInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameOverResultInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GameOverResultInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 uin = 1;
    public static final int UIN_FIELD_NUMBER = 1;
    private int uin_;
    /**
     * <code>optional int32 uin = 1;</code>
     */
    public boolean hasUin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 uin = 1;</code>
     */
    public int getUin() {
      return uin_;
    }

    // optional int64 chips = 2;
    public static final int CHIPS_FIELD_NUMBER = 2;
    private long chips_;
    /**
     * <code>optional int64 chips = 2;</code>
     */
    public boolean hasChips() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 chips = 2;</code>
     */
    public long getChips() {
      return chips_;
    }

    // optional int32 round_chi_num = 3;
    public static final int ROUND_CHI_NUM_FIELD_NUMBER = 3;
    private int roundChiNum_;
    /**
     * <code>optional int32 round_chi_num = 3;</code>
     */
    public boolean hasRoundChiNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 round_chi_num = 3;</code>
     */
    public int getRoundChiNum() {
      return roundChiNum_;
    }

    // optional int32 round_peng_num = 4;
    public static final int ROUND_PENG_NUM_FIELD_NUMBER = 4;
    private int roundPengNum_;
    /**
     * <code>optional int32 round_peng_num = 4;</code>
     */
    public boolean hasRoundPengNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 round_peng_num = 4;</code>
     */
    public int getRoundPengNum() {
      return roundPengNum_;
    }

    // repeated int32 round_gang_list = 5;
    public static final int ROUND_GANG_LIST_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> roundGangList_;
    /**
     * <code>repeated int32 round_gang_list = 5;</code>
     *
     * <pre>
     * 1暗杠 2擦杠 3明杠
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRoundGangListList() {
      return roundGangList_;
    }
    /**
     * <code>repeated int32 round_gang_list = 5;</code>
     *
     * <pre>
     * 1暗杠 2擦杠 3明杠
     * </pre>
     */
    public int getRoundGangListCount() {
      return roundGangList_.size();
    }
    /**
     * <code>repeated int32 round_gang_list = 5;</code>
     *
     * <pre>
     * 1暗杠 2擦杠 3明杠
     * </pre>
     */
    public int getRoundGangList(int index) {
      return roundGangList_.get(index);
    }

    // repeated int32 round_hu_list = 6;
    public static final int ROUND_HU_LIST_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> roundHuList_;
    /**
     * <code>repeated int32 round_hu_list = 6;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRoundHuListList() {
      return roundHuList_;
    }
    /**
     * <code>repeated int32 round_hu_list = 6;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    public int getRoundHuListCount() {
      return roundHuList_.size();
    }
    /**
     * <code>repeated int32 round_hu_list = 6;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    public int getRoundHuList(int index) {
      return roundHuList_.get(index);
    }

    // repeated int32 round_win_list = 7;
    public static final int ROUND_WIN_LIST_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> roundWinList_;
    /**
     * <code>repeated int32 round_win_list = 7;</code>
     *
     * <pre>
     * 1自摸 2接炮 3放炮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRoundWinListList() {
      return roundWinList_;
    }
    /**
     * <code>repeated int32 round_win_list = 7;</code>
     *
     * <pre>
     * 1自摸 2接炮 3放炮
     * </pre>
     */
    public int getRoundWinListCount() {
      return roundWinList_.size();
    }
    /**
     * <code>repeated int32 round_win_list = 7;</code>
     *
     * <pre>
     * 1自摸 2接炮 3放炮
     * </pre>
     */
    public int getRoundWinList(int index) {
      return roundWinList_.get(index);
    }

    // optional int32 total_chi_num = 8;
    public static final int TOTAL_CHI_NUM_FIELD_NUMBER = 8;
    private int totalChiNum_;
    /**
     * <code>optional int32 total_chi_num = 8;</code>
     */
    public boolean hasTotalChiNum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 total_chi_num = 8;</code>
     */
    public int getTotalChiNum() {
      return totalChiNum_;
    }

    // optional int32 total_peng_num = 9;
    public static final int TOTAL_PENG_NUM_FIELD_NUMBER = 9;
    private int totalPengNum_;
    /**
     * <code>optional int32 total_peng_num = 9;</code>
     */
    public boolean hasTotalPengNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 total_peng_num = 9;</code>
     */
    public int getTotalPengNum() {
      return totalPengNum_;
    }

    // repeated int32 total_gang_list = 10;
    public static final int TOTAL_GANG_LIST_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> totalGangList_;
    /**
     * <code>repeated int32 total_gang_list = 10;</code>
     */
    public java.util.List<java.lang.Integer>
        getTotalGangListList() {
      return totalGangList_;
    }
    /**
     * <code>repeated int32 total_gang_list = 10;</code>
     */
    public int getTotalGangListCount() {
      return totalGangList_.size();
    }
    /**
     * <code>repeated int32 total_gang_list = 10;</code>
     */
    public int getTotalGangList(int index) {
      return totalGangList_.get(index);
    }

    // repeated int32 total_hu_list = 11;
    public static final int TOTAL_HU_LIST_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> totalHuList_;
    /**
     * <code>repeated int32 total_hu_list = 11;</code>
     *
     * <pre>
     * 总的胡牌列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTotalHuListList() {
      return totalHuList_;
    }
    /**
     * <code>repeated int32 total_hu_list = 11;</code>
     *
     * <pre>
     * 总的胡牌列表
     * </pre>
     */
    public int getTotalHuListCount() {
      return totalHuList_.size();
    }
    /**
     * <code>repeated int32 total_hu_list = 11;</code>
     *
     * <pre>
     * 总的胡牌列表
     * </pre>
     */
    public int getTotalHuList(int index) {
      return totalHuList_.get(index);
    }

    // repeated int32 total_win_list = 12;
    public static final int TOTAL_WIN_LIST_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> totalWinList_;
    /**
     * <code>repeated int32 total_win_list = 12;</code>
     */
    public java.util.List<java.lang.Integer>
        getTotalWinListList() {
      return totalWinList_;
    }
    /**
     * <code>repeated int32 total_win_list = 12;</code>
     */
    public int getTotalWinListCount() {
      return totalWinList_.size();
    }
    /**
     * <code>repeated int32 total_win_list = 12;</code>
     */
    public int getTotalWinList(int index) {
      return totalWinList_.get(index);
    }

    // optional int32 status = 13;
    public static final int STATUS_FIELD_NUMBER = 13;
    private int status_;
    /**
     * <code>optional int32 status = 13;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 status = 13;</code>
     */
    public int getStatus() {
      return status_;
    }

    // optional int32 piaofen = 14;
    public static final int PIAOFEN_FIELD_NUMBER = 14;
    private int piaofen_;
    /**
     * <code>optional int32 piaofen = 14;</code>
     *
     * <pre>
     * -1无选择
     * </pre>
     */
    public boolean hasPiaofen() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 piaofen = 14;</code>
     *
     * <pre>
     * -1无选择
     * </pre>
     */
    public int getPiaofen() {
      return piaofen_;
    }

    // optional int32 shanghuo = 15;
    public static final int SHANGHUO_FIELD_NUMBER = 15;
    private int shanghuo_;
    /**
     * <code>optional int32 shanghuo = 15;</code>
     *
     * <pre>
     * -1无选择 1不上火 2上火
     * </pre>
     */
    public boolean hasShanghuo() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 shanghuo = 15;</code>
     *
     * <pre>
     * -1无选择 1不上火 2上火
     * </pre>
     */
    public int getShanghuo() {
      return shanghuo_;
    }

    // optional int32 bird_num = 16;
    public static final int BIRD_NUM_FIELD_NUMBER = 16;
    private int birdNum_;
    /**
     * <code>optional int32 bird_num = 16;</code>
     *
     * <pre>
     * 抓到多少张鸟
     * </pre>
     */
    public boolean hasBirdNum() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 bird_num = 16;</code>
     *
     * <pre>
     * 抓到多少张鸟
     * </pre>
     */
    public int getBirdNum() {
      return birdNum_;
    }

    // repeated int32 cards = 17;
    public static final int CARDS_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 17;</code>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 17;</code>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 17;</code>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // repeated int32 out_cards = 18;
    public static final int OUT_CARDS_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Integer> outCards_;
    /**
     * <code>repeated int32 out_cards = 18;</code>
     */
    public java.util.List<java.lang.Integer>
        getOutCardsList() {
      return outCards_;
    }
    /**
     * <code>repeated int32 out_cards = 18;</code>
     */
    public int getOutCardsCount() {
      return outCards_.size();
    }
    /**
     * <code>repeated int32 out_cards = 18;</code>
     */
    public int getOutCards(int index) {
      return outCards_.get(index);
    }

    // repeated int32 op_list = 19;
    public static final int OP_LIST_FIELD_NUMBER = 19;
    private java.util.List<java.lang.Integer> opList_;
    /**
     * <code>repeated int32 op_list = 19;</code>
     *
     * <pre>
     * 结束时做了什么操作
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOpListList() {
      return opList_;
    }
    /**
     * <code>repeated int32 op_list = 19;</code>
     *
     * <pre>
     * 结束时做了什么操作
     * </pre>
     */
    public int getOpListCount() {
      return opList_.size();
    }
    /**
     * <code>repeated int32 op_list = 19;</code>
     *
     * <pre>
     * 结束时做了什么操作
     * </pre>
     */
    public int getOpList(int index) {
      return opList_.get(index);
    }

    // optional int32 round_win_chips = 20;
    public static final int ROUND_WIN_CHIPS_FIELD_NUMBER = 20;
    private int roundWinChips_;
    /**
     * <code>optional int32 round_win_chips = 20;</code>
     */
    public boolean hasRoundWinChips() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 round_win_chips = 20;</code>
     */
    public int getRoundWinChips() {
      return roundWinChips_;
    }

    // repeated int32 over_chips_details = 21;
    public static final int OVER_CHIPS_DETAILS_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> overChipsDetails_;
    /**
     * <code>repeated int32 over_chips_details = 21;</code>
     *
     * <pre>
     *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOverChipsDetailsList() {
      return overChipsDetails_;
    }
    /**
     * <code>repeated int32 over_chips_details = 21;</code>
     *
     * <pre>
     *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
     * </pre>
     */
    public int getOverChipsDetailsCount() {
      return overChipsDetails_.size();
    }
    /**
     * <code>repeated int32 over_chips_details = 21;</code>
     *
     * <pre>
     *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
     * </pre>
     */
    public int getOverChipsDetails(int index) {
      return overChipsDetails_.get(index);
    }

    // optional int32 round_win_chips_before = 22;
    public static final int ROUND_WIN_CHIPS_BEFORE_FIELD_NUMBER = 22;
    private int roundWinChipsBefore_;
    /**
     * <code>optional int32 round_win_chips_before = 22;</code>
     */
    public boolean hasRoundWinChipsBefore() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 round_win_chips_before = 22;</code>
     */
    public int getRoundWinChipsBefore() {
      return roundWinChipsBefore_;
    }

    private void initFields() {
      uin_ = 0;
      chips_ = 0L;
      roundChiNum_ = 0;
      roundPengNum_ = 0;
      roundGangList_ = java.util.Collections.emptyList();
      roundHuList_ = java.util.Collections.emptyList();
      roundWinList_ = java.util.Collections.emptyList();
      totalChiNum_ = 0;
      totalPengNum_ = 0;
      totalGangList_ = java.util.Collections.emptyList();
      totalHuList_ = java.util.Collections.emptyList();
      totalWinList_ = java.util.Collections.emptyList();
      status_ = 0;
      piaofen_ = 0;
      shanghuo_ = 0;
      birdNum_ = 0;
      cards_ = java.util.Collections.emptyList();
      outCards_ = java.util.Collections.emptyList();
      opList_ = java.util.Collections.emptyList();
      roundWinChips_ = 0;
      overChipsDetails_ = java.util.Collections.emptyList();
      roundWinChipsBefore_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, chips_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, roundChiNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, roundPengNum_);
      }
      for (int i = 0; i < roundGangList_.size(); i++) {
        output.writeInt32(5, roundGangList_.get(i));
      }
      for (int i = 0; i < roundHuList_.size(); i++) {
        output.writeInt32(6, roundHuList_.get(i));
      }
      for (int i = 0; i < roundWinList_.size(); i++) {
        output.writeInt32(7, roundWinList_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, totalChiNum_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(9, totalPengNum_);
      }
      for (int i = 0; i < totalGangList_.size(); i++) {
        output.writeInt32(10, totalGangList_.get(i));
      }
      for (int i = 0; i < totalHuList_.size(); i++) {
        output.writeInt32(11, totalHuList_.get(i));
      }
      for (int i = 0; i < totalWinList_.size(); i++) {
        output.writeInt32(12, totalWinList_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(13, status_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(14, piaofen_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(15, shanghuo_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(16, birdNum_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(17, cards_.get(i));
      }
      for (int i = 0; i < outCards_.size(); i++) {
        output.writeInt32(18, outCards_.get(i));
      }
      for (int i = 0; i < opList_.size(); i++) {
        output.writeInt32(19, opList_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(20, roundWinChips_);
      }
      for (int i = 0; i < overChipsDetails_.size(); i++) {
        output.writeInt32(21, overChipsDetails_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(22, roundWinChipsBefore_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, chips_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, roundChiNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, roundPengNum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roundGangList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roundGangList_.get(i));
        }
        size += dataSize;
        size += 1 * getRoundGangListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roundHuList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roundHuList_.get(i));
        }
        size += dataSize;
        size += 1 * getRoundHuListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roundWinList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roundWinList_.get(i));
        }
        size += dataSize;
        size += 1 * getRoundWinListList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, totalChiNum_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, totalPengNum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < totalGangList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(totalGangList_.get(i));
        }
        size += dataSize;
        size += 1 * getTotalGangListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < totalHuList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(totalHuList_.get(i));
        }
        size += dataSize;
        size += 1 * getTotalHuListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < totalWinList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(totalWinList_.get(i));
        }
        size += dataSize;
        size += 1 * getTotalWinListList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, status_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, piaofen_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, shanghuo_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, birdNum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 2 * getCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(outCards_.get(i));
        }
        size += dataSize;
        size += 2 * getOutCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < opList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(opList_.get(i));
        }
        size += dataSize;
        size += 2 * getOpListList().size();
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, roundWinChips_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < overChipsDetails_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(overChipsDetails_.get(i));
        }
        size += dataSize;
        size += 2 * getOverChipsDetailsList().size();
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, roundWinChipsBefore_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.GameOverResultInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOverResultInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOverResultInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.GameOverResultInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.GameOverResultInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOverResultInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOverResultInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.GameOverResultInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.GameOverResultInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.GameOverResultInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.GameOverResultInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GameOverResultInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.GameOverResultInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_GameOverResultInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_GameOverResultInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.GameOverResultInfo.class, Mahjong.GameOverResultInfo.Builder.class);
      }

      // Construct using Mahjong.GameOverResultInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        chips_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        roundChiNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        roundPengNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        roundGangList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        roundHuList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        roundWinList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        totalChiNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        totalPengNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        totalGangList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        totalHuList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        totalWinList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        piaofen_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        shanghuo_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        birdNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        outCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        opList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        roundWinChips_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        overChipsDetails_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        roundWinChipsBefore_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_GameOverResultInfo_descriptor;
      }

      public Mahjong.GameOverResultInfo getDefaultInstanceForType() {
        return Mahjong.GameOverResultInfo.getDefaultInstance();
      }

      public Mahjong.GameOverResultInfo build() {
        Mahjong.GameOverResultInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.GameOverResultInfo buildPartial() {
        Mahjong.GameOverResultInfo result = new Mahjong.GameOverResultInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uin_ = uin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.chips_ = chips_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.roundChiNum_ = roundChiNum_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.roundPengNum_ = roundPengNum_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          roundGangList_ = java.util.Collections.unmodifiableList(roundGangList_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.roundGangList_ = roundGangList_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          roundHuList_ = java.util.Collections.unmodifiableList(roundHuList_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.roundHuList_ = roundHuList_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          roundWinList_ = java.util.Collections.unmodifiableList(roundWinList_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.roundWinList_ = roundWinList_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.totalChiNum_ = totalChiNum_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.totalPengNum_ = totalPengNum_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          totalGangList_ = java.util.Collections.unmodifiableList(totalGangList_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.totalGangList_ = totalGangList_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          totalHuList_ = java.util.Collections.unmodifiableList(totalHuList_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.totalHuList_ = totalHuList_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          totalWinList_ = java.util.Collections.unmodifiableList(totalWinList_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.totalWinList_ = totalWinList_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000040;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.piaofen_ = piaofen_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.shanghuo_ = shanghuo_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.birdNum_ = birdNum_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.cards_ = cards_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          outCards_ = java.util.Collections.unmodifiableList(outCards_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.outCards_ = outCards_;
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          opList_ = java.util.Collections.unmodifiableList(opList_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.opList_ = opList_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.roundWinChips_ = roundWinChips_;
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          overChipsDetails_ = java.util.Collections.unmodifiableList(overChipsDetails_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.overChipsDetails_ = overChipsDetails_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.roundWinChipsBefore_ = roundWinChipsBefore_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.GameOverResultInfo) {
          return mergeFrom((Mahjong.GameOverResultInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.GameOverResultInfo other) {
        if (other == Mahjong.GameOverResultInfo.getDefaultInstance()) return this;
        if (other.hasUin()) {
          setUin(other.getUin());
        }
        if (other.hasChips()) {
          setChips(other.getChips());
        }
        if (other.hasRoundChiNum()) {
          setRoundChiNum(other.getRoundChiNum());
        }
        if (other.hasRoundPengNum()) {
          setRoundPengNum(other.getRoundPengNum());
        }
        if (!other.roundGangList_.isEmpty()) {
          if (roundGangList_.isEmpty()) {
            roundGangList_ = other.roundGangList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureRoundGangListIsMutable();
            roundGangList_.addAll(other.roundGangList_);
          }
          onChanged();
        }
        if (!other.roundHuList_.isEmpty()) {
          if (roundHuList_.isEmpty()) {
            roundHuList_ = other.roundHuList_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureRoundHuListIsMutable();
            roundHuList_.addAll(other.roundHuList_);
          }
          onChanged();
        }
        if (!other.roundWinList_.isEmpty()) {
          if (roundWinList_.isEmpty()) {
            roundWinList_ = other.roundWinList_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureRoundWinListIsMutable();
            roundWinList_.addAll(other.roundWinList_);
          }
          onChanged();
        }
        if (other.hasTotalChiNum()) {
          setTotalChiNum(other.getTotalChiNum());
        }
        if (other.hasTotalPengNum()) {
          setTotalPengNum(other.getTotalPengNum());
        }
        if (!other.totalGangList_.isEmpty()) {
          if (totalGangList_.isEmpty()) {
            totalGangList_ = other.totalGangList_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureTotalGangListIsMutable();
            totalGangList_.addAll(other.totalGangList_);
          }
          onChanged();
        }
        if (!other.totalHuList_.isEmpty()) {
          if (totalHuList_.isEmpty()) {
            totalHuList_ = other.totalHuList_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureTotalHuListIsMutable();
            totalHuList_.addAll(other.totalHuList_);
          }
          onChanged();
        }
        if (!other.totalWinList_.isEmpty()) {
          if (totalWinList_.isEmpty()) {
            totalWinList_ = other.totalWinList_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureTotalWinListIsMutable();
            totalWinList_.addAll(other.totalWinList_);
          }
          onChanged();
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasPiaofen()) {
          setPiaofen(other.getPiaofen());
        }
        if (other.hasShanghuo()) {
          setShanghuo(other.getShanghuo());
        }
        if (other.hasBirdNum()) {
          setBirdNum(other.getBirdNum());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (!other.outCards_.isEmpty()) {
          if (outCards_.isEmpty()) {
            outCards_ = other.outCards_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureOutCardsIsMutable();
            outCards_.addAll(other.outCards_);
          }
          onChanged();
        }
        if (!other.opList_.isEmpty()) {
          if (opList_.isEmpty()) {
            opList_ = other.opList_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureOpListIsMutable();
            opList_.addAll(other.opList_);
          }
          onChanged();
        }
        if (other.hasRoundWinChips()) {
          setRoundWinChips(other.getRoundWinChips());
        }
        if (!other.overChipsDetails_.isEmpty()) {
          if (overChipsDetails_.isEmpty()) {
            overChipsDetails_ = other.overChipsDetails_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureOverChipsDetailsIsMutable();
            overChipsDetails_.addAll(other.overChipsDetails_);
          }
          onChanged();
        }
        if (other.hasRoundWinChipsBefore()) {
          setRoundWinChipsBefore(other.getRoundWinChipsBefore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.GameOverResultInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.GameOverResultInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 uin = 1;
      private int uin_ ;
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public boolean hasUin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public int getUin() {
        return uin_;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public Builder setUin(int value) {
        bitField0_ |= 0x00000001;
        uin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public Builder clearUin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uin_ = 0;
        onChanged();
        return this;
      }

      // optional int64 chips = 2;
      private long chips_ ;
      /**
       * <code>optional int64 chips = 2;</code>
       */
      public boolean hasChips() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 chips = 2;</code>
       */
      public long getChips() {
        return chips_;
      }
      /**
       * <code>optional int64 chips = 2;</code>
       */
      public Builder setChips(long value) {
        bitField0_ |= 0x00000002;
        chips_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 chips = 2;</code>
       */
      public Builder clearChips() {
        bitField0_ = (bitField0_ & ~0x00000002);
        chips_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 round_chi_num = 3;
      private int roundChiNum_ ;
      /**
       * <code>optional int32 round_chi_num = 3;</code>
       */
      public boolean hasRoundChiNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 round_chi_num = 3;</code>
       */
      public int getRoundChiNum() {
        return roundChiNum_;
      }
      /**
       * <code>optional int32 round_chi_num = 3;</code>
       */
      public Builder setRoundChiNum(int value) {
        bitField0_ |= 0x00000004;
        roundChiNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round_chi_num = 3;</code>
       */
      public Builder clearRoundChiNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        roundChiNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 round_peng_num = 4;
      private int roundPengNum_ ;
      /**
       * <code>optional int32 round_peng_num = 4;</code>
       */
      public boolean hasRoundPengNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 round_peng_num = 4;</code>
       */
      public int getRoundPengNum() {
        return roundPengNum_;
      }
      /**
       * <code>optional int32 round_peng_num = 4;</code>
       */
      public Builder setRoundPengNum(int value) {
        bitField0_ |= 0x00000008;
        roundPengNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round_peng_num = 4;</code>
       */
      public Builder clearRoundPengNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        roundPengNum_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 round_gang_list = 5;
      private java.util.List<java.lang.Integer> roundGangList_ = java.util.Collections.emptyList();
      private void ensureRoundGangListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          roundGangList_ = new java.util.ArrayList<java.lang.Integer>(roundGangList_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 round_gang_list = 5;</code>
       *
       * <pre>
       * 1暗杠 2擦杠 3明杠
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRoundGangListList() {
        return java.util.Collections.unmodifiableList(roundGangList_);
      }
      /**
       * <code>repeated int32 round_gang_list = 5;</code>
       *
       * <pre>
       * 1暗杠 2擦杠 3明杠
       * </pre>
       */
      public int getRoundGangListCount() {
        return roundGangList_.size();
      }
      /**
       * <code>repeated int32 round_gang_list = 5;</code>
       *
       * <pre>
       * 1暗杠 2擦杠 3明杠
       * </pre>
       */
      public int getRoundGangList(int index) {
        return roundGangList_.get(index);
      }
      /**
       * <code>repeated int32 round_gang_list = 5;</code>
       *
       * <pre>
       * 1暗杠 2擦杠 3明杠
       * </pre>
       */
      public Builder setRoundGangList(
          int index, int value) {
        ensureRoundGangListIsMutable();
        roundGangList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_gang_list = 5;</code>
       *
       * <pre>
       * 1暗杠 2擦杠 3明杠
       * </pre>
       */
      public Builder addRoundGangList(int value) {
        ensureRoundGangListIsMutable();
        roundGangList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_gang_list = 5;</code>
       *
       * <pre>
       * 1暗杠 2擦杠 3明杠
       * </pre>
       */
      public Builder addAllRoundGangList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoundGangListIsMutable();
        super.addAll(values, roundGangList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_gang_list = 5;</code>
       *
       * <pre>
       * 1暗杠 2擦杠 3明杠
       * </pre>
       */
      public Builder clearRoundGangList() {
        roundGangList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // repeated int32 round_hu_list = 6;
      private java.util.List<java.lang.Integer> roundHuList_ = java.util.Collections.emptyList();
      private void ensureRoundHuListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          roundHuList_ = new java.util.ArrayList<java.lang.Integer>(roundHuList_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 round_hu_list = 6;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRoundHuListList() {
        return java.util.Collections.unmodifiableList(roundHuList_);
      }
      /**
       * <code>repeated int32 round_hu_list = 6;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public int getRoundHuListCount() {
        return roundHuList_.size();
      }
      /**
       * <code>repeated int32 round_hu_list = 6;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public int getRoundHuList(int index) {
        return roundHuList_.get(index);
      }
      /**
       * <code>repeated int32 round_hu_list = 6;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public Builder setRoundHuList(
          int index, int value) {
        ensureRoundHuListIsMutable();
        roundHuList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_hu_list = 6;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public Builder addRoundHuList(int value) {
        ensureRoundHuListIsMutable();
        roundHuList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_hu_list = 6;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public Builder addAllRoundHuList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoundHuListIsMutable();
        super.addAll(values, roundHuList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_hu_list = 6;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public Builder clearRoundHuList() {
        roundHuList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 round_win_list = 7;
      private java.util.List<java.lang.Integer> roundWinList_ = java.util.Collections.emptyList();
      private void ensureRoundWinListIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          roundWinList_ = new java.util.ArrayList<java.lang.Integer>(roundWinList_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 round_win_list = 7;</code>
       *
       * <pre>
       * 1自摸 2接炮 3放炮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRoundWinListList() {
        return java.util.Collections.unmodifiableList(roundWinList_);
      }
      /**
       * <code>repeated int32 round_win_list = 7;</code>
       *
       * <pre>
       * 1自摸 2接炮 3放炮
       * </pre>
       */
      public int getRoundWinListCount() {
        return roundWinList_.size();
      }
      /**
       * <code>repeated int32 round_win_list = 7;</code>
       *
       * <pre>
       * 1自摸 2接炮 3放炮
       * </pre>
       */
      public int getRoundWinList(int index) {
        return roundWinList_.get(index);
      }
      /**
       * <code>repeated int32 round_win_list = 7;</code>
       *
       * <pre>
       * 1自摸 2接炮 3放炮
       * </pre>
       */
      public Builder setRoundWinList(
          int index, int value) {
        ensureRoundWinListIsMutable();
        roundWinList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_win_list = 7;</code>
       *
       * <pre>
       * 1自摸 2接炮 3放炮
       * </pre>
       */
      public Builder addRoundWinList(int value) {
        ensureRoundWinListIsMutable();
        roundWinList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_win_list = 7;</code>
       *
       * <pre>
       * 1自摸 2接炮 3放炮
       * </pre>
       */
      public Builder addAllRoundWinList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoundWinListIsMutable();
        super.addAll(values, roundWinList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_win_list = 7;</code>
       *
       * <pre>
       * 1自摸 2接炮 3放炮
       * </pre>
       */
      public Builder clearRoundWinList() {
        roundWinList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional int32 total_chi_num = 8;
      private int totalChiNum_ ;
      /**
       * <code>optional int32 total_chi_num = 8;</code>
       */
      public boolean hasTotalChiNum() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 total_chi_num = 8;</code>
       */
      public int getTotalChiNum() {
        return totalChiNum_;
      }
      /**
       * <code>optional int32 total_chi_num = 8;</code>
       */
      public Builder setTotalChiNum(int value) {
        bitField0_ |= 0x00000080;
        totalChiNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_chi_num = 8;</code>
       */
      public Builder clearTotalChiNum() {
        bitField0_ = (bitField0_ & ~0x00000080);
        totalChiNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 total_peng_num = 9;
      private int totalPengNum_ ;
      /**
       * <code>optional int32 total_peng_num = 9;</code>
       */
      public boolean hasTotalPengNum() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 total_peng_num = 9;</code>
       */
      public int getTotalPengNum() {
        return totalPengNum_;
      }
      /**
       * <code>optional int32 total_peng_num = 9;</code>
       */
      public Builder setTotalPengNum(int value) {
        bitField0_ |= 0x00000100;
        totalPengNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_peng_num = 9;</code>
       */
      public Builder clearTotalPengNum() {
        bitField0_ = (bitField0_ & ~0x00000100);
        totalPengNum_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 total_gang_list = 10;
      private java.util.List<java.lang.Integer> totalGangList_ = java.util.Collections.emptyList();
      private void ensureTotalGangListIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          totalGangList_ = new java.util.ArrayList<java.lang.Integer>(totalGangList_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 total_gang_list = 10;</code>
       */
      public java.util.List<java.lang.Integer>
          getTotalGangListList() {
        return java.util.Collections.unmodifiableList(totalGangList_);
      }
      /**
       * <code>repeated int32 total_gang_list = 10;</code>
       */
      public int getTotalGangListCount() {
        return totalGangList_.size();
      }
      /**
       * <code>repeated int32 total_gang_list = 10;</code>
       */
      public int getTotalGangList(int index) {
        return totalGangList_.get(index);
      }
      /**
       * <code>repeated int32 total_gang_list = 10;</code>
       */
      public Builder setTotalGangList(
          int index, int value) {
        ensureTotalGangListIsMutable();
        totalGangList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_gang_list = 10;</code>
       */
      public Builder addTotalGangList(int value) {
        ensureTotalGangListIsMutable();
        totalGangList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_gang_list = 10;</code>
       */
      public Builder addAllTotalGangList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTotalGangListIsMutable();
        super.addAll(values, totalGangList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_gang_list = 10;</code>
       */
      public Builder clearTotalGangList() {
        totalGangList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // repeated int32 total_hu_list = 11;
      private java.util.List<java.lang.Integer> totalHuList_ = java.util.Collections.emptyList();
      private void ensureTotalHuListIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          totalHuList_ = new java.util.ArrayList<java.lang.Integer>(totalHuList_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 total_hu_list = 11;</code>
       *
       * <pre>
       * 总的胡牌列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTotalHuListList() {
        return java.util.Collections.unmodifiableList(totalHuList_);
      }
      /**
       * <code>repeated int32 total_hu_list = 11;</code>
       *
       * <pre>
       * 总的胡牌列表
       * </pre>
       */
      public int getTotalHuListCount() {
        return totalHuList_.size();
      }
      /**
       * <code>repeated int32 total_hu_list = 11;</code>
       *
       * <pre>
       * 总的胡牌列表
       * </pre>
       */
      public int getTotalHuList(int index) {
        return totalHuList_.get(index);
      }
      /**
       * <code>repeated int32 total_hu_list = 11;</code>
       *
       * <pre>
       * 总的胡牌列表
       * </pre>
       */
      public Builder setTotalHuList(
          int index, int value) {
        ensureTotalHuListIsMutable();
        totalHuList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_hu_list = 11;</code>
       *
       * <pre>
       * 总的胡牌列表
       * </pre>
       */
      public Builder addTotalHuList(int value) {
        ensureTotalHuListIsMutable();
        totalHuList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_hu_list = 11;</code>
       *
       * <pre>
       * 总的胡牌列表
       * </pre>
       */
      public Builder addAllTotalHuList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTotalHuListIsMutable();
        super.addAll(values, totalHuList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_hu_list = 11;</code>
       *
       * <pre>
       * 总的胡牌列表
       * </pre>
       */
      public Builder clearTotalHuList() {
        totalHuList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated int32 total_win_list = 12;
      private java.util.List<java.lang.Integer> totalWinList_ = java.util.Collections.emptyList();
      private void ensureTotalWinListIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          totalWinList_ = new java.util.ArrayList<java.lang.Integer>(totalWinList_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 total_win_list = 12;</code>
       */
      public java.util.List<java.lang.Integer>
          getTotalWinListList() {
        return java.util.Collections.unmodifiableList(totalWinList_);
      }
      /**
       * <code>repeated int32 total_win_list = 12;</code>
       */
      public int getTotalWinListCount() {
        return totalWinList_.size();
      }
      /**
       * <code>repeated int32 total_win_list = 12;</code>
       */
      public int getTotalWinList(int index) {
        return totalWinList_.get(index);
      }
      /**
       * <code>repeated int32 total_win_list = 12;</code>
       */
      public Builder setTotalWinList(
          int index, int value) {
        ensureTotalWinListIsMutable();
        totalWinList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_win_list = 12;</code>
       */
      public Builder addTotalWinList(int value) {
        ensureTotalWinListIsMutable();
        totalWinList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_win_list = 12;</code>
       */
      public Builder addAllTotalWinList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTotalWinListIsMutable();
        super.addAll(values, totalWinList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_win_list = 12;</code>
       */
      public Builder clearTotalWinList() {
        totalWinList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // optional int32 status = 13;
      private int status_ ;
      /**
       * <code>optional int32 status = 13;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 status = 13;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 13;</code>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00001000;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 13;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00001000);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional int32 piaofen = 14;
      private int piaofen_ ;
      /**
       * <code>optional int32 piaofen = 14;</code>
       *
       * <pre>
       * -1无选择
       * </pre>
       */
      public boolean hasPiaofen() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 piaofen = 14;</code>
       *
       * <pre>
       * -1无选择
       * </pre>
       */
      public int getPiaofen() {
        return piaofen_;
      }
      /**
       * <code>optional int32 piaofen = 14;</code>
       *
       * <pre>
       * -1无选择
       * </pre>
       */
      public Builder setPiaofen(int value) {
        bitField0_ |= 0x00002000;
        piaofen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 piaofen = 14;</code>
       *
       * <pre>
       * -1无选择
       * </pre>
       */
      public Builder clearPiaofen() {
        bitField0_ = (bitField0_ & ~0x00002000);
        piaofen_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shanghuo = 15;
      private int shanghuo_ ;
      /**
       * <code>optional int32 shanghuo = 15;</code>
       *
       * <pre>
       * -1无选择 1不上火 2上火
       * </pre>
       */
      public boolean hasShanghuo() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 shanghuo = 15;</code>
       *
       * <pre>
       * -1无选择 1不上火 2上火
       * </pre>
       */
      public int getShanghuo() {
        return shanghuo_;
      }
      /**
       * <code>optional int32 shanghuo = 15;</code>
       *
       * <pre>
       * -1无选择 1不上火 2上火
       * </pre>
       */
      public Builder setShanghuo(int value) {
        bitField0_ |= 0x00004000;
        shanghuo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shanghuo = 15;</code>
       *
       * <pre>
       * -1无选择 1不上火 2上火
       * </pre>
       */
      public Builder clearShanghuo() {
        bitField0_ = (bitField0_ & ~0x00004000);
        shanghuo_ = 0;
        onChanged();
        return this;
      }

      // optional int32 bird_num = 16;
      private int birdNum_ ;
      /**
       * <code>optional int32 bird_num = 16;</code>
       *
       * <pre>
       * 抓到多少张鸟
       * </pre>
       */
      public boolean hasBirdNum() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 bird_num = 16;</code>
       *
       * <pre>
       * 抓到多少张鸟
       * </pre>
       */
      public int getBirdNum() {
        return birdNum_;
      }
      /**
       * <code>optional int32 bird_num = 16;</code>
       *
       * <pre>
       * 抓到多少张鸟
       * </pre>
       */
      public Builder setBirdNum(int value) {
        bitField0_ |= 0x00008000;
        birdNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bird_num = 16;</code>
       *
       * <pre>
       * 抓到多少张鸟
       * </pre>
       */
      public Builder clearBirdNum() {
        bitField0_ = (bitField0_ & ~0x00008000);
        birdNum_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 17;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 cards = 17;</code>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 17;</code>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 17;</code>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 17;</code>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 17;</code>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 17;</code>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 17;</code>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // repeated int32 out_cards = 18;
      private java.util.List<java.lang.Integer> outCards_ = java.util.Collections.emptyList();
      private void ensureOutCardsIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          outCards_ = new java.util.ArrayList<java.lang.Integer>(outCards_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int32 out_cards = 18;</code>
       */
      public java.util.List<java.lang.Integer>
          getOutCardsList() {
        return java.util.Collections.unmodifiableList(outCards_);
      }
      /**
       * <code>repeated int32 out_cards = 18;</code>
       */
      public int getOutCardsCount() {
        return outCards_.size();
      }
      /**
       * <code>repeated int32 out_cards = 18;</code>
       */
      public int getOutCards(int index) {
        return outCards_.get(index);
      }
      /**
       * <code>repeated int32 out_cards = 18;</code>
       */
      public Builder setOutCards(
          int index, int value) {
        ensureOutCardsIsMutable();
        outCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards = 18;</code>
       */
      public Builder addOutCards(int value) {
        ensureOutCardsIsMutable();
        outCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards = 18;</code>
       */
      public Builder addAllOutCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOutCardsIsMutable();
        super.addAll(values, outCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards = 18;</code>
       */
      public Builder clearOutCards() {
        outCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      // repeated int32 op_list = 19;
      private java.util.List<java.lang.Integer> opList_ = java.util.Collections.emptyList();
      private void ensureOpListIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          opList_ = new java.util.ArrayList<java.lang.Integer>(opList_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int32 op_list = 19;</code>
       *
       * <pre>
       * 结束时做了什么操作
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOpListList() {
        return java.util.Collections.unmodifiableList(opList_);
      }
      /**
       * <code>repeated int32 op_list = 19;</code>
       *
       * <pre>
       * 结束时做了什么操作
       * </pre>
       */
      public int getOpListCount() {
        return opList_.size();
      }
      /**
       * <code>repeated int32 op_list = 19;</code>
       *
       * <pre>
       * 结束时做了什么操作
       * </pre>
       */
      public int getOpList(int index) {
        return opList_.get(index);
      }
      /**
       * <code>repeated int32 op_list = 19;</code>
       *
       * <pre>
       * 结束时做了什么操作
       * </pre>
       */
      public Builder setOpList(
          int index, int value) {
        ensureOpListIsMutable();
        opList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 op_list = 19;</code>
       *
       * <pre>
       * 结束时做了什么操作
       * </pre>
       */
      public Builder addOpList(int value) {
        ensureOpListIsMutable();
        opList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 op_list = 19;</code>
       *
       * <pre>
       * 结束时做了什么操作
       * </pre>
       */
      public Builder addAllOpList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOpListIsMutable();
        super.addAll(values, opList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 op_list = 19;</code>
       *
       * <pre>
       * 结束时做了什么操作
       * </pre>
       */
      public Builder clearOpList() {
        opList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      // optional int32 round_win_chips = 20;
      private int roundWinChips_ ;
      /**
       * <code>optional int32 round_win_chips = 20;</code>
       */
      public boolean hasRoundWinChips() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 round_win_chips = 20;</code>
       */
      public int getRoundWinChips() {
        return roundWinChips_;
      }
      /**
       * <code>optional int32 round_win_chips = 20;</code>
       */
      public Builder setRoundWinChips(int value) {
        bitField0_ |= 0x00080000;
        roundWinChips_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round_win_chips = 20;</code>
       */
      public Builder clearRoundWinChips() {
        bitField0_ = (bitField0_ & ~0x00080000);
        roundWinChips_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 over_chips_details = 21;
      private java.util.List<java.lang.Integer> overChipsDetails_ = java.util.Collections.emptyList();
      private void ensureOverChipsDetailsIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          overChipsDetails_ = new java.util.ArrayList<java.lang.Integer>(overChipsDetails_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated int32 over_chips_details = 21;</code>
       *
       * <pre>
       *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOverChipsDetailsList() {
        return java.util.Collections.unmodifiableList(overChipsDetails_);
      }
      /**
       * <code>repeated int32 over_chips_details = 21;</code>
       *
       * <pre>
       *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
       * </pre>
       */
      public int getOverChipsDetailsCount() {
        return overChipsDetails_.size();
      }
      /**
       * <code>repeated int32 over_chips_details = 21;</code>
       *
       * <pre>
       *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
       * </pre>
       */
      public int getOverChipsDetails(int index) {
        return overChipsDetails_.get(index);
      }
      /**
       * <code>repeated int32 over_chips_details = 21;</code>
       *
       * <pre>
       *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
       * </pre>
       */
      public Builder setOverChipsDetails(
          int index, int value) {
        ensureOverChipsDetailsIsMutable();
        overChipsDetails_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 over_chips_details = 21;</code>
       *
       * <pre>
       *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
       * </pre>
       */
      public Builder addOverChipsDetails(int value) {
        ensureOverChipsDetailsIsMutable();
        overChipsDetails_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 over_chips_details = 21;</code>
       *
       * <pre>
       *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
       * </pre>
       */
      public Builder addAllOverChipsDetails(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOverChipsDetailsIsMutable();
        super.addAll(values, overChipsDetails_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 over_chips_details = 21;</code>
       *
       * <pre>
       *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
       * </pre>
       */
      public Builder clearOverChipsDetails() {
        overChipsDetails_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      // optional int32 round_win_chips_before = 22;
      private int roundWinChipsBefore_ ;
      /**
       * <code>optional int32 round_win_chips_before = 22;</code>
       */
      public boolean hasRoundWinChipsBefore() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 round_win_chips_before = 22;</code>
       */
      public int getRoundWinChipsBefore() {
        return roundWinChipsBefore_;
      }
      /**
       * <code>optional int32 round_win_chips_before = 22;</code>
       */
      public Builder setRoundWinChipsBefore(int value) {
        bitField0_ |= 0x00200000;
        roundWinChipsBefore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round_win_chips_before = 22;</code>
       */
      public Builder clearRoundWinChipsBefore() {
        bitField0_ = (bitField0_ & ~0x00200000);
        roundWinChipsBefore_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GameOverResultInfo)
    }

    static {
      defaultInstance = new GameOverResultInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GameOverResultInfo)
  }

  public interface EvtGameOverOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 winners = 1 [packed = true];
    /**
     * <code>repeated int32 winners = 1 [packed = true];</code>
     *
     * <pre>
     * winners
     * </pre>
     */
    java.util.List<java.lang.Integer> getWinnersList();
    /**
     * <code>repeated int32 winners = 1 [packed = true];</code>
     *
     * <pre>
     * winners
     * </pre>
     */
    int getWinnersCount();
    /**
     * <code>repeated int32 winners = 1 [packed = true];</code>
     *
     * <pre>
     * winners
     * </pre>
     */
    int getWinners(int index);

    // repeated .GameOverResultInfo result = 2;
    /**
     * <code>repeated .GameOverResultInfo result = 2;</code>
     */
    java.util.List<Mahjong.GameOverResultInfo> 
        getResultList();
    /**
     * <code>repeated .GameOverResultInfo result = 2;</code>
     */
    Mahjong.GameOverResultInfo getResult(int index);
    /**
     * <code>repeated .GameOverResultInfo result = 2;</code>
     */
    int getResultCount();
    /**
     * <code>repeated .GameOverResultInfo result = 2;</code>
     */
    java.util.List<? extends Mahjong.GameOverResultInfoOrBuilder> 
        getResultOrBuilderList();
    /**
     * <code>repeated .GameOverResultInfo result = 2;</code>
     */
    Mahjong.GameOverResultInfoOrBuilder getResultOrBuilder(
        int index);

    // optional int32 deskid = 3;
    /**
     * <code>optional int32 deskid = 3;</code>
     */
    boolean hasDeskid();
    /**
     * <code>optional int32 deskid = 3;</code>
     */
    int getDeskid();

    // optional int32 status = 4;
    /**
     * <code>optional int32 status = 4;</code>
     *
     * <pre>
     * 牌桌状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 4;</code>
     *
     * <pre>
     * 牌桌状态
     * </pre>
     */
    int getStatus();

    // optional int32 remain_round_num = 5;
    /**
     * <code>optional int32 remain_round_num = 5;</code>
     *
     * <pre>
     * 牌桌剩余局数
     * </pre>
     */
    boolean hasRemainRoundNum();
    /**
     * <code>optional int32 remain_round_num = 5;</code>
     *
     * <pre>
     * 牌桌剩余局数
     * </pre>
     */
    int getRemainRoundNum();

    // repeated int32 bird_card = 6 [packed = true];
    /**
     * <code>repeated int32 bird_card = 6 [packed = true];</code>
     *
     * <pre>
     * 抓鸟抓到了什么牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getBirdCardList();
    /**
     * <code>repeated int32 bird_card = 6 [packed = true];</code>
     *
     * <pre>
     * 抓鸟抓到了什么牌
     * </pre>
     */
    int getBirdCardCount();
    /**
     * <code>repeated int32 bird_card = 6 [packed = true];</code>
     *
     * <pre>
     * 抓鸟抓到了什么牌
     * </pre>
     */
    int getBirdCard(int index);

    // optional int32 type = 7;
    /**
     * <code>optional int32 type = 7;</code>
     *
     * <pre>
     * 桌子类型，万载还是转转
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 7;</code>
     *
     * <pre>
     * 桌子类型，万载还是转转
     * </pre>
     */
    int getType();

    // optional int32 seat_limit = 8;
    /**
     * <code>optional int32 seat_limit = 8;</code>
     *
     * <pre>
     * 座位限制
     * </pre>
     */
    boolean hasSeatLimit();
    /**
     * <code>optional int32 seat_limit = 8;</code>
     *
     * <pre>
     * 座位限制
     * </pre>
     */
    int getSeatLimit();

    // optional int32 win_type = 9;
    /**
     * <code>optional int32 win_type = 9;</code>
     *
     * <pre>
     * 1点炮 2自摸                     
     * </pre>
     */
    boolean hasWinType();
    /**
     * <code>optional int32 win_type = 9;</code>
     *
     * <pre>
     * 1点炮 2自摸                     
     * </pre>
     */
    int getWinType();

    // optional .ExtraDeskTypeInfo extra_type = 10;
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 10;</code>
     */
    boolean hasExtraType();
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 10;</code>
     */
    Mahjong.ExtraDeskTypeInfo getExtraType();
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 10;</code>
     */
    Mahjong.ExtraDeskTypeInfoOrBuilder getExtraTypeOrBuilder();

    // optional bool last_round = 11;
    /**
     * <code>optional bool last_round = 11;</code>
     *
     * <pre>
     * True代表总结算 
     * </pre>
     */
    boolean hasLastRound();
    /**
     * <code>optional bool last_round = 11;</code>
     *
     * <pre>
     * True代表总结算 
     * </pre>
     */
    boolean getLastRound();

    // optional int32 over_time = 12;
    /**
     * <code>optional int32 over_time = 12;</code>
     *
     * <pre>
     * 牌局结束时间
     * </pre>
     */
    boolean hasOverTime();
    /**
     * <code>optional int32 over_time = 12;</code>
     *
     * <pre>
     * 牌局结束时间
     * </pre>
     */
    int getOverTime();

    // optional int32 over_reason = 13;
    /**
     * <code>optional int32 over_reason = 13;</code>
     *
     * <pre>
     * 牌局结束原因
     * </pre>
     */
    boolean hasOverReason();
    /**
     * <code>optional int32 over_reason = 13;</code>
     *
     * <pre>
     * 牌局结束原因
     * </pre>
     */
    int getOverReason();
  }
  /**
   * Protobuf type {@code EvtGameOver}
   *
   * <pre>
   * 服务器游戏结束通知 7015
   * </pre>
   */
  public static final class EvtGameOver extends
      com.google.protobuf.GeneratedMessage
      implements EvtGameOverOrBuilder {
    // Use EvtGameOver.newBuilder() to construct.
    private EvtGameOver(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EvtGameOver(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EvtGameOver defaultInstance;
    public static EvtGameOver getDefaultInstance() {
      return defaultInstance;
    }

    public EvtGameOver getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EvtGameOver(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                winners_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              winners_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                winners_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                winners_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                result_ = new java.util.ArrayList<Mahjong.GameOverResultInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              result_.add(input.readMessage(Mahjong.GameOverResultInfo.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              deskid_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              remainRoundNum_ = input.readInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                birdCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              birdCard_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                birdCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                birdCard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              type_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              seatLimit_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              winType_ = input.readInt32();
              break;
            }
            case 82: {
              Mahjong.ExtraDeskTypeInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = extraType_.toBuilder();
              }
              extraType_ = input.readMessage(Mahjong.ExtraDeskTypeInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(extraType_);
                extraType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              lastRound_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              overTime_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000200;
              overReason_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          winners_ = java.util.Collections.unmodifiableList(winners_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          result_ = java.util.Collections.unmodifiableList(result_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          birdCard_ = java.util.Collections.unmodifiableList(birdCard_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_EvtGameOver_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_EvtGameOver_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.EvtGameOver.class, Mahjong.EvtGameOver.Builder.class);
    }

    public static com.google.protobuf.Parser<EvtGameOver> PARSER =
        new com.google.protobuf.AbstractParser<EvtGameOver>() {
      public EvtGameOver parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EvtGameOver(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EvtGameOver> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 winners = 1 [packed = true];
    public static final int WINNERS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> winners_;
    /**
     * <code>repeated int32 winners = 1 [packed = true];</code>
     *
     * <pre>
     * winners
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getWinnersList() {
      return winners_;
    }
    /**
     * <code>repeated int32 winners = 1 [packed = true];</code>
     *
     * <pre>
     * winners
     * </pre>
     */
    public int getWinnersCount() {
      return winners_.size();
    }
    /**
     * <code>repeated int32 winners = 1 [packed = true];</code>
     *
     * <pre>
     * winners
     * </pre>
     */
    public int getWinners(int index) {
      return winners_.get(index);
    }
    private int winnersMemoizedSerializedSize = -1;

    // repeated .GameOverResultInfo result = 2;
    public static final int RESULT_FIELD_NUMBER = 2;
    private java.util.List<Mahjong.GameOverResultInfo> result_;
    /**
     * <code>repeated .GameOverResultInfo result = 2;</code>
     */
    public java.util.List<Mahjong.GameOverResultInfo> getResultList() {
      return result_;
    }
    /**
     * <code>repeated .GameOverResultInfo result = 2;</code>
     */
    public java.util.List<? extends Mahjong.GameOverResultInfoOrBuilder> 
        getResultOrBuilderList() {
      return result_;
    }
    /**
     * <code>repeated .GameOverResultInfo result = 2;</code>
     */
    public int getResultCount() {
      return result_.size();
    }
    /**
     * <code>repeated .GameOverResultInfo result = 2;</code>
     */
    public Mahjong.GameOverResultInfo getResult(int index) {
      return result_.get(index);
    }
    /**
     * <code>repeated .GameOverResultInfo result = 2;</code>
     */
    public Mahjong.GameOverResultInfoOrBuilder getResultOrBuilder(
        int index) {
      return result_.get(index);
    }

    // optional int32 deskid = 3;
    public static final int DESKID_FIELD_NUMBER = 3;
    private int deskid_;
    /**
     * <code>optional int32 deskid = 3;</code>
     */
    public boolean hasDeskid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 deskid = 3;</code>
     */
    public int getDeskid() {
      return deskid_;
    }

    // optional int32 status = 4;
    public static final int STATUS_FIELD_NUMBER = 4;
    private int status_;
    /**
     * <code>optional int32 status = 4;</code>
     *
     * <pre>
     * 牌桌状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 status = 4;</code>
     *
     * <pre>
     * 牌桌状态
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // optional int32 remain_round_num = 5;
    public static final int REMAIN_ROUND_NUM_FIELD_NUMBER = 5;
    private int remainRoundNum_;
    /**
     * <code>optional int32 remain_round_num = 5;</code>
     *
     * <pre>
     * 牌桌剩余局数
     * </pre>
     */
    public boolean hasRemainRoundNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 remain_round_num = 5;</code>
     *
     * <pre>
     * 牌桌剩余局数
     * </pre>
     */
    public int getRemainRoundNum() {
      return remainRoundNum_;
    }

    // repeated int32 bird_card = 6 [packed = true];
    public static final int BIRD_CARD_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> birdCard_;
    /**
     * <code>repeated int32 bird_card = 6 [packed = true];</code>
     *
     * <pre>
     * 抓鸟抓到了什么牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBirdCardList() {
      return birdCard_;
    }
    /**
     * <code>repeated int32 bird_card = 6 [packed = true];</code>
     *
     * <pre>
     * 抓鸟抓到了什么牌
     * </pre>
     */
    public int getBirdCardCount() {
      return birdCard_.size();
    }
    /**
     * <code>repeated int32 bird_card = 6 [packed = true];</code>
     *
     * <pre>
     * 抓鸟抓到了什么牌
     * </pre>
     */
    public int getBirdCard(int index) {
      return birdCard_.get(index);
    }
    private int birdCardMemoizedSerializedSize = -1;

    // optional int32 type = 7;
    public static final int TYPE_FIELD_NUMBER = 7;
    private int type_;
    /**
     * <code>optional int32 type = 7;</code>
     *
     * <pre>
     * 桌子类型，万载还是转转
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 type = 7;</code>
     *
     * <pre>
     * 桌子类型，万载还是转转
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // optional int32 seat_limit = 8;
    public static final int SEAT_LIMIT_FIELD_NUMBER = 8;
    private int seatLimit_;
    /**
     * <code>optional int32 seat_limit = 8;</code>
     *
     * <pre>
     * 座位限制
     * </pre>
     */
    public boolean hasSeatLimit() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 seat_limit = 8;</code>
     *
     * <pre>
     * 座位限制
     * </pre>
     */
    public int getSeatLimit() {
      return seatLimit_;
    }

    // optional int32 win_type = 9;
    public static final int WIN_TYPE_FIELD_NUMBER = 9;
    private int winType_;
    /**
     * <code>optional int32 win_type = 9;</code>
     *
     * <pre>
     * 1点炮 2自摸                     
     * </pre>
     */
    public boolean hasWinType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 win_type = 9;</code>
     *
     * <pre>
     * 1点炮 2自摸                     
     * </pre>
     */
    public int getWinType() {
      return winType_;
    }

    // optional .ExtraDeskTypeInfo extra_type = 10;
    public static final int EXTRA_TYPE_FIELD_NUMBER = 10;
    private Mahjong.ExtraDeskTypeInfo extraType_;
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 10;</code>
     */
    public boolean hasExtraType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 10;</code>
     */
    public Mahjong.ExtraDeskTypeInfo getExtraType() {
      return extraType_;
    }
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 10;</code>
     */
    public Mahjong.ExtraDeskTypeInfoOrBuilder getExtraTypeOrBuilder() {
      return extraType_;
    }

    // optional bool last_round = 11;
    public static final int LAST_ROUND_FIELD_NUMBER = 11;
    private boolean lastRound_;
    /**
     * <code>optional bool last_round = 11;</code>
     *
     * <pre>
     * True代表总结算 
     * </pre>
     */
    public boolean hasLastRound() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool last_round = 11;</code>
     *
     * <pre>
     * True代表总结算 
     * </pre>
     */
    public boolean getLastRound() {
      return lastRound_;
    }

    // optional int32 over_time = 12;
    public static final int OVER_TIME_FIELD_NUMBER = 12;
    private int overTime_;
    /**
     * <code>optional int32 over_time = 12;</code>
     *
     * <pre>
     * 牌局结束时间
     * </pre>
     */
    public boolean hasOverTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 over_time = 12;</code>
     *
     * <pre>
     * 牌局结束时间
     * </pre>
     */
    public int getOverTime() {
      return overTime_;
    }

    // optional int32 over_reason = 13;
    public static final int OVER_REASON_FIELD_NUMBER = 13;
    private int overReason_;
    /**
     * <code>optional int32 over_reason = 13;</code>
     *
     * <pre>
     * 牌局结束原因
     * </pre>
     */
    public boolean hasOverReason() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 over_reason = 13;</code>
     *
     * <pre>
     * 牌局结束原因
     * </pre>
     */
    public int getOverReason() {
      return overReason_;
    }

    private void initFields() {
      winners_ = java.util.Collections.emptyList();
      result_ = java.util.Collections.emptyList();
      deskid_ = 0;
      status_ = 0;
      remainRoundNum_ = 0;
      birdCard_ = java.util.Collections.emptyList();
      type_ = 0;
      seatLimit_ = 0;
      winType_ = 0;
      extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
      lastRound_ = false;
      overTime_ = 0;
      overReason_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getWinnersList().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(winnersMemoizedSerializedSize);
      }
      for (int i = 0; i < winners_.size(); i++) {
        output.writeInt32NoTag(winners_.get(i));
      }
      for (int i = 0; i < result_.size(); i++) {
        output.writeMessage(2, result_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(3, deskid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(5, remainRoundNum_);
      }
      if (getBirdCardList().size() > 0) {
        output.writeRawVarint32(50);
        output.writeRawVarint32(birdCardMemoizedSerializedSize);
      }
      for (int i = 0; i < birdCard_.size(); i++) {
        output.writeInt32NoTag(birdCard_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(7, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, seatLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(9, winType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(10, extraType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(11, lastRound_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(12, overTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(13, overReason_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < winners_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winners_.get(i));
        }
        size += dataSize;
        if (!getWinnersList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        winnersMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < result_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, result_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, deskid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, remainRoundNum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < birdCard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(birdCard_.get(i));
        }
        size += dataSize;
        if (!getBirdCardList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        birdCardMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, seatLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, winType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, extraType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, lastRound_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, overTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, overReason_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.EvtGameOver parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.EvtGameOver parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.EvtGameOver parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.EvtGameOver parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.EvtGameOver parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.EvtGameOver parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.EvtGameOver parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.EvtGameOver parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.EvtGameOver parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.EvtGameOver parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.EvtGameOver prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EvtGameOver}
     *
     * <pre>
     * 服务器游戏结束通知 7015
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.EvtGameOverOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_EvtGameOver_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_EvtGameOver_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.EvtGameOver.class, Mahjong.EvtGameOver.Builder.class);
      }

      // Construct using Mahjong.EvtGameOver.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getResultFieldBuilder();
          getExtraTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        winners_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (resultBuilder_ == null) {
          result_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          resultBuilder_.clear();
        }
        deskid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        remainRoundNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        birdCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        seatLimit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        winType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (extraTypeBuilder_ == null) {
          extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
        } else {
          extraTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        lastRound_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        overTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        overReason_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_EvtGameOver_descriptor;
      }

      public Mahjong.EvtGameOver getDefaultInstanceForType() {
        return Mahjong.EvtGameOver.getDefaultInstance();
      }

      public Mahjong.EvtGameOver build() {
        Mahjong.EvtGameOver result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.EvtGameOver buildPartial() {
        Mahjong.EvtGameOver result = new Mahjong.EvtGameOver(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          winners_ = java.util.Collections.unmodifiableList(winners_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.winners_ = winners_;
        if (resultBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            result_ = java.util.Collections.unmodifiableList(result_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.result_ = result_;
        } else {
          result.result_ = resultBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deskid_ = deskid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.remainRoundNum_ = remainRoundNum_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          birdCard_ = java.util.Collections.unmodifiableList(birdCard_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.birdCard_ = birdCard_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.seatLimit_ = seatLimit_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.winType_ = winType_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        if (extraTypeBuilder_ == null) {
          result.extraType_ = extraType_;
        } else {
          result.extraType_ = extraTypeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        result.lastRound_ = lastRound_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000100;
        }
        result.overTime_ = overTime_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.overReason_ = overReason_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.EvtGameOver) {
          return mergeFrom((Mahjong.EvtGameOver)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.EvtGameOver other) {
        if (other == Mahjong.EvtGameOver.getDefaultInstance()) return this;
        if (!other.winners_.isEmpty()) {
          if (winners_.isEmpty()) {
            winners_ = other.winners_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureWinnersIsMutable();
            winners_.addAll(other.winners_);
          }
          onChanged();
        }
        if (resultBuilder_ == null) {
          if (!other.result_.isEmpty()) {
            if (result_.isEmpty()) {
              result_ = other.result_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureResultIsMutable();
              result_.addAll(other.result_);
            }
            onChanged();
          }
        } else {
          if (!other.result_.isEmpty()) {
            if (resultBuilder_.isEmpty()) {
              resultBuilder_.dispose();
              resultBuilder_ = null;
              result_ = other.result_;
              bitField0_ = (bitField0_ & ~0x00000002);
              resultBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getResultFieldBuilder() : null;
            } else {
              resultBuilder_.addAllMessages(other.result_);
            }
          }
        }
        if (other.hasDeskid()) {
          setDeskid(other.getDeskid());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRemainRoundNum()) {
          setRemainRoundNum(other.getRemainRoundNum());
        }
        if (!other.birdCard_.isEmpty()) {
          if (birdCard_.isEmpty()) {
            birdCard_ = other.birdCard_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureBirdCardIsMutable();
            birdCard_.addAll(other.birdCard_);
          }
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasSeatLimit()) {
          setSeatLimit(other.getSeatLimit());
        }
        if (other.hasWinType()) {
          setWinType(other.getWinType());
        }
        if (other.hasExtraType()) {
          mergeExtraType(other.getExtraType());
        }
        if (other.hasLastRound()) {
          setLastRound(other.getLastRound());
        }
        if (other.hasOverTime()) {
          setOverTime(other.getOverTime());
        }
        if (other.hasOverReason()) {
          setOverReason(other.getOverReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.EvtGameOver parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.EvtGameOver) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 winners = 1 [packed = true];
      private java.util.List<java.lang.Integer> winners_ = java.util.Collections.emptyList();
      private void ensureWinnersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          winners_ = new java.util.ArrayList<java.lang.Integer>(winners_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 winners = 1 [packed = true];</code>
       *
       * <pre>
       * winners
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getWinnersList() {
        return java.util.Collections.unmodifiableList(winners_);
      }
      /**
       * <code>repeated int32 winners = 1 [packed = true];</code>
       *
       * <pre>
       * winners
       * </pre>
       */
      public int getWinnersCount() {
        return winners_.size();
      }
      /**
       * <code>repeated int32 winners = 1 [packed = true];</code>
       *
       * <pre>
       * winners
       * </pre>
       */
      public int getWinners(int index) {
        return winners_.get(index);
      }
      /**
       * <code>repeated int32 winners = 1 [packed = true];</code>
       *
       * <pre>
       * winners
       * </pre>
       */
      public Builder setWinners(
          int index, int value) {
        ensureWinnersIsMutable();
        winners_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winners = 1 [packed = true];</code>
       *
       * <pre>
       * winners
       * </pre>
       */
      public Builder addWinners(int value) {
        ensureWinnersIsMutable();
        winners_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winners = 1 [packed = true];</code>
       *
       * <pre>
       * winners
       * </pre>
       */
      public Builder addAllWinners(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinnersIsMutable();
        super.addAll(values, winners_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winners = 1 [packed = true];</code>
       *
       * <pre>
       * winners
       * </pre>
       */
      public Builder clearWinners() {
        winners_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated .GameOverResultInfo result = 2;
      private java.util.List<Mahjong.GameOverResultInfo> result_ =
        java.util.Collections.emptyList();
      private void ensureResultIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          result_ = new java.util.ArrayList<Mahjong.GameOverResultInfo>(result_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.GameOverResultInfo, Mahjong.GameOverResultInfo.Builder, Mahjong.GameOverResultInfoOrBuilder> resultBuilder_;

      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public java.util.List<Mahjong.GameOverResultInfo> getResultList() {
        if (resultBuilder_ == null) {
          return java.util.Collections.unmodifiableList(result_);
        } else {
          return resultBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public int getResultCount() {
        if (resultBuilder_ == null) {
          return result_.size();
        } else {
          return resultBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public Mahjong.GameOverResultInfo getResult(int index) {
        if (resultBuilder_ == null) {
          return result_.get(index);
        } else {
          return resultBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public Builder setResult(
          int index, Mahjong.GameOverResultInfo value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultIsMutable();
          result_.set(index, value);
          onChanged();
        } else {
          resultBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public Builder setResult(
          int index, Mahjong.GameOverResultInfo.Builder builderForValue) {
        if (resultBuilder_ == null) {
          ensureResultIsMutable();
          result_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public Builder addResult(Mahjong.GameOverResultInfo value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultIsMutable();
          result_.add(value);
          onChanged();
        } else {
          resultBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public Builder addResult(
          int index, Mahjong.GameOverResultInfo value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultIsMutable();
          result_.add(index, value);
          onChanged();
        } else {
          resultBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public Builder addResult(
          Mahjong.GameOverResultInfo.Builder builderForValue) {
        if (resultBuilder_ == null) {
          ensureResultIsMutable();
          result_.add(builderForValue.build());
          onChanged();
        } else {
          resultBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public Builder addResult(
          int index, Mahjong.GameOverResultInfo.Builder builderForValue) {
        if (resultBuilder_ == null) {
          ensureResultIsMutable();
          result_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public Builder addAllResult(
          java.lang.Iterable<? extends Mahjong.GameOverResultInfo> values) {
        if (resultBuilder_ == null) {
          ensureResultIsMutable();
          super.addAll(values, result_);
          onChanged();
        } else {
          resultBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public Builder clearResult() {
        if (resultBuilder_ == null) {
          result_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          resultBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public Builder removeResult(int index) {
        if (resultBuilder_ == null) {
          ensureResultIsMutable();
          result_.remove(index);
          onChanged();
        } else {
          resultBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public Mahjong.GameOverResultInfo.Builder getResultBuilder(
          int index) {
        return getResultFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public Mahjong.GameOverResultInfoOrBuilder getResultOrBuilder(
          int index) {
        if (resultBuilder_ == null) {
          return result_.get(index);  } else {
          return resultBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public java.util.List<? extends Mahjong.GameOverResultInfoOrBuilder> 
           getResultOrBuilderList() {
        if (resultBuilder_ != null) {
          return resultBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(result_);
        }
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public Mahjong.GameOverResultInfo.Builder addResultBuilder() {
        return getResultFieldBuilder().addBuilder(
            Mahjong.GameOverResultInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public Mahjong.GameOverResultInfo.Builder addResultBuilder(
          int index) {
        return getResultFieldBuilder().addBuilder(
            index, Mahjong.GameOverResultInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .GameOverResultInfo result = 2;</code>
       */
      public java.util.List<Mahjong.GameOverResultInfo.Builder> 
           getResultBuilderList() {
        return getResultFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.GameOverResultInfo, Mahjong.GameOverResultInfo.Builder, Mahjong.GameOverResultInfoOrBuilder> 
          getResultFieldBuilder() {
        if (resultBuilder_ == null) {
          resultBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Mahjong.GameOverResultInfo, Mahjong.GameOverResultInfo.Builder, Mahjong.GameOverResultInfoOrBuilder>(
                  result_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          result_ = null;
        }
        return resultBuilder_;
      }

      // optional int32 deskid = 3;
      private int deskid_ ;
      /**
       * <code>optional int32 deskid = 3;</code>
       */
      public boolean hasDeskid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 deskid = 3;</code>
       */
      public int getDeskid() {
        return deskid_;
      }
      /**
       * <code>optional int32 deskid = 3;</code>
       */
      public Builder setDeskid(int value) {
        bitField0_ |= 0x00000004;
        deskid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 deskid = 3;</code>
       */
      public Builder clearDeskid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        deskid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 status = 4;
      private int status_ ;
      /**
       * <code>optional int32 status = 4;</code>
       *
       * <pre>
       * 牌桌状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 status = 4;</code>
       *
       * <pre>
       * 牌桌状态
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 4;</code>
       *
       * <pre>
       * 牌桌状态
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000008;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 4;</code>
       *
       * <pre>
       * 牌桌状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remain_round_num = 5;
      private int remainRoundNum_ ;
      /**
       * <code>optional int32 remain_round_num = 5;</code>
       *
       * <pre>
       * 牌桌剩余局数
       * </pre>
       */
      public boolean hasRemainRoundNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 remain_round_num = 5;</code>
       *
       * <pre>
       * 牌桌剩余局数
       * </pre>
       */
      public int getRemainRoundNum() {
        return remainRoundNum_;
      }
      /**
       * <code>optional int32 remain_round_num = 5;</code>
       *
       * <pre>
       * 牌桌剩余局数
       * </pre>
       */
      public Builder setRemainRoundNum(int value) {
        bitField0_ |= 0x00000010;
        remainRoundNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remain_round_num = 5;</code>
       *
       * <pre>
       * 牌桌剩余局数
       * </pre>
       */
      public Builder clearRemainRoundNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        remainRoundNum_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 bird_card = 6 [packed = true];
      private java.util.List<java.lang.Integer> birdCard_ = java.util.Collections.emptyList();
      private void ensureBirdCardIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          birdCard_ = new java.util.ArrayList<java.lang.Integer>(birdCard_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 bird_card = 6 [packed = true];</code>
       *
       * <pre>
       * 抓鸟抓到了什么牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBirdCardList() {
        return java.util.Collections.unmodifiableList(birdCard_);
      }
      /**
       * <code>repeated int32 bird_card = 6 [packed = true];</code>
       *
       * <pre>
       * 抓鸟抓到了什么牌
       * </pre>
       */
      public int getBirdCardCount() {
        return birdCard_.size();
      }
      /**
       * <code>repeated int32 bird_card = 6 [packed = true];</code>
       *
       * <pre>
       * 抓鸟抓到了什么牌
       * </pre>
       */
      public int getBirdCard(int index) {
        return birdCard_.get(index);
      }
      /**
       * <code>repeated int32 bird_card = 6 [packed = true];</code>
       *
       * <pre>
       * 抓鸟抓到了什么牌
       * </pre>
       */
      public Builder setBirdCard(
          int index, int value) {
        ensureBirdCardIsMutable();
        birdCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bird_card = 6 [packed = true];</code>
       *
       * <pre>
       * 抓鸟抓到了什么牌
       * </pre>
       */
      public Builder addBirdCard(int value) {
        ensureBirdCardIsMutable();
        birdCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bird_card = 6 [packed = true];</code>
       *
       * <pre>
       * 抓鸟抓到了什么牌
       * </pre>
       */
      public Builder addAllBirdCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBirdCardIsMutable();
        super.addAll(values, birdCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bird_card = 6 [packed = true];</code>
       *
       * <pre>
       * 抓鸟抓到了什么牌
       * </pre>
       */
      public Builder clearBirdCard() {
        birdCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 type = 7;
      private int type_ ;
      /**
       * <code>optional int32 type = 7;</code>
       *
       * <pre>
       * 桌子类型，万载还是转转
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 type = 7;</code>
       *
       * <pre>
       * 桌子类型，万载还是转转
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 7;</code>
       *
       * <pre>
       * 桌子类型，万载还是转转
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000040;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 7;</code>
       *
       * <pre>
       * 桌子类型，万载还是转转
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat_limit = 8;
      private int seatLimit_ ;
      /**
       * <code>optional int32 seat_limit = 8;</code>
       *
       * <pre>
       * 座位限制
       * </pre>
       */
      public boolean hasSeatLimit() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 seat_limit = 8;</code>
       *
       * <pre>
       * 座位限制
       * </pre>
       */
      public int getSeatLimit() {
        return seatLimit_;
      }
      /**
       * <code>optional int32 seat_limit = 8;</code>
       *
       * <pre>
       * 座位限制
       * </pre>
       */
      public Builder setSeatLimit(int value) {
        bitField0_ |= 0x00000080;
        seatLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_limit = 8;</code>
       *
       * <pre>
       * 座位限制
       * </pre>
       */
      public Builder clearSeatLimit() {
        bitField0_ = (bitField0_ & ~0x00000080);
        seatLimit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 win_type = 9;
      private int winType_ ;
      /**
       * <code>optional int32 win_type = 9;</code>
       *
       * <pre>
       * 1点炮 2自摸                     
       * </pre>
       */
      public boolean hasWinType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 win_type = 9;</code>
       *
       * <pre>
       * 1点炮 2自摸                     
       * </pre>
       */
      public int getWinType() {
        return winType_;
      }
      /**
       * <code>optional int32 win_type = 9;</code>
       *
       * <pre>
       * 1点炮 2自摸                     
       * </pre>
       */
      public Builder setWinType(int value) {
        bitField0_ |= 0x00000100;
        winType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 win_type = 9;</code>
       *
       * <pre>
       * 1点炮 2自摸                     
       * </pre>
       */
      public Builder clearWinType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        winType_ = 0;
        onChanged();
        return this;
      }

      // optional .ExtraDeskTypeInfo extra_type = 10;
      private Mahjong.ExtraDeskTypeInfo extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.ExtraDeskTypeInfo, Mahjong.ExtraDeskTypeInfo.Builder, Mahjong.ExtraDeskTypeInfoOrBuilder> extraTypeBuilder_;
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 10;</code>
       */
      public boolean hasExtraType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 10;</code>
       */
      public Mahjong.ExtraDeskTypeInfo getExtraType() {
        if (extraTypeBuilder_ == null) {
          return extraType_;
        } else {
          return extraTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 10;</code>
       */
      public Builder setExtraType(Mahjong.ExtraDeskTypeInfo value) {
        if (extraTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          extraType_ = value;
          onChanged();
        } else {
          extraTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 10;</code>
       */
      public Builder setExtraType(
          Mahjong.ExtraDeskTypeInfo.Builder builderForValue) {
        if (extraTypeBuilder_ == null) {
          extraType_ = builderForValue.build();
          onChanged();
        } else {
          extraTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 10;</code>
       */
      public Builder mergeExtraType(Mahjong.ExtraDeskTypeInfo value) {
        if (extraTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              extraType_ != Mahjong.ExtraDeskTypeInfo.getDefaultInstance()) {
            extraType_ =
              Mahjong.ExtraDeskTypeInfo.newBuilder(extraType_).mergeFrom(value).buildPartial();
          } else {
            extraType_ = value;
          }
          onChanged();
        } else {
          extraTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 10;</code>
       */
      public Builder clearExtraType() {
        if (extraTypeBuilder_ == null) {
          extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
          onChanged();
        } else {
          extraTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 10;</code>
       */
      public Mahjong.ExtraDeskTypeInfo.Builder getExtraTypeBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getExtraTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 10;</code>
       */
      public Mahjong.ExtraDeskTypeInfoOrBuilder getExtraTypeOrBuilder() {
        if (extraTypeBuilder_ != null) {
          return extraTypeBuilder_.getMessageOrBuilder();
        } else {
          return extraType_;
        }
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.ExtraDeskTypeInfo, Mahjong.ExtraDeskTypeInfo.Builder, Mahjong.ExtraDeskTypeInfoOrBuilder> 
          getExtraTypeFieldBuilder() {
        if (extraTypeBuilder_ == null) {
          extraTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Mahjong.ExtraDeskTypeInfo, Mahjong.ExtraDeskTypeInfo.Builder, Mahjong.ExtraDeskTypeInfoOrBuilder>(
                  extraType_,
                  getParentForChildren(),
                  isClean());
          extraType_ = null;
        }
        return extraTypeBuilder_;
      }

      // optional bool last_round = 11;
      private boolean lastRound_ ;
      /**
       * <code>optional bool last_round = 11;</code>
       *
       * <pre>
       * True代表总结算 
       * </pre>
       */
      public boolean hasLastRound() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool last_round = 11;</code>
       *
       * <pre>
       * True代表总结算 
       * </pre>
       */
      public boolean getLastRound() {
        return lastRound_;
      }
      /**
       * <code>optional bool last_round = 11;</code>
       *
       * <pre>
       * True代表总结算 
       * </pre>
       */
      public Builder setLastRound(boolean value) {
        bitField0_ |= 0x00000400;
        lastRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool last_round = 11;</code>
       *
       * <pre>
       * True代表总结算 
       * </pre>
       */
      public Builder clearLastRound() {
        bitField0_ = (bitField0_ & ~0x00000400);
        lastRound_ = false;
        onChanged();
        return this;
      }

      // optional int32 over_time = 12;
      private int overTime_ ;
      /**
       * <code>optional int32 over_time = 12;</code>
       *
       * <pre>
       * 牌局结束时间
       * </pre>
       */
      public boolean hasOverTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 over_time = 12;</code>
       *
       * <pre>
       * 牌局结束时间
       * </pre>
       */
      public int getOverTime() {
        return overTime_;
      }
      /**
       * <code>optional int32 over_time = 12;</code>
       *
       * <pre>
       * 牌局结束时间
       * </pre>
       */
      public Builder setOverTime(int value) {
        bitField0_ |= 0x00000800;
        overTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 over_time = 12;</code>
       *
       * <pre>
       * 牌局结束时间
       * </pre>
       */
      public Builder clearOverTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        overTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 over_reason = 13;
      private int overReason_ ;
      /**
       * <code>optional int32 over_reason = 13;</code>
       *
       * <pre>
       * 牌局结束原因
       * </pre>
       */
      public boolean hasOverReason() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 over_reason = 13;</code>
       *
       * <pre>
       * 牌局结束原因
       * </pre>
       */
      public int getOverReason() {
        return overReason_;
      }
      /**
       * <code>optional int32 over_reason = 13;</code>
       *
       * <pre>
       * 牌局结束原因
       * </pre>
       */
      public Builder setOverReason(int value) {
        bitField0_ |= 0x00001000;
        overReason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 over_reason = 13;</code>
       *
       * <pre>
       * 牌局结束原因
       * </pre>
       */
      public Builder clearOverReason() {
        bitField0_ = (bitField0_ & ~0x00001000);
        overReason_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EvtGameOver)
    }

    static {
      defaultInstance = new EvtGameOver(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EvtGameOver)
  }

  public interface RecordInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 uin = 1;
    /**
     * <code>optional int32 uin = 1;</code>
     */
    boolean hasUin();
    /**
     * <code>optional int32 uin = 1;</code>
     */
    int getUin();

    // optional int32 role = 2;
    /**
     * <code>optional int32 role = 2;</code>
     */
    boolean hasRole();
    /**
     * <code>optional int32 role = 2;</code>
     */
    int getRole();

    // optional int64 chips = 3;
    /**
     * <code>optional int64 chips = 3;</code>
     */
    boolean hasChips();
    /**
     * <code>optional int64 chips = 3;</code>
     */
    long getChips();

    // optional int32 round_win_chips = 4;
    /**
     * <code>optional int32 round_win_chips = 4;</code>
     */
    boolean hasRoundWinChips();
    /**
     * <code>optional int32 round_win_chips = 4;</code>
     */
    int getRoundWinChips();

    // optional int32 round_chi_num = 5;
    /**
     * <code>optional int32 round_chi_num = 5;</code>
     */
    boolean hasRoundChiNum();
    /**
     * <code>optional int32 round_chi_num = 5;</code>
     */
    int getRoundChiNum();

    // optional int32 round_peng_num = 6;
    /**
     * <code>optional int32 round_peng_num = 6;</code>
     */
    boolean hasRoundPengNum();
    /**
     * <code>optional int32 round_peng_num = 6;</code>
     */
    int getRoundPengNum();

    // repeated int32 round_gang_list = 7;
    /**
     * <code>repeated int32 round_gang_list = 7;</code>
     *
     * <pre>
     * 1暗杠 2擦杠 3明杠
     * </pre>
     */
    java.util.List<java.lang.Integer> getRoundGangListList();
    /**
     * <code>repeated int32 round_gang_list = 7;</code>
     *
     * <pre>
     * 1暗杠 2擦杠 3明杠
     * </pre>
     */
    int getRoundGangListCount();
    /**
     * <code>repeated int32 round_gang_list = 7;</code>
     *
     * <pre>
     * 1暗杠 2擦杠 3明杠
     * </pre>
     */
    int getRoundGangList(int index);

    // repeated int32 round_hu_list = 8;
    /**
     * <code>repeated int32 round_hu_list = 8;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getRoundHuListList();
    /**
     * <code>repeated int32 round_hu_list = 8;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    int getRoundHuListCount();
    /**
     * <code>repeated int32 round_hu_list = 8;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    int getRoundHuList(int index);

    // repeated int32 round_win_list = 9;
    /**
     * <code>repeated int32 round_win_list = 9;</code>
     *
     * <pre>
     * 1自摸 2接炮 3放炮
     * </pre>
     */
    java.util.List<java.lang.Integer> getRoundWinListList();
    /**
     * <code>repeated int32 round_win_list = 9;</code>
     *
     * <pre>
     * 1自摸 2接炮 3放炮
     * </pre>
     */
    int getRoundWinListCount();
    /**
     * <code>repeated int32 round_win_list = 9;</code>
     *
     * <pre>
     * 1自摸 2接炮 3放炮
     * </pre>
     */
    int getRoundWinList(int index);

    // optional int32 total_chi_num = 10;
    /**
     * <code>optional int32 total_chi_num = 10;</code>
     */
    boolean hasTotalChiNum();
    /**
     * <code>optional int32 total_chi_num = 10;</code>
     */
    int getTotalChiNum();

    // optional int32 total_peng_num = 11;
    /**
     * <code>optional int32 total_peng_num = 11;</code>
     */
    boolean hasTotalPengNum();
    /**
     * <code>optional int32 total_peng_num = 11;</code>
     */
    int getTotalPengNum();

    // repeated int32 total_gang_list = 12;
    /**
     * <code>repeated int32 total_gang_list = 12;</code>
     */
    java.util.List<java.lang.Integer> getTotalGangListList();
    /**
     * <code>repeated int32 total_gang_list = 12;</code>
     */
    int getTotalGangListCount();
    /**
     * <code>repeated int32 total_gang_list = 12;</code>
     */
    int getTotalGangList(int index);

    // repeated int32 total_hu_list = 13;
    /**
     * <code>repeated int32 total_hu_list = 13;</code>
     *
     * <pre>
     * 总的胡牌列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getTotalHuListList();
    /**
     * <code>repeated int32 total_hu_list = 13;</code>
     *
     * <pre>
     * 总的胡牌列表
     * </pre>
     */
    int getTotalHuListCount();
    /**
     * <code>repeated int32 total_hu_list = 13;</code>
     *
     * <pre>
     * 总的胡牌列表
     * </pre>
     */
    int getTotalHuList(int index);

    // repeated int32 total_win_list = 14;
    /**
     * <code>repeated int32 total_win_list = 14;</code>
     */
    java.util.List<java.lang.Integer> getTotalWinListList();
    /**
     * <code>repeated int32 total_win_list = 14;</code>
     */
    int getTotalWinListCount();
    /**
     * <code>repeated int32 total_win_list = 14;</code>
     */
    int getTotalWinList(int index);

    // optional int32 piaofen = 15;
    /**
     * <code>optional int32 piaofen = 15;</code>
     *
     * <pre>
     * -1无选择
     * </pre>
     */
    boolean hasPiaofen();
    /**
     * <code>optional int32 piaofen = 15;</code>
     *
     * <pre>
     * -1无选择
     * </pre>
     */
    int getPiaofen();

    // optional int32 shanghuo = 16;
    /**
     * <code>optional int32 shanghuo = 16;</code>
     *
     * <pre>
     * -1无选择 1不上火 2上火
     * </pre>
     */
    boolean hasShanghuo();
    /**
     * <code>optional int32 shanghuo = 16;</code>
     *
     * <pre>
     * -1无选择 1不上火 2上火
     * </pre>
     */
    int getShanghuo();

    // optional int32 bird_num = 17;
    /**
     * <code>optional int32 bird_num = 17;</code>
     *
     * <pre>
     * 抓到多少张鸟
     * </pre>
     */
    boolean hasBirdNum();
    /**
     * <code>optional int32 bird_num = 17;</code>
     *
     * <pre>
     * 抓到多少张鸟
     * </pre>
     */
    int getBirdNum();

    // repeated int32 cards = 18;
    /**
     * <code>repeated int32 cards = 18;</code>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 18;</code>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 18;</code>
     */
    int getCards(int index);

    // repeated int32 out_cards = 19;
    /**
     * <code>repeated int32 out_cards = 19;</code>
     */
    java.util.List<java.lang.Integer> getOutCardsList();
    /**
     * <code>repeated int32 out_cards = 19;</code>
     */
    int getOutCardsCount();
    /**
     * <code>repeated int32 out_cards = 19;</code>
     */
    int getOutCards(int index);

    // repeated int32 op_list = 20;
    /**
     * <code>repeated int32 op_list = 20;</code>
     */
    java.util.List<java.lang.Integer> getOpListList();
    /**
     * <code>repeated int32 op_list = 20;</code>
     */
    int getOpListCount();
    /**
     * <code>repeated int32 op_list = 20;</code>
     */
    int getOpList(int index);

    // repeated int32 over_chips_details = 21;
    /**
     * <code>repeated int32 over_chips_details = 21;</code>
     *
     * <pre>
     *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
     * </pre>
     */
    java.util.List<java.lang.Integer> getOverChipsDetailsList();
    /**
     * <code>repeated int32 over_chips_details = 21;</code>
     *
     * <pre>
     *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
     * </pre>
     */
    int getOverChipsDetailsCount();
    /**
     * <code>repeated int32 over_chips_details = 21;</code>
     *
     * <pre>
     *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
     * </pre>
     */
    int getOverChipsDetails(int index);

    // optional int32 round_win_chips_before = 22;
    /**
     * <code>optional int32 round_win_chips_before = 22;</code>
     */
    boolean hasRoundWinChipsBefore();
    /**
     * <code>optional int32 round_win_chips_before = 22;</code>
     */
    int getRoundWinChipsBefore();

    // optional string nick = 23;
    /**
     * <code>optional string nick = 23;</code>
     */
    boolean hasNick();
    /**
     * <code>optional string nick = 23;</code>
     */
    java.lang.String getNick();
    /**
     * <code>optional string nick = 23;</code>
     */
    com.google.protobuf.ByteString
        getNickBytes();

    // optional int32 seatid = 24;
    /**
     * <code>optional int32 seatid = 24;</code>
     */
    boolean hasSeatid();
    /**
     * <code>optional int32 seatid = 24;</code>
     */
    int getSeatid();

    // optional int32 sex = 25;
    /**
     * <code>optional int32 sex = 25;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 25;</code>
     */
    int getSex();

    // optional string portrait = 26;
    /**
     * <code>optional string portrait = 26;</code>
     *
     * <pre>
     * 头像url
     * </pre>
     */
    boolean hasPortrait();
    /**
     * <code>optional string portrait = 26;</code>
     *
     * <pre>
     * 头像url
     * </pre>
     */
    java.lang.String getPortrait();
    /**
     * <code>optional string portrait = 26;</code>
     *
     * <pre>
     * 头像url
     * </pre>
     */
    com.google.protobuf.ByteString
        getPortraitBytes();
  }
  /**
   * Protobuf type {@code RecordInfo}
   */
  public static final class RecordInfo extends
      com.google.protobuf.GeneratedMessage
      implements RecordInfoOrBuilder {
    // Use RecordInfo.newBuilder() to construct.
    private RecordInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RecordInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RecordInfo defaultInstance;
    public static RecordInfo getDefaultInstance() {
      return defaultInstance;
    }

    public RecordInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RecordInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uin_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              role_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              chips_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              roundWinChips_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              roundChiNum_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              roundPengNum_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                roundGangList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              roundGangList_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                roundGangList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                roundGangList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                roundHuList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              roundHuList_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                roundHuList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                roundHuList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                roundWinList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              roundWinList_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                roundWinList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                roundWinList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              totalChiNum_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              totalPengNum_ = input.readInt32();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                totalGangList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              totalGangList_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                totalGangList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                totalGangList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                totalHuList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              totalHuList_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                totalHuList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                totalHuList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                totalWinList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              totalWinList_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                totalWinList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                totalWinList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              bitField0_ |= 0x00000100;
              piaofen_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000200;
              shanghuo_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00000400;
              birdNum_ = input.readInt32();
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 152: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                outCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              outCards_.add(input.readInt32());
              break;
            }
            case 154: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                outCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                outCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 160: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                opList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              opList_.add(input.readInt32());
              break;
            }
            case 162: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000) && input.getBytesUntilLimit() > 0) {
                opList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              while (input.getBytesUntilLimit() > 0) {
                opList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                overChipsDetails_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              overChipsDetails_.add(input.readInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                overChipsDetails_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                overChipsDetails_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 176: {
              bitField0_ |= 0x00000800;
              roundWinChipsBefore_ = input.readInt32();
              break;
            }
            case 186: {
              bitField0_ |= 0x00001000;
              nick_ = input.readBytes();
              break;
            }
            case 192: {
              bitField0_ |= 0x00002000;
              seatid_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x00004000;
              sex_ = input.readInt32();
              break;
            }
            case 210: {
              bitField0_ |= 0x00008000;
              portrait_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          roundGangList_ = java.util.Collections.unmodifiableList(roundGangList_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          roundHuList_ = java.util.Collections.unmodifiableList(roundHuList_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          roundWinList_ = java.util.Collections.unmodifiableList(roundWinList_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          totalGangList_ = java.util.Collections.unmodifiableList(totalGangList_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          totalHuList_ = java.util.Collections.unmodifiableList(totalHuList_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          totalWinList_ = java.util.Collections.unmodifiableList(totalWinList_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          outCards_ = java.util.Collections.unmodifiableList(outCards_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          opList_ = java.util.Collections.unmodifiableList(opList_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          overChipsDetails_ = java.util.Collections.unmodifiableList(overChipsDetails_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_RecordInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_RecordInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.RecordInfo.class, Mahjong.RecordInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<RecordInfo> PARSER =
        new com.google.protobuf.AbstractParser<RecordInfo>() {
      public RecordInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RecordInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RecordInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 uin = 1;
    public static final int UIN_FIELD_NUMBER = 1;
    private int uin_;
    /**
     * <code>optional int32 uin = 1;</code>
     */
    public boolean hasUin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 uin = 1;</code>
     */
    public int getUin() {
      return uin_;
    }

    // optional int32 role = 2;
    public static final int ROLE_FIELD_NUMBER = 2;
    private int role_;
    /**
     * <code>optional int32 role = 2;</code>
     */
    public boolean hasRole() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 role = 2;</code>
     */
    public int getRole() {
      return role_;
    }

    // optional int64 chips = 3;
    public static final int CHIPS_FIELD_NUMBER = 3;
    private long chips_;
    /**
     * <code>optional int64 chips = 3;</code>
     */
    public boolean hasChips() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 chips = 3;</code>
     */
    public long getChips() {
      return chips_;
    }

    // optional int32 round_win_chips = 4;
    public static final int ROUND_WIN_CHIPS_FIELD_NUMBER = 4;
    private int roundWinChips_;
    /**
     * <code>optional int32 round_win_chips = 4;</code>
     */
    public boolean hasRoundWinChips() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 round_win_chips = 4;</code>
     */
    public int getRoundWinChips() {
      return roundWinChips_;
    }

    // optional int32 round_chi_num = 5;
    public static final int ROUND_CHI_NUM_FIELD_NUMBER = 5;
    private int roundChiNum_;
    /**
     * <code>optional int32 round_chi_num = 5;</code>
     */
    public boolean hasRoundChiNum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 round_chi_num = 5;</code>
     */
    public int getRoundChiNum() {
      return roundChiNum_;
    }

    // optional int32 round_peng_num = 6;
    public static final int ROUND_PENG_NUM_FIELD_NUMBER = 6;
    private int roundPengNum_;
    /**
     * <code>optional int32 round_peng_num = 6;</code>
     */
    public boolean hasRoundPengNum() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 round_peng_num = 6;</code>
     */
    public int getRoundPengNum() {
      return roundPengNum_;
    }

    // repeated int32 round_gang_list = 7;
    public static final int ROUND_GANG_LIST_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> roundGangList_;
    /**
     * <code>repeated int32 round_gang_list = 7;</code>
     *
     * <pre>
     * 1暗杠 2擦杠 3明杠
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRoundGangListList() {
      return roundGangList_;
    }
    /**
     * <code>repeated int32 round_gang_list = 7;</code>
     *
     * <pre>
     * 1暗杠 2擦杠 3明杠
     * </pre>
     */
    public int getRoundGangListCount() {
      return roundGangList_.size();
    }
    /**
     * <code>repeated int32 round_gang_list = 7;</code>
     *
     * <pre>
     * 1暗杠 2擦杠 3明杠
     * </pre>
     */
    public int getRoundGangList(int index) {
      return roundGangList_.get(index);
    }

    // repeated int32 round_hu_list = 8;
    public static final int ROUND_HU_LIST_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> roundHuList_;
    /**
     * <code>repeated int32 round_hu_list = 8;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRoundHuListList() {
      return roundHuList_;
    }
    /**
     * <code>repeated int32 round_hu_list = 8;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    public int getRoundHuListCount() {
      return roundHuList_.size();
    }
    /**
     * <code>repeated int32 round_hu_list = 8;</code>
     *
     * <pre>
     * 胡牌
     * </pre>
     */
    public int getRoundHuList(int index) {
      return roundHuList_.get(index);
    }

    // repeated int32 round_win_list = 9;
    public static final int ROUND_WIN_LIST_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> roundWinList_;
    /**
     * <code>repeated int32 round_win_list = 9;</code>
     *
     * <pre>
     * 1自摸 2接炮 3放炮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRoundWinListList() {
      return roundWinList_;
    }
    /**
     * <code>repeated int32 round_win_list = 9;</code>
     *
     * <pre>
     * 1自摸 2接炮 3放炮
     * </pre>
     */
    public int getRoundWinListCount() {
      return roundWinList_.size();
    }
    /**
     * <code>repeated int32 round_win_list = 9;</code>
     *
     * <pre>
     * 1自摸 2接炮 3放炮
     * </pre>
     */
    public int getRoundWinList(int index) {
      return roundWinList_.get(index);
    }

    // optional int32 total_chi_num = 10;
    public static final int TOTAL_CHI_NUM_FIELD_NUMBER = 10;
    private int totalChiNum_;
    /**
     * <code>optional int32 total_chi_num = 10;</code>
     */
    public boolean hasTotalChiNum() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 total_chi_num = 10;</code>
     */
    public int getTotalChiNum() {
      return totalChiNum_;
    }

    // optional int32 total_peng_num = 11;
    public static final int TOTAL_PENG_NUM_FIELD_NUMBER = 11;
    private int totalPengNum_;
    /**
     * <code>optional int32 total_peng_num = 11;</code>
     */
    public boolean hasTotalPengNum() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 total_peng_num = 11;</code>
     */
    public int getTotalPengNum() {
      return totalPengNum_;
    }

    // repeated int32 total_gang_list = 12;
    public static final int TOTAL_GANG_LIST_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> totalGangList_;
    /**
     * <code>repeated int32 total_gang_list = 12;</code>
     */
    public java.util.List<java.lang.Integer>
        getTotalGangListList() {
      return totalGangList_;
    }
    /**
     * <code>repeated int32 total_gang_list = 12;</code>
     */
    public int getTotalGangListCount() {
      return totalGangList_.size();
    }
    /**
     * <code>repeated int32 total_gang_list = 12;</code>
     */
    public int getTotalGangList(int index) {
      return totalGangList_.get(index);
    }

    // repeated int32 total_hu_list = 13;
    public static final int TOTAL_HU_LIST_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> totalHuList_;
    /**
     * <code>repeated int32 total_hu_list = 13;</code>
     *
     * <pre>
     * 总的胡牌列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTotalHuListList() {
      return totalHuList_;
    }
    /**
     * <code>repeated int32 total_hu_list = 13;</code>
     *
     * <pre>
     * 总的胡牌列表
     * </pre>
     */
    public int getTotalHuListCount() {
      return totalHuList_.size();
    }
    /**
     * <code>repeated int32 total_hu_list = 13;</code>
     *
     * <pre>
     * 总的胡牌列表
     * </pre>
     */
    public int getTotalHuList(int index) {
      return totalHuList_.get(index);
    }

    // repeated int32 total_win_list = 14;
    public static final int TOTAL_WIN_LIST_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> totalWinList_;
    /**
     * <code>repeated int32 total_win_list = 14;</code>
     */
    public java.util.List<java.lang.Integer>
        getTotalWinListList() {
      return totalWinList_;
    }
    /**
     * <code>repeated int32 total_win_list = 14;</code>
     */
    public int getTotalWinListCount() {
      return totalWinList_.size();
    }
    /**
     * <code>repeated int32 total_win_list = 14;</code>
     */
    public int getTotalWinList(int index) {
      return totalWinList_.get(index);
    }

    // optional int32 piaofen = 15;
    public static final int PIAOFEN_FIELD_NUMBER = 15;
    private int piaofen_;
    /**
     * <code>optional int32 piaofen = 15;</code>
     *
     * <pre>
     * -1无选择
     * </pre>
     */
    public boolean hasPiaofen() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 piaofen = 15;</code>
     *
     * <pre>
     * -1无选择
     * </pre>
     */
    public int getPiaofen() {
      return piaofen_;
    }

    // optional int32 shanghuo = 16;
    public static final int SHANGHUO_FIELD_NUMBER = 16;
    private int shanghuo_;
    /**
     * <code>optional int32 shanghuo = 16;</code>
     *
     * <pre>
     * -1无选择 1不上火 2上火
     * </pre>
     */
    public boolean hasShanghuo() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 shanghuo = 16;</code>
     *
     * <pre>
     * -1无选择 1不上火 2上火
     * </pre>
     */
    public int getShanghuo() {
      return shanghuo_;
    }

    // optional int32 bird_num = 17;
    public static final int BIRD_NUM_FIELD_NUMBER = 17;
    private int birdNum_;
    /**
     * <code>optional int32 bird_num = 17;</code>
     *
     * <pre>
     * 抓到多少张鸟
     * </pre>
     */
    public boolean hasBirdNum() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 bird_num = 17;</code>
     *
     * <pre>
     * 抓到多少张鸟
     * </pre>
     */
    public int getBirdNum() {
      return birdNum_;
    }

    // repeated int32 cards = 18;
    public static final int CARDS_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 18;</code>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 18;</code>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 18;</code>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // repeated int32 out_cards = 19;
    public static final int OUT_CARDS_FIELD_NUMBER = 19;
    private java.util.List<java.lang.Integer> outCards_;
    /**
     * <code>repeated int32 out_cards = 19;</code>
     */
    public java.util.List<java.lang.Integer>
        getOutCardsList() {
      return outCards_;
    }
    /**
     * <code>repeated int32 out_cards = 19;</code>
     */
    public int getOutCardsCount() {
      return outCards_.size();
    }
    /**
     * <code>repeated int32 out_cards = 19;</code>
     */
    public int getOutCards(int index) {
      return outCards_.get(index);
    }

    // repeated int32 op_list = 20;
    public static final int OP_LIST_FIELD_NUMBER = 20;
    private java.util.List<java.lang.Integer> opList_;
    /**
     * <code>repeated int32 op_list = 20;</code>
     */
    public java.util.List<java.lang.Integer>
        getOpListList() {
      return opList_;
    }
    /**
     * <code>repeated int32 op_list = 20;</code>
     */
    public int getOpListCount() {
      return opList_.size();
    }
    /**
     * <code>repeated int32 op_list = 20;</code>
     */
    public int getOpList(int index) {
      return opList_.get(index);
    }

    // repeated int32 over_chips_details = 21;
    public static final int OVER_CHIPS_DETAILS_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> overChipsDetails_;
    /**
     * <code>repeated int32 over_chips_details = 21;</code>
     *
     * <pre>
     *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOverChipsDetailsList() {
      return overChipsDetails_;
    }
    /**
     * <code>repeated int32 over_chips_details = 21;</code>
     *
     * <pre>
     *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
     * </pre>
     */
    public int getOverChipsDetailsCount() {
      return overChipsDetails_.size();
    }
    /**
     * <code>repeated int32 over_chips_details = 21;</code>
     *
     * <pre>
     *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
     * </pre>
     */
    public int getOverChipsDetails(int index) {
      return overChipsDetails_.get(index);
    }

    // optional int32 round_win_chips_before = 22;
    public static final int ROUND_WIN_CHIPS_BEFORE_FIELD_NUMBER = 22;
    private int roundWinChipsBefore_;
    /**
     * <code>optional int32 round_win_chips_before = 22;</code>
     */
    public boolean hasRoundWinChipsBefore() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 round_win_chips_before = 22;</code>
     */
    public int getRoundWinChipsBefore() {
      return roundWinChipsBefore_;
    }

    // optional string nick = 23;
    public static final int NICK_FIELD_NUMBER = 23;
    private java.lang.Object nick_;
    /**
     * <code>optional string nick = 23;</code>
     */
    public boolean hasNick() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string nick = 23;</code>
     */
    public java.lang.String getNick() {
      java.lang.Object ref = nick_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nick_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nick = 23;</code>
     */
    public com.google.protobuf.ByteString
        getNickBytes() {
      java.lang.Object ref = nick_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nick_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 seatid = 24;
    public static final int SEATID_FIELD_NUMBER = 24;
    private int seatid_;
    /**
     * <code>optional int32 seatid = 24;</code>
     */
    public boolean hasSeatid() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 seatid = 24;</code>
     */
    public int getSeatid() {
      return seatid_;
    }

    // optional int32 sex = 25;
    public static final int SEX_FIELD_NUMBER = 25;
    private int sex_;
    /**
     * <code>optional int32 sex = 25;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 sex = 25;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional string portrait = 26;
    public static final int PORTRAIT_FIELD_NUMBER = 26;
    private java.lang.Object portrait_;
    /**
     * <code>optional string portrait = 26;</code>
     *
     * <pre>
     * 头像url
     * </pre>
     */
    public boolean hasPortrait() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional string portrait = 26;</code>
     *
     * <pre>
     * 头像url
     * </pre>
     */
    public java.lang.String getPortrait() {
      java.lang.Object ref = portrait_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          portrait_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string portrait = 26;</code>
     *
     * <pre>
     * 头像url
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPortraitBytes() {
      java.lang.Object ref = portrait_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        portrait_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      uin_ = 0;
      role_ = 0;
      chips_ = 0L;
      roundWinChips_ = 0;
      roundChiNum_ = 0;
      roundPengNum_ = 0;
      roundGangList_ = java.util.Collections.emptyList();
      roundHuList_ = java.util.Collections.emptyList();
      roundWinList_ = java.util.Collections.emptyList();
      totalChiNum_ = 0;
      totalPengNum_ = 0;
      totalGangList_ = java.util.Collections.emptyList();
      totalHuList_ = java.util.Collections.emptyList();
      totalWinList_ = java.util.Collections.emptyList();
      piaofen_ = 0;
      shanghuo_ = 0;
      birdNum_ = 0;
      cards_ = java.util.Collections.emptyList();
      outCards_ = java.util.Collections.emptyList();
      opList_ = java.util.Collections.emptyList();
      overChipsDetails_ = java.util.Collections.emptyList();
      roundWinChipsBefore_ = 0;
      nick_ = "";
      seatid_ = 0;
      sex_ = 0;
      portrait_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, role_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, chips_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, roundWinChips_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, roundChiNum_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, roundPengNum_);
      }
      for (int i = 0; i < roundGangList_.size(); i++) {
        output.writeInt32(7, roundGangList_.get(i));
      }
      for (int i = 0; i < roundHuList_.size(); i++) {
        output.writeInt32(8, roundHuList_.get(i));
      }
      for (int i = 0; i < roundWinList_.size(); i++) {
        output.writeInt32(9, roundWinList_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(10, totalChiNum_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(11, totalPengNum_);
      }
      for (int i = 0; i < totalGangList_.size(); i++) {
        output.writeInt32(12, totalGangList_.get(i));
      }
      for (int i = 0; i < totalHuList_.size(); i++) {
        output.writeInt32(13, totalHuList_.get(i));
      }
      for (int i = 0; i < totalWinList_.size(); i++) {
        output.writeInt32(14, totalWinList_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(15, piaofen_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(16, shanghuo_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(17, birdNum_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(18, cards_.get(i));
      }
      for (int i = 0; i < outCards_.size(); i++) {
        output.writeInt32(19, outCards_.get(i));
      }
      for (int i = 0; i < opList_.size(); i++) {
        output.writeInt32(20, opList_.get(i));
      }
      for (int i = 0; i < overChipsDetails_.size(); i++) {
        output.writeInt32(21, overChipsDetails_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(22, roundWinChipsBefore_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(23, getNickBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(24, seatid_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(25, sex_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBytes(26, getPortraitBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, role_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, chips_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, roundWinChips_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, roundChiNum_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, roundPengNum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roundGangList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roundGangList_.get(i));
        }
        size += dataSize;
        size += 1 * getRoundGangListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roundHuList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roundHuList_.get(i));
        }
        size += dataSize;
        size += 1 * getRoundHuListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < roundWinList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(roundWinList_.get(i));
        }
        size += dataSize;
        size += 1 * getRoundWinListList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, totalChiNum_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, totalPengNum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < totalGangList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(totalGangList_.get(i));
        }
        size += dataSize;
        size += 1 * getTotalGangListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < totalHuList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(totalHuList_.get(i));
        }
        size += dataSize;
        size += 1 * getTotalHuListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < totalWinList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(totalWinList_.get(i));
        }
        size += dataSize;
        size += 1 * getTotalWinListList().size();
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, piaofen_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, shanghuo_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, birdNum_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 2 * getCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(outCards_.get(i));
        }
        size += dataSize;
        size += 2 * getOutCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < opList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(opList_.get(i));
        }
        size += dataSize;
        size += 2 * getOpListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < overChipsDetails_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(overChipsDetails_.get(i));
        }
        size += dataSize;
        size += 2 * getOverChipsDetailsList().size();
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, roundWinChipsBefore_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(23, getNickBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, seatid_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, sex_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(26, getPortraitBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.RecordInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.RecordInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.RecordInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.RecordInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.RecordInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.RecordInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.RecordInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.RecordInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.RecordInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.RecordInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.RecordInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RecordInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.RecordInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_RecordInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_RecordInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.RecordInfo.class, Mahjong.RecordInfo.Builder.class);
      }

      // Construct using Mahjong.RecordInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        role_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        chips_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        roundWinChips_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        roundChiNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        roundPengNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        roundGangList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        roundHuList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        roundWinList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        totalChiNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        totalPengNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        totalGangList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        totalHuList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        totalWinList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        piaofen_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        shanghuo_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        birdNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        outCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        opList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        overChipsDetails_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        roundWinChipsBefore_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        nick_ = "";
        bitField0_ = (bitField0_ & ~0x00400000);
        seatid_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        portrait_ = "";
        bitField0_ = (bitField0_ & ~0x02000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_RecordInfo_descriptor;
      }

      public Mahjong.RecordInfo getDefaultInstanceForType() {
        return Mahjong.RecordInfo.getDefaultInstance();
      }

      public Mahjong.RecordInfo build() {
        Mahjong.RecordInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.RecordInfo buildPartial() {
        Mahjong.RecordInfo result = new Mahjong.RecordInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uin_ = uin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.role_ = role_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.chips_ = chips_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.roundWinChips_ = roundWinChips_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.roundChiNum_ = roundChiNum_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.roundPengNum_ = roundPengNum_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          roundGangList_ = java.util.Collections.unmodifiableList(roundGangList_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.roundGangList_ = roundGangList_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          roundHuList_ = java.util.Collections.unmodifiableList(roundHuList_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.roundHuList_ = roundHuList_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          roundWinList_ = java.util.Collections.unmodifiableList(roundWinList_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.roundWinList_ = roundWinList_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        result.totalChiNum_ = totalChiNum_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        result.totalPengNum_ = totalPengNum_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          totalGangList_ = java.util.Collections.unmodifiableList(totalGangList_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.totalGangList_ = totalGangList_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          totalHuList_ = java.util.Collections.unmodifiableList(totalHuList_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.totalHuList_ = totalHuList_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          totalWinList_ = java.util.Collections.unmodifiableList(totalWinList_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.totalWinList_ = totalWinList_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.piaofen_ = piaofen_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.shanghuo_ = shanghuo_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.birdNum_ = birdNum_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.cards_ = cards_;
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          outCards_ = java.util.Collections.unmodifiableList(outCards_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.outCards_ = outCards_;
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          opList_ = java.util.Collections.unmodifiableList(opList_);
          bitField0_ = (bitField0_ & ~0x00080000);
        }
        result.opList_ = opList_;
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          overChipsDetails_ = java.util.Collections.unmodifiableList(overChipsDetails_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.overChipsDetails_ = overChipsDetails_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.roundWinChipsBefore_ = roundWinChipsBefore_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.nick_ = nick_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.seatid_ = seatid_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.portrait_ = portrait_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.RecordInfo) {
          return mergeFrom((Mahjong.RecordInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.RecordInfo other) {
        if (other == Mahjong.RecordInfo.getDefaultInstance()) return this;
        if (other.hasUin()) {
          setUin(other.getUin());
        }
        if (other.hasRole()) {
          setRole(other.getRole());
        }
        if (other.hasChips()) {
          setChips(other.getChips());
        }
        if (other.hasRoundWinChips()) {
          setRoundWinChips(other.getRoundWinChips());
        }
        if (other.hasRoundChiNum()) {
          setRoundChiNum(other.getRoundChiNum());
        }
        if (other.hasRoundPengNum()) {
          setRoundPengNum(other.getRoundPengNum());
        }
        if (!other.roundGangList_.isEmpty()) {
          if (roundGangList_.isEmpty()) {
            roundGangList_ = other.roundGangList_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureRoundGangListIsMutable();
            roundGangList_.addAll(other.roundGangList_);
          }
          onChanged();
        }
        if (!other.roundHuList_.isEmpty()) {
          if (roundHuList_.isEmpty()) {
            roundHuList_ = other.roundHuList_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureRoundHuListIsMutable();
            roundHuList_.addAll(other.roundHuList_);
          }
          onChanged();
        }
        if (!other.roundWinList_.isEmpty()) {
          if (roundWinList_.isEmpty()) {
            roundWinList_ = other.roundWinList_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureRoundWinListIsMutable();
            roundWinList_.addAll(other.roundWinList_);
          }
          onChanged();
        }
        if (other.hasTotalChiNum()) {
          setTotalChiNum(other.getTotalChiNum());
        }
        if (other.hasTotalPengNum()) {
          setTotalPengNum(other.getTotalPengNum());
        }
        if (!other.totalGangList_.isEmpty()) {
          if (totalGangList_.isEmpty()) {
            totalGangList_ = other.totalGangList_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureTotalGangListIsMutable();
            totalGangList_.addAll(other.totalGangList_);
          }
          onChanged();
        }
        if (!other.totalHuList_.isEmpty()) {
          if (totalHuList_.isEmpty()) {
            totalHuList_ = other.totalHuList_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureTotalHuListIsMutable();
            totalHuList_.addAll(other.totalHuList_);
          }
          onChanged();
        }
        if (!other.totalWinList_.isEmpty()) {
          if (totalWinList_.isEmpty()) {
            totalWinList_ = other.totalWinList_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureTotalWinListIsMutable();
            totalWinList_.addAll(other.totalWinList_);
          }
          onChanged();
        }
        if (other.hasPiaofen()) {
          setPiaofen(other.getPiaofen());
        }
        if (other.hasShanghuo()) {
          setShanghuo(other.getShanghuo());
        }
        if (other.hasBirdNum()) {
          setBirdNum(other.getBirdNum());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (!other.outCards_.isEmpty()) {
          if (outCards_.isEmpty()) {
            outCards_ = other.outCards_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureOutCardsIsMutable();
            outCards_.addAll(other.outCards_);
          }
          onChanged();
        }
        if (!other.opList_.isEmpty()) {
          if (opList_.isEmpty()) {
            opList_ = other.opList_;
            bitField0_ = (bitField0_ & ~0x00080000);
          } else {
            ensureOpListIsMutable();
            opList_.addAll(other.opList_);
          }
          onChanged();
        }
        if (!other.overChipsDetails_.isEmpty()) {
          if (overChipsDetails_.isEmpty()) {
            overChipsDetails_ = other.overChipsDetails_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureOverChipsDetailsIsMutable();
            overChipsDetails_.addAll(other.overChipsDetails_);
          }
          onChanged();
        }
        if (other.hasRoundWinChipsBefore()) {
          setRoundWinChipsBefore(other.getRoundWinChipsBefore());
        }
        if (other.hasNick()) {
          bitField0_ |= 0x00400000;
          nick_ = other.nick_;
          onChanged();
        }
        if (other.hasSeatid()) {
          setSeatid(other.getSeatid());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasPortrait()) {
          bitField0_ |= 0x02000000;
          portrait_ = other.portrait_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.RecordInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.RecordInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 uin = 1;
      private int uin_ ;
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public boolean hasUin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public int getUin() {
        return uin_;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public Builder setUin(int value) {
        bitField0_ |= 0x00000001;
        uin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public Builder clearUin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uin_ = 0;
        onChanged();
        return this;
      }

      // optional int32 role = 2;
      private int role_ ;
      /**
       * <code>optional int32 role = 2;</code>
       */
      public boolean hasRole() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 role = 2;</code>
       */
      public int getRole() {
        return role_;
      }
      /**
       * <code>optional int32 role = 2;</code>
       */
      public Builder setRole(int value) {
        bitField0_ |= 0x00000002;
        role_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 role = 2;</code>
       */
      public Builder clearRole() {
        bitField0_ = (bitField0_ & ~0x00000002);
        role_ = 0;
        onChanged();
        return this;
      }

      // optional int64 chips = 3;
      private long chips_ ;
      /**
       * <code>optional int64 chips = 3;</code>
       */
      public boolean hasChips() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 chips = 3;</code>
       */
      public long getChips() {
        return chips_;
      }
      /**
       * <code>optional int64 chips = 3;</code>
       */
      public Builder setChips(long value) {
        bitField0_ |= 0x00000004;
        chips_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 chips = 3;</code>
       */
      public Builder clearChips() {
        bitField0_ = (bitField0_ & ~0x00000004);
        chips_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 round_win_chips = 4;
      private int roundWinChips_ ;
      /**
       * <code>optional int32 round_win_chips = 4;</code>
       */
      public boolean hasRoundWinChips() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 round_win_chips = 4;</code>
       */
      public int getRoundWinChips() {
        return roundWinChips_;
      }
      /**
       * <code>optional int32 round_win_chips = 4;</code>
       */
      public Builder setRoundWinChips(int value) {
        bitField0_ |= 0x00000008;
        roundWinChips_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round_win_chips = 4;</code>
       */
      public Builder clearRoundWinChips() {
        bitField0_ = (bitField0_ & ~0x00000008);
        roundWinChips_ = 0;
        onChanged();
        return this;
      }

      // optional int32 round_chi_num = 5;
      private int roundChiNum_ ;
      /**
       * <code>optional int32 round_chi_num = 5;</code>
       */
      public boolean hasRoundChiNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 round_chi_num = 5;</code>
       */
      public int getRoundChiNum() {
        return roundChiNum_;
      }
      /**
       * <code>optional int32 round_chi_num = 5;</code>
       */
      public Builder setRoundChiNum(int value) {
        bitField0_ |= 0x00000010;
        roundChiNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round_chi_num = 5;</code>
       */
      public Builder clearRoundChiNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        roundChiNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 round_peng_num = 6;
      private int roundPengNum_ ;
      /**
       * <code>optional int32 round_peng_num = 6;</code>
       */
      public boolean hasRoundPengNum() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 round_peng_num = 6;</code>
       */
      public int getRoundPengNum() {
        return roundPengNum_;
      }
      /**
       * <code>optional int32 round_peng_num = 6;</code>
       */
      public Builder setRoundPengNum(int value) {
        bitField0_ |= 0x00000020;
        roundPengNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round_peng_num = 6;</code>
       */
      public Builder clearRoundPengNum() {
        bitField0_ = (bitField0_ & ~0x00000020);
        roundPengNum_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 round_gang_list = 7;
      private java.util.List<java.lang.Integer> roundGangList_ = java.util.Collections.emptyList();
      private void ensureRoundGangListIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          roundGangList_ = new java.util.ArrayList<java.lang.Integer>(roundGangList_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 round_gang_list = 7;</code>
       *
       * <pre>
       * 1暗杠 2擦杠 3明杠
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRoundGangListList() {
        return java.util.Collections.unmodifiableList(roundGangList_);
      }
      /**
       * <code>repeated int32 round_gang_list = 7;</code>
       *
       * <pre>
       * 1暗杠 2擦杠 3明杠
       * </pre>
       */
      public int getRoundGangListCount() {
        return roundGangList_.size();
      }
      /**
       * <code>repeated int32 round_gang_list = 7;</code>
       *
       * <pre>
       * 1暗杠 2擦杠 3明杠
       * </pre>
       */
      public int getRoundGangList(int index) {
        return roundGangList_.get(index);
      }
      /**
       * <code>repeated int32 round_gang_list = 7;</code>
       *
       * <pre>
       * 1暗杠 2擦杠 3明杠
       * </pre>
       */
      public Builder setRoundGangList(
          int index, int value) {
        ensureRoundGangListIsMutable();
        roundGangList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_gang_list = 7;</code>
       *
       * <pre>
       * 1暗杠 2擦杠 3明杠
       * </pre>
       */
      public Builder addRoundGangList(int value) {
        ensureRoundGangListIsMutable();
        roundGangList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_gang_list = 7;</code>
       *
       * <pre>
       * 1暗杠 2擦杠 3明杠
       * </pre>
       */
      public Builder addAllRoundGangList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoundGangListIsMutable();
        super.addAll(values, roundGangList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_gang_list = 7;</code>
       *
       * <pre>
       * 1暗杠 2擦杠 3明杠
       * </pre>
       */
      public Builder clearRoundGangList() {
        roundGangList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 round_hu_list = 8;
      private java.util.List<java.lang.Integer> roundHuList_ = java.util.Collections.emptyList();
      private void ensureRoundHuListIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          roundHuList_ = new java.util.ArrayList<java.lang.Integer>(roundHuList_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 round_hu_list = 8;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRoundHuListList() {
        return java.util.Collections.unmodifiableList(roundHuList_);
      }
      /**
       * <code>repeated int32 round_hu_list = 8;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public int getRoundHuListCount() {
        return roundHuList_.size();
      }
      /**
       * <code>repeated int32 round_hu_list = 8;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public int getRoundHuList(int index) {
        return roundHuList_.get(index);
      }
      /**
       * <code>repeated int32 round_hu_list = 8;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public Builder setRoundHuList(
          int index, int value) {
        ensureRoundHuListIsMutable();
        roundHuList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_hu_list = 8;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public Builder addRoundHuList(int value) {
        ensureRoundHuListIsMutable();
        roundHuList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_hu_list = 8;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public Builder addAllRoundHuList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoundHuListIsMutable();
        super.addAll(values, roundHuList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_hu_list = 8;</code>
       *
       * <pre>
       * 胡牌
       * </pre>
       */
      public Builder clearRoundHuList() {
        roundHuList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated int32 round_win_list = 9;
      private java.util.List<java.lang.Integer> roundWinList_ = java.util.Collections.emptyList();
      private void ensureRoundWinListIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          roundWinList_ = new java.util.ArrayList<java.lang.Integer>(roundWinList_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 round_win_list = 9;</code>
       *
       * <pre>
       * 1自摸 2接炮 3放炮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRoundWinListList() {
        return java.util.Collections.unmodifiableList(roundWinList_);
      }
      /**
       * <code>repeated int32 round_win_list = 9;</code>
       *
       * <pre>
       * 1自摸 2接炮 3放炮
       * </pre>
       */
      public int getRoundWinListCount() {
        return roundWinList_.size();
      }
      /**
       * <code>repeated int32 round_win_list = 9;</code>
       *
       * <pre>
       * 1自摸 2接炮 3放炮
       * </pre>
       */
      public int getRoundWinList(int index) {
        return roundWinList_.get(index);
      }
      /**
       * <code>repeated int32 round_win_list = 9;</code>
       *
       * <pre>
       * 1自摸 2接炮 3放炮
       * </pre>
       */
      public Builder setRoundWinList(
          int index, int value) {
        ensureRoundWinListIsMutable();
        roundWinList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_win_list = 9;</code>
       *
       * <pre>
       * 1自摸 2接炮 3放炮
       * </pre>
       */
      public Builder addRoundWinList(int value) {
        ensureRoundWinListIsMutable();
        roundWinList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_win_list = 9;</code>
       *
       * <pre>
       * 1自摸 2接炮 3放炮
       * </pre>
       */
      public Builder addAllRoundWinList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoundWinListIsMutable();
        super.addAll(values, roundWinList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 round_win_list = 9;</code>
       *
       * <pre>
       * 1自摸 2接炮 3放炮
       * </pre>
       */
      public Builder clearRoundWinList() {
        roundWinList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // optional int32 total_chi_num = 10;
      private int totalChiNum_ ;
      /**
       * <code>optional int32 total_chi_num = 10;</code>
       */
      public boolean hasTotalChiNum() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 total_chi_num = 10;</code>
       */
      public int getTotalChiNum() {
        return totalChiNum_;
      }
      /**
       * <code>optional int32 total_chi_num = 10;</code>
       */
      public Builder setTotalChiNum(int value) {
        bitField0_ |= 0x00000200;
        totalChiNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_chi_num = 10;</code>
       */
      public Builder clearTotalChiNum() {
        bitField0_ = (bitField0_ & ~0x00000200);
        totalChiNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 total_peng_num = 11;
      private int totalPengNum_ ;
      /**
       * <code>optional int32 total_peng_num = 11;</code>
       */
      public boolean hasTotalPengNum() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 total_peng_num = 11;</code>
       */
      public int getTotalPengNum() {
        return totalPengNum_;
      }
      /**
       * <code>optional int32 total_peng_num = 11;</code>
       */
      public Builder setTotalPengNum(int value) {
        bitField0_ |= 0x00000400;
        totalPengNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_peng_num = 11;</code>
       */
      public Builder clearTotalPengNum() {
        bitField0_ = (bitField0_ & ~0x00000400);
        totalPengNum_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 total_gang_list = 12;
      private java.util.List<java.lang.Integer> totalGangList_ = java.util.Collections.emptyList();
      private void ensureTotalGangListIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          totalGangList_ = new java.util.ArrayList<java.lang.Integer>(totalGangList_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 total_gang_list = 12;</code>
       */
      public java.util.List<java.lang.Integer>
          getTotalGangListList() {
        return java.util.Collections.unmodifiableList(totalGangList_);
      }
      /**
       * <code>repeated int32 total_gang_list = 12;</code>
       */
      public int getTotalGangListCount() {
        return totalGangList_.size();
      }
      /**
       * <code>repeated int32 total_gang_list = 12;</code>
       */
      public int getTotalGangList(int index) {
        return totalGangList_.get(index);
      }
      /**
       * <code>repeated int32 total_gang_list = 12;</code>
       */
      public Builder setTotalGangList(
          int index, int value) {
        ensureTotalGangListIsMutable();
        totalGangList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_gang_list = 12;</code>
       */
      public Builder addTotalGangList(int value) {
        ensureTotalGangListIsMutable();
        totalGangList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_gang_list = 12;</code>
       */
      public Builder addAllTotalGangList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTotalGangListIsMutable();
        super.addAll(values, totalGangList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_gang_list = 12;</code>
       */
      public Builder clearTotalGangList() {
        totalGangList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated int32 total_hu_list = 13;
      private java.util.List<java.lang.Integer> totalHuList_ = java.util.Collections.emptyList();
      private void ensureTotalHuListIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          totalHuList_ = new java.util.ArrayList<java.lang.Integer>(totalHuList_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 total_hu_list = 13;</code>
       *
       * <pre>
       * 总的胡牌列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTotalHuListList() {
        return java.util.Collections.unmodifiableList(totalHuList_);
      }
      /**
       * <code>repeated int32 total_hu_list = 13;</code>
       *
       * <pre>
       * 总的胡牌列表
       * </pre>
       */
      public int getTotalHuListCount() {
        return totalHuList_.size();
      }
      /**
       * <code>repeated int32 total_hu_list = 13;</code>
       *
       * <pre>
       * 总的胡牌列表
       * </pre>
       */
      public int getTotalHuList(int index) {
        return totalHuList_.get(index);
      }
      /**
       * <code>repeated int32 total_hu_list = 13;</code>
       *
       * <pre>
       * 总的胡牌列表
       * </pre>
       */
      public Builder setTotalHuList(
          int index, int value) {
        ensureTotalHuListIsMutable();
        totalHuList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_hu_list = 13;</code>
       *
       * <pre>
       * 总的胡牌列表
       * </pre>
       */
      public Builder addTotalHuList(int value) {
        ensureTotalHuListIsMutable();
        totalHuList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_hu_list = 13;</code>
       *
       * <pre>
       * 总的胡牌列表
       * </pre>
       */
      public Builder addAllTotalHuList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTotalHuListIsMutable();
        super.addAll(values, totalHuList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_hu_list = 13;</code>
       *
       * <pre>
       * 总的胡牌列表
       * </pre>
       */
      public Builder clearTotalHuList() {
        totalHuList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated int32 total_win_list = 14;
      private java.util.List<java.lang.Integer> totalWinList_ = java.util.Collections.emptyList();
      private void ensureTotalWinListIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          totalWinList_ = new java.util.ArrayList<java.lang.Integer>(totalWinList_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 total_win_list = 14;</code>
       */
      public java.util.List<java.lang.Integer>
          getTotalWinListList() {
        return java.util.Collections.unmodifiableList(totalWinList_);
      }
      /**
       * <code>repeated int32 total_win_list = 14;</code>
       */
      public int getTotalWinListCount() {
        return totalWinList_.size();
      }
      /**
       * <code>repeated int32 total_win_list = 14;</code>
       */
      public int getTotalWinList(int index) {
        return totalWinList_.get(index);
      }
      /**
       * <code>repeated int32 total_win_list = 14;</code>
       */
      public Builder setTotalWinList(
          int index, int value) {
        ensureTotalWinListIsMutable();
        totalWinList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_win_list = 14;</code>
       */
      public Builder addTotalWinList(int value) {
        ensureTotalWinListIsMutable();
        totalWinList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_win_list = 14;</code>
       */
      public Builder addAllTotalWinList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTotalWinListIsMutable();
        super.addAll(values, totalWinList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 total_win_list = 14;</code>
       */
      public Builder clearTotalWinList() {
        totalWinList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // optional int32 piaofen = 15;
      private int piaofen_ ;
      /**
       * <code>optional int32 piaofen = 15;</code>
       *
       * <pre>
       * -1无选择
       * </pre>
       */
      public boolean hasPiaofen() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 piaofen = 15;</code>
       *
       * <pre>
       * -1无选择
       * </pre>
       */
      public int getPiaofen() {
        return piaofen_;
      }
      /**
       * <code>optional int32 piaofen = 15;</code>
       *
       * <pre>
       * -1无选择
       * </pre>
       */
      public Builder setPiaofen(int value) {
        bitField0_ |= 0x00004000;
        piaofen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 piaofen = 15;</code>
       *
       * <pre>
       * -1无选择
       * </pre>
       */
      public Builder clearPiaofen() {
        bitField0_ = (bitField0_ & ~0x00004000);
        piaofen_ = 0;
        onChanged();
        return this;
      }

      // optional int32 shanghuo = 16;
      private int shanghuo_ ;
      /**
       * <code>optional int32 shanghuo = 16;</code>
       *
       * <pre>
       * -1无选择 1不上火 2上火
       * </pre>
       */
      public boolean hasShanghuo() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 shanghuo = 16;</code>
       *
       * <pre>
       * -1无选择 1不上火 2上火
       * </pre>
       */
      public int getShanghuo() {
        return shanghuo_;
      }
      /**
       * <code>optional int32 shanghuo = 16;</code>
       *
       * <pre>
       * -1无选择 1不上火 2上火
       * </pre>
       */
      public Builder setShanghuo(int value) {
        bitField0_ |= 0x00008000;
        shanghuo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shanghuo = 16;</code>
       *
       * <pre>
       * -1无选择 1不上火 2上火
       * </pre>
       */
      public Builder clearShanghuo() {
        bitField0_ = (bitField0_ & ~0x00008000);
        shanghuo_ = 0;
        onChanged();
        return this;
      }

      // optional int32 bird_num = 17;
      private int birdNum_ ;
      /**
       * <code>optional int32 bird_num = 17;</code>
       *
       * <pre>
       * 抓到多少张鸟
       * </pre>
       */
      public boolean hasBirdNum() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 bird_num = 17;</code>
       *
       * <pre>
       * 抓到多少张鸟
       * </pre>
       */
      public int getBirdNum() {
        return birdNum_;
      }
      /**
       * <code>optional int32 bird_num = 17;</code>
       *
       * <pre>
       * 抓到多少张鸟
       * </pre>
       */
      public Builder setBirdNum(int value) {
        bitField0_ |= 0x00010000;
        birdNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bird_num = 17;</code>
       *
       * <pre>
       * 抓到多少张鸟
       * </pre>
       */
      public Builder clearBirdNum() {
        bitField0_ = (bitField0_ & ~0x00010000);
        birdNum_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 18;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int32 cards = 18;</code>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 18;</code>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 18;</code>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 18;</code>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 18;</code>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 18;</code>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 18;</code>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      // repeated int32 out_cards = 19;
      private java.util.List<java.lang.Integer> outCards_ = java.util.Collections.emptyList();
      private void ensureOutCardsIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          outCards_ = new java.util.ArrayList<java.lang.Integer>(outCards_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int32 out_cards = 19;</code>
       */
      public java.util.List<java.lang.Integer>
          getOutCardsList() {
        return java.util.Collections.unmodifiableList(outCards_);
      }
      /**
       * <code>repeated int32 out_cards = 19;</code>
       */
      public int getOutCardsCount() {
        return outCards_.size();
      }
      /**
       * <code>repeated int32 out_cards = 19;</code>
       */
      public int getOutCards(int index) {
        return outCards_.get(index);
      }
      /**
       * <code>repeated int32 out_cards = 19;</code>
       */
      public Builder setOutCards(
          int index, int value) {
        ensureOutCardsIsMutable();
        outCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards = 19;</code>
       */
      public Builder addOutCards(int value) {
        ensureOutCardsIsMutable();
        outCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards = 19;</code>
       */
      public Builder addAllOutCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOutCardsIsMutable();
        super.addAll(values, outCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 out_cards = 19;</code>
       */
      public Builder clearOutCards() {
        outCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      // repeated int32 op_list = 20;
      private java.util.List<java.lang.Integer> opList_ = java.util.Collections.emptyList();
      private void ensureOpListIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          opList_ = new java.util.ArrayList<java.lang.Integer>(opList_);
          bitField0_ |= 0x00080000;
         }
      }
      /**
       * <code>repeated int32 op_list = 20;</code>
       */
      public java.util.List<java.lang.Integer>
          getOpListList() {
        return java.util.Collections.unmodifiableList(opList_);
      }
      /**
       * <code>repeated int32 op_list = 20;</code>
       */
      public int getOpListCount() {
        return opList_.size();
      }
      /**
       * <code>repeated int32 op_list = 20;</code>
       */
      public int getOpList(int index) {
        return opList_.get(index);
      }
      /**
       * <code>repeated int32 op_list = 20;</code>
       */
      public Builder setOpList(
          int index, int value) {
        ensureOpListIsMutable();
        opList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 op_list = 20;</code>
       */
      public Builder addOpList(int value) {
        ensureOpListIsMutable();
        opList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 op_list = 20;</code>
       */
      public Builder addAllOpList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOpListIsMutable();
        super.addAll(values, opList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 op_list = 20;</code>
       */
      public Builder clearOpList() {
        opList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        onChanged();
        return this;
      }

      // repeated int32 over_chips_details = 21;
      private java.util.List<java.lang.Integer> overChipsDetails_ = java.util.Collections.emptyList();
      private void ensureOverChipsDetailsIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          overChipsDetails_ = new java.util.ArrayList<java.lang.Integer>(overChipsDetails_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated int32 over_chips_details = 21;</code>
       *
       * <pre>
       *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOverChipsDetailsList() {
        return java.util.Collections.unmodifiableList(overChipsDetails_);
      }
      /**
       * <code>repeated int32 over_chips_details = 21;</code>
       *
       * <pre>
       *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
       * </pre>
       */
      public int getOverChipsDetailsCount() {
        return overChipsDetails_.size();
      }
      /**
       * <code>repeated int32 over_chips_details = 21;</code>
       *
       * <pre>
       *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
       * </pre>
       */
      public int getOverChipsDetails(int index) {
        return overChipsDetails_.get(index);
      }
      /**
       * <code>repeated int32 over_chips_details = 21;</code>
       *
       * <pre>
       *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
       * </pre>
       */
      public Builder setOverChipsDetails(
          int index, int value) {
        ensureOverChipsDetailsIsMutable();
        overChipsDetails_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 over_chips_details = 21;</code>
       *
       * <pre>
       *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
       * </pre>
       */
      public Builder addOverChipsDetails(int value) {
        ensureOverChipsDetailsIsMutable();
        overChipsDetails_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 over_chips_details = 21;</code>
       *
       * <pre>
       *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
       * </pre>
       */
      public Builder addAllOverChipsDetails(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOverChipsDetailsIsMutable();
        super.addAll(values, overChipsDetails_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 over_chips_details = 21;</code>
       *
       * <pre>
       *0-5 暗杠 被暗杠 擦杠 被擦杠 明杠 点杠 6-23自摸 24-41被自摸 42-59接炮 60-77放炮
       * </pre>
       */
      public Builder clearOverChipsDetails() {
        overChipsDetails_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      // optional int32 round_win_chips_before = 22;
      private int roundWinChipsBefore_ ;
      /**
       * <code>optional int32 round_win_chips_before = 22;</code>
       */
      public boolean hasRoundWinChipsBefore() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 round_win_chips_before = 22;</code>
       */
      public int getRoundWinChipsBefore() {
        return roundWinChipsBefore_;
      }
      /**
       * <code>optional int32 round_win_chips_before = 22;</code>
       */
      public Builder setRoundWinChipsBefore(int value) {
        bitField0_ |= 0x00200000;
        roundWinChipsBefore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 round_win_chips_before = 22;</code>
       */
      public Builder clearRoundWinChipsBefore() {
        bitField0_ = (bitField0_ & ~0x00200000);
        roundWinChipsBefore_ = 0;
        onChanged();
        return this;
      }

      // optional string nick = 23;
      private java.lang.Object nick_ = "";
      /**
       * <code>optional string nick = 23;</code>
       */
      public boolean hasNick() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional string nick = 23;</code>
       */
      public java.lang.String getNick() {
        java.lang.Object ref = nick_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nick_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nick = 23;</code>
       */
      public com.google.protobuf.ByteString
          getNickBytes() {
        java.lang.Object ref = nick_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nick_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nick = 23;</code>
       */
      public Builder setNick(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
        nick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nick = 23;</code>
       */
      public Builder clearNick() {
        bitField0_ = (bitField0_ & ~0x00400000);
        nick_ = getDefaultInstance().getNick();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nick = 23;</code>
       */
      public Builder setNickBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
        nick_ = value;
        onChanged();
        return this;
      }

      // optional int32 seatid = 24;
      private int seatid_ ;
      /**
       * <code>optional int32 seatid = 24;</code>
       */
      public boolean hasSeatid() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 seatid = 24;</code>
       */
      public int getSeatid() {
        return seatid_;
      }
      /**
       * <code>optional int32 seatid = 24;</code>
       */
      public Builder setSeatid(int value) {
        bitField0_ |= 0x00800000;
        seatid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seatid = 24;</code>
       */
      public Builder clearSeatid() {
        bitField0_ = (bitField0_ & ~0x00800000);
        seatid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 25;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 25;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 sex = 25;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 25;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x01000000;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 25;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x01000000);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional string portrait = 26;
      private java.lang.Object portrait_ = "";
      /**
       * <code>optional string portrait = 26;</code>
       *
       * <pre>
       * 头像url
       * </pre>
       */
      public boolean hasPortrait() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional string portrait = 26;</code>
       *
       * <pre>
       * 头像url
       * </pre>
       */
      public java.lang.String getPortrait() {
        java.lang.Object ref = portrait_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          portrait_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string portrait = 26;</code>
       *
       * <pre>
       * 头像url
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPortraitBytes() {
        java.lang.Object ref = portrait_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          portrait_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string portrait = 26;</code>
       *
       * <pre>
       * 头像url
       * </pre>
       */
      public Builder setPortrait(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x02000000;
        portrait_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string portrait = 26;</code>
       *
       * <pre>
       * 头像url
       * </pre>
       */
      public Builder clearPortrait() {
        bitField0_ = (bitField0_ & ~0x02000000);
        portrait_ = getDefaultInstance().getPortrait();
        onChanged();
        return this;
      }
      /**
       * <code>optional string portrait = 26;</code>
       *
       * <pre>
       * 头像url
       * </pre>
       */
      public Builder setPortraitBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x02000000;
        portrait_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RecordInfo)
    }

    static {
      defaultInstance = new RecordInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:RecordInfo)
  }

  public interface PerPlayRecordOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string roundid = 1;
    /**
     * <code>optional string roundid = 1;</code>
     */
    boolean hasRoundid();
    /**
     * <code>optional string roundid = 1;</code>
     */
    java.lang.String getRoundid();
    /**
     * <code>optional string roundid = 1;</code>
     */
    com.google.protobuf.ByteString
        getRoundidBytes();

    // repeated .RecordInfo result = 2;
    /**
     * <code>repeated .RecordInfo result = 2;</code>
     */
    java.util.List<Mahjong.RecordInfo> 
        getResultList();
    /**
     * <code>repeated .RecordInfo result = 2;</code>
     */
    Mahjong.RecordInfo getResult(int index);
    /**
     * <code>repeated .RecordInfo result = 2;</code>
     */
    int getResultCount();
    /**
     * <code>repeated .RecordInfo result = 2;</code>
     */
    java.util.List<? extends Mahjong.RecordInfoOrBuilder> 
        getResultOrBuilderList();
    /**
     * <code>repeated .RecordInfo result = 2;</code>
     */
    Mahjong.RecordInfoOrBuilder getResultOrBuilder(
        int index);

    // optional int32 deskid = 3;
    /**
     * <code>optional int32 deskid = 3;</code>
     */
    boolean hasDeskid();
    /**
     * <code>optional int32 deskid = 3;</code>
     */
    int getDeskid();

    // optional int32 game_round = 4;
    /**
     * <code>optional int32 game_round = 4;</code>
     *
     * <pre>
     * 牌桌当前局数
     * </pre>
     */
    boolean hasGameRound();
    /**
     * <code>optional int32 game_round = 4;</code>
     *
     * <pre>
     * 牌桌当前局数
     * </pre>
     */
    int getGameRound();

    // optional int32 desk_round = 6;
    /**
     * <code>optional int32 desk_round = 6;</code>
     *
     * <pre>
     * 牌桌总局数
     * </pre>
     */
    boolean hasDeskRound();
    /**
     * <code>optional int32 desk_round = 6;</code>
     *
     * <pre>
     * 牌桌总局数
     * </pre>
     */
    int getDeskRound();

    // repeated int32 bird_card = 7 [packed = true];
    /**
     * <code>repeated int32 bird_card = 7 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getBirdCardList();
    /**
     * <code>repeated int32 bird_card = 7 [packed = true];</code>
     */
    int getBirdCardCount();
    /**
     * <code>repeated int32 bird_card = 7 [packed = true];</code>
     */
    int getBirdCard(int index);

    // optional int32 type = 8;
    /**
     * <code>optional int32 type = 8;</code>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 8;</code>
     */
    int getType();

    // optional int32 seat_limit = 9;
    /**
     * <code>optional int32 seat_limit = 9;</code>
     */
    boolean hasSeatLimit();
    /**
     * <code>optional int32 seat_limit = 9;</code>
     */
    int getSeatLimit();

    // optional int32 win_type = 10;
    /**
     * <code>optional int32 win_type = 10;</code>
     *
     * <pre>
     * 1点炮 2自摸                     
     * </pre>
     */
    boolean hasWinType();
    /**
     * <code>optional int32 win_type = 10;</code>
     *
     * <pre>
     * 1点炮 2自摸                     
     * </pre>
     */
    int getWinType();

    // optional .ExtraDeskTypeInfo extra_type = 11;
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 11;</code>
     */
    boolean hasExtraType();
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 11;</code>
     */
    Mahjong.ExtraDeskTypeInfo getExtraType();
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 11;</code>
     */
    Mahjong.ExtraDeskTypeInfoOrBuilder getExtraTypeOrBuilder();

    // optional int32 over_time = 12;
    /**
     * <code>optional int32 over_time = 12;</code>
     */
    boolean hasOverTime();
    /**
     * <code>optional int32 over_time = 12;</code>
     */
    int getOverTime();

    // optional int32 master_uin = 13;
    /**
     * <code>optional int32 master_uin = 13;</code>
     */
    boolean hasMasterUin();
    /**
     * <code>optional int32 master_uin = 13;</code>
     */
    int getMasterUin();

    // repeated int32 winners = 14 [packed = true];
    /**
     * <code>repeated int32 winners = 14 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getWinnersList();
    /**
     * <code>repeated int32 winners = 14 [packed = true];</code>
     */
    int getWinnersCount();
    /**
     * <code>repeated int32 winners = 14 [packed = true];</code>
     */
    int getWinners(int index);
  }
  /**
   * Protobuf type {@code PerPlayRecord}
   */
  public static final class PerPlayRecord extends
      com.google.protobuf.GeneratedMessage
      implements PerPlayRecordOrBuilder {
    // Use PerPlayRecord.newBuilder() to construct.
    private PerPlayRecord(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PerPlayRecord(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PerPlayRecord defaultInstance;
    public static PerPlayRecord getDefaultInstance() {
      return defaultInstance;
    }

    public PerPlayRecord getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PerPlayRecord(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              roundid_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                result_ = new java.util.ArrayList<Mahjong.RecordInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              result_.add(input.readMessage(Mahjong.RecordInfo.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              deskid_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              gameRound_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              deskRound_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                birdCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              birdCard_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                birdCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                birdCard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              type_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              seatLimit_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              winType_ = input.readInt32();
              break;
            }
            case 90: {
              Mahjong.ExtraDeskTypeInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = extraType_.toBuilder();
              }
              extraType_ = input.readMessage(Mahjong.ExtraDeskTypeInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(extraType_);
                extraType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              overTime_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000200;
              masterUin_ = input.readInt32();
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                winners_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              winners_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                winners_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                winners_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          result_ = java.util.Collections.unmodifiableList(result_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          birdCard_ = java.util.Collections.unmodifiableList(birdCard_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          winners_ = java.util.Collections.unmodifiableList(winners_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_PerPlayRecord_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_PerPlayRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.PerPlayRecord.class, Mahjong.PerPlayRecord.Builder.class);
    }

    public static com.google.protobuf.Parser<PerPlayRecord> PARSER =
        new com.google.protobuf.AbstractParser<PerPlayRecord>() {
      public PerPlayRecord parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PerPlayRecord(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PerPlayRecord> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string roundid = 1;
    public static final int ROUNDID_FIELD_NUMBER = 1;
    private java.lang.Object roundid_;
    /**
     * <code>optional string roundid = 1;</code>
     */
    public boolean hasRoundid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string roundid = 1;</code>
     */
    public java.lang.String getRoundid() {
      java.lang.Object ref = roundid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          roundid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string roundid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRoundidBytes() {
      java.lang.Object ref = roundid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roundid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .RecordInfo result = 2;
    public static final int RESULT_FIELD_NUMBER = 2;
    private java.util.List<Mahjong.RecordInfo> result_;
    /**
     * <code>repeated .RecordInfo result = 2;</code>
     */
    public java.util.List<Mahjong.RecordInfo> getResultList() {
      return result_;
    }
    /**
     * <code>repeated .RecordInfo result = 2;</code>
     */
    public java.util.List<? extends Mahjong.RecordInfoOrBuilder> 
        getResultOrBuilderList() {
      return result_;
    }
    /**
     * <code>repeated .RecordInfo result = 2;</code>
     */
    public int getResultCount() {
      return result_.size();
    }
    /**
     * <code>repeated .RecordInfo result = 2;</code>
     */
    public Mahjong.RecordInfo getResult(int index) {
      return result_.get(index);
    }
    /**
     * <code>repeated .RecordInfo result = 2;</code>
     */
    public Mahjong.RecordInfoOrBuilder getResultOrBuilder(
        int index) {
      return result_.get(index);
    }

    // optional int32 deskid = 3;
    public static final int DESKID_FIELD_NUMBER = 3;
    private int deskid_;
    /**
     * <code>optional int32 deskid = 3;</code>
     */
    public boolean hasDeskid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 deskid = 3;</code>
     */
    public int getDeskid() {
      return deskid_;
    }

    // optional int32 game_round = 4;
    public static final int GAME_ROUND_FIELD_NUMBER = 4;
    private int gameRound_;
    /**
     * <code>optional int32 game_round = 4;</code>
     *
     * <pre>
     * 牌桌当前局数
     * </pre>
     */
    public boolean hasGameRound() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_round = 4;</code>
     *
     * <pre>
     * 牌桌当前局数
     * </pre>
     */
    public int getGameRound() {
      return gameRound_;
    }

    // optional int32 desk_round = 6;
    public static final int DESK_ROUND_FIELD_NUMBER = 6;
    private int deskRound_;
    /**
     * <code>optional int32 desk_round = 6;</code>
     *
     * <pre>
     * 牌桌总局数
     * </pre>
     */
    public boolean hasDeskRound() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 desk_round = 6;</code>
     *
     * <pre>
     * 牌桌总局数
     * </pre>
     */
    public int getDeskRound() {
      return deskRound_;
    }

    // repeated int32 bird_card = 7 [packed = true];
    public static final int BIRD_CARD_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> birdCard_;
    /**
     * <code>repeated int32 bird_card = 7 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getBirdCardList() {
      return birdCard_;
    }
    /**
     * <code>repeated int32 bird_card = 7 [packed = true];</code>
     */
    public int getBirdCardCount() {
      return birdCard_.size();
    }
    /**
     * <code>repeated int32 bird_card = 7 [packed = true];</code>
     */
    public int getBirdCard(int index) {
      return birdCard_.get(index);
    }
    private int birdCardMemoizedSerializedSize = -1;

    // optional int32 type = 8;
    public static final int TYPE_FIELD_NUMBER = 8;
    private int type_;
    /**
     * <code>optional int32 type = 8;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 type = 8;</code>
     */
    public int getType() {
      return type_;
    }

    // optional int32 seat_limit = 9;
    public static final int SEAT_LIMIT_FIELD_NUMBER = 9;
    private int seatLimit_;
    /**
     * <code>optional int32 seat_limit = 9;</code>
     */
    public boolean hasSeatLimit() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 seat_limit = 9;</code>
     */
    public int getSeatLimit() {
      return seatLimit_;
    }

    // optional int32 win_type = 10;
    public static final int WIN_TYPE_FIELD_NUMBER = 10;
    private int winType_;
    /**
     * <code>optional int32 win_type = 10;</code>
     *
     * <pre>
     * 1点炮 2自摸                     
     * </pre>
     */
    public boolean hasWinType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 win_type = 10;</code>
     *
     * <pre>
     * 1点炮 2自摸                     
     * </pre>
     */
    public int getWinType() {
      return winType_;
    }

    // optional .ExtraDeskTypeInfo extra_type = 11;
    public static final int EXTRA_TYPE_FIELD_NUMBER = 11;
    private Mahjong.ExtraDeskTypeInfo extraType_;
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 11;</code>
     */
    public boolean hasExtraType() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 11;</code>
     */
    public Mahjong.ExtraDeskTypeInfo getExtraType() {
      return extraType_;
    }
    /**
     * <code>optional .ExtraDeskTypeInfo extra_type = 11;</code>
     */
    public Mahjong.ExtraDeskTypeInfoOrBuilder getExtraTypeOrBuilder() {
      return extraType_;
    }

    // optional int32 over_time = 12;
    public static final int OVER_TIME_FIELD_NUMBER = 12;
    private int overTime_;
    /**
     * <code>optional int32 over_time = 12;</code>
     */
    public boolean hasOverTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 over_time = 12;</code>
     */
    public int getOverTime() {
      return overTime_;
    }

    // optional int32 master_uin = 13;
    public static final int MASTER_UIN_FIELD_NUMBER = 13;
    private int masterUin_;
    /**
     * <code>optional int32 master_uin = 13;</code>
     */
    public boolean hasMasterUin() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 master_uin = 13;</code>
     */
    public int getMasterUin() {
      return masterUin_;
    }

    // repeated int32 winners = 14 [packed = true];
    public static final int WINNERS_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> winners_;
    /**
     * <code>repeated int32 winners = 14 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getWinnersList() {
      return winners_;
    }
    /**
     * <code>repeated int32 winners = 14 [packed = true];</code>
     */
    public int getWinnersCount() {
      return winners_.size();
    }
    /**
     * <code>repeated int32 winners = 14 [packed = true];</code>
     */
    public int getWinners(int index) {
      return winners_.get(index);
    }
    private int winnersMemoizedSerializedSize = -1;

    private void initFields() {
      roundid_ = "";
      result_ = java.util.Collections.emptyList();
      deskid_ = 0;
      gameRound_ = 0;
      deskRound_ = 0;
      birdCard_ = java.util.Collections.emptyList();
      type_ = 0;
      seatLimit_ = 0;
      winType_ = 0;
      extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
      overTime_ = 0;
      masterUin_ = 0;
      winners_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getRoundidBytes());
      }
      for (int i = 0; i < result_.size(); i++) {
        output.writeMessage(2, result_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, deskid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, gameRound_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, deskRound_);
      }
      if (getBirdCardList().size() > 0) {
        output.writeRawVarint32(58);
        output.writeRawVarint32(birdCardMemoizedSerializedSize);
      }
      for (int i = 0; i < birdCard_.size(); i++) {
        output.writeInt32NoTag(birdCard_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, type_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(9, seatLimit_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(10, winType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(11, extraType_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(12, overTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(13, masterUin_);
      }
      if (getWinnersList().size() > 0) {
        output.writeRawVarint32(114);
        output.writeRawVarint32(winnersMemoizedSerializedSize);
      }
      for (int i = 0; i < winners_.size(); i++) {
        output.writeInt32NoTag(winners_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getRoundidBytes());
      }
      for (int i = 0; i < result_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, result_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, deskid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gameRound_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, deskRound_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < birdCard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(birdCard_.get(i));
        }
        size += dataSize;
        if (!getBirdCardList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        birdCardMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, type_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, seatLimit_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, winType_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, extraType_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, overTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, masterUin_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winners_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winners_.get(i));
        }
        size += dataSize;
        if (!getWinnersList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        winnersMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.PerPlayRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.PerPlayRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.PerPlayRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.PerPlayRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.PerPlayRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.PerPlayRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.PerPlayRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.PerPlayRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.PerPlayRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.PerPlayRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.PerPlayRecord prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PerPlayRecord}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.PerPlayRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_PerPlayRecord_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_PerPlayRecord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.PerPlayRecord.class, Mahjong.PerPlayRecord.Builder.class);
      }

      // Construct using Mahjong.PerPlayRecord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getResultFieldBuilder();
          getExtraTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roundid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (resultBuilder_ == null) {
          result_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          resultBuilder_.clear();
        }
        deskid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gameRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        deskRound_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        birdCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        seatLimit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        winType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (extraTypeBuilder_ == null) {
          extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
        } else {
          extraTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        overTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        masterUin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        winners_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_PerPlayRecord_descriptor;
      }

      public Mahjong.PerPlayRecord getDefaultInstanceForType() {
        return Mahjong.PerPlayRecord.getDefaultInstance();
      }

      public Mahjong.PerPlayRecord build() {
        Mahjong.PerPlayRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.PerPlayRecord buildPartial() {
        Mahjong.PerPlayRecord result = new Mahjong.PerPlayRecord(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roundid_ = roundid_;
        if (resultBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            result_ = java.util.Collections.unmodifiableList(result_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.result_ = result_;
        } else {
          result.result_ = resultBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.deskid_ = deskid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameRound_ = gameRound_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.deskRound_ = deskRound_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          birdCard_ = java.util.Collections.unmodifiableList(birdCard_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.birdCard_ = birdCard_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.seatLimit_ = seatLimit_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.winType_ = winType_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        if (extraTypeBuilder_ == null) {
          result.extraType_ = extraType_;
        } else {
          result.extraType_ = extraTypeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.overTime_ = overTime_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.masterUin_ = masterUin_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          winners_ = java.util.Collections.unmodifiableList(winners_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.winners_ = winners_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.PerPlayRecord) {
          return mergeFrom((Mahjong.PerPlayRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.PerPlayRecord other) {
        if (other == Mahjong.PerPlayRecord.getDefaultInstance()) return this;
        if (other.hasRoundid()) {
          bitField0_ |= 0x00000001;
          roundid_ = other.roundid_;
          onChanged();
        }
        if (resultBuilder_ == null) {
          if (!other.result_.isEmpty()) {
            if (result_.isEmpty()) {
              result_ = other.result_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureResultIsMutable();
              result_.addAll(other.result_);
            }
            onChanged();
          }
        } else {
          if (!other.result_.isEmpty()) {
            if (resultBuilder_.isEmpty()) {
              resultBuilder_.dispose();
              resultBuilder_ = null;
              result_ = other.result_;
              bitField0_ = (bitField0_ & ~0x00000002);
              resultBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getResultFieldBuilder() : null;
            } else {
              resultBuilder_.addAllMessages(other.result_);
            }
          }
        }
        if (other.hasDeskid()) {
          setDeskid(other.getDeskid());
        }
        if (other.hasGameRound()) {
          setGameRound(other.getGameRound());
        }
        if (other.hasDeskRound()) {
          setDeskRound(other.getDeskRound());
        }
        if (!other.birdCard_.isEmpty()) {
          if (birdCard_.isEmpty()) {
            birdCard_ = other.birdCard_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureBirdCardIsMutable();
            birdCard_.addAll(other.birdCard_);
          }
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasSeatLimit()) {
          setSeatLimit(other.getSeatLimit());
        }
        if (other.hasWinType()) {
          setWinType(other.getWinType());
        }
        if (other.hasExtraType()) {
          mergeExtraType(other.getExtraType());
        }
        if (other.hasOverTime()) {
          setOverTime(other.getOverTime());
        }
        if (other.hasMasterUin()) {
          setMasterUin(other.getMasterUin());
        }
        if (!other.winners_.isEmpty()) {
          if (winners_.isEmpty()) {
            winners_ = other.winners_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureWinnersIsMutable();
            winners_.addAll(other.winners_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.PerPlayRecord parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.PerPlayRecord) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string roundid = 1;
      private java.lang.Object roundid_ = "";
      /**
       * <code>optional string roundid = 1;</code>
       */
      public boolean hasRoundid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string roundid = 1;</code>
       */
      public java.lang.String getRoundid() {
        java.lang.Object ref = roundid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          roundid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string roundid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRoundidBytes() {
        java.lang.Object ref = roundid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roundid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string roundid = 1;</code>
       */
      public Builder setRoundid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roundid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string roundid = 1;</code>
       */
      public Builder clearRoundid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roundid_ = getDefaultInstance().getRoundid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string roundid = 1;</code>
       */
      public Builder setRoundidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roundid_ = value;
        onChanged();
        return this;
      }

      // repeated .RecordInfo result = 2;
      private java.util.List<Mahjong.RecordInfo> result_ =
        java.util.Collections.emptyList();
      private void ensureResultIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          result_ = new java.util.ArrayList<Mahjong.RecordInfo>(result_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.RecordInfo, Mahjong.RecordInfo.Builder, Mahjong.RecordInfoOrBuilder> resultBuilder_;

      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public java.util.List<Mahjong.RecordInfo> getResultList() {
        if (resultBuilder_ == null) {
          return java.util.Collections.unmodifiableList(result_);
        } else {
          return resultBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public int getResultCount() {
        if (resultBuilder_ == null) {
          return result_.size();
        } else {
          return resultBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public Mahjong.RecordInfo getResult(int index) {
        if (resultBuilder_ == null) {
          return result_.get(index);
        } else {
          return resultBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public Builder setResult(
          int index, Mahjong.RecordInfo value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultIsMutable();
          result_.set(index, value);
          onChanged();
        } else {
          resultBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public Builder setResult(
          int index, Mahjong.RecordInfo.Builder builderForValue) {
        if (resultBuilder_ == null) {
          ensureResultIsMutable();
          result_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public Builder addResult(Mahjong.RecordInfo value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultIsMutable();
          result_.add(value);
          onChanged();
        } else {
          resultBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public Builder addResult(
          int index, Mahjong.RecordInfo value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultIsMutable();
          result_.add(index, value);
          onChanged();
        } else {
          resultBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public Builder addResult(
          Mahjong.RecordInfo.Builder builderForValue) {
        if (resultBuilder_ == null) {
          ensureResultIsMutable();
          result_.add(builderForValue.build());
          onChanged();
        } else {
          resultBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public Builder addResult(
          int index, Mahjong.RecordInfo.Builder builderForValue) {
        if (resultBuilder_ == null) {
          ensureResultIsMutable();
          result_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public Builder addAllResult(
          java.lang.Iterable<? extends Mahjong.RecordInfo> values) {
        if (resultBuilder_ == null) {
          ensureResultIsMutable();
          super.addAll(values, result_);
          onChanged();
        } else {
          resultBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public Builder clearResult() {
        if (resultBuilder_ == null) {
          result_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          resultBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public Builder removeResult(int index) {
        if (resultBuilder_ == null) {
          ensureResultIsMutable();
          result_.remove(index);
          onChanged();
        } else {
          resultBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public Mahjong.RecordInfo.Builder getResultBuilder(
          int index) {
        return getResultFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public Mahjong.RecordInfoOrBuilder getResultOrBuilder(
          int index) {
        if (resultBuilder_ == null) {
          return result_.get(index);  } else {
          return resultBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public java.util.List<? extends Mahjong.RecordInfoOrBuilder> 
           getResultOrBuilderList() {
        if (resultBuilder_ != null) {
          return resultBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(result_);
        }
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public Mahjong.RecordInfo.Builder addResultBuilder() {
        return getResultFieldBuilder().addBuilder(
            Mahjong.RecordInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public Mahjong.RecordInfo.Builder addResultBuilder(
          int index) {
        return getResultFieldBuilder().addBuilder(
            index, Mahjong.RecordInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .RecordInfo result = 2;</code>
       */
      public java.util.List<Mahjong.RecordInfo.Builder> 
           getResultBuilderList() {
        return getResultFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.RecordInfo, Mahjong.RecordInfo.Builder, Mahjong.RecordInfoOrBuilder> 
          getResultFieldBuilder() {
        if (resultBuilder_ == null) {
          resultBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Mahjong.RecordInfo, Mahjong.RecordInfo.Builder, Mahjong.RecordInfoOrBuilder>(
                  result_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          result_ = null;
        }
        return resultBuilder_;
      }

      // optional int32 deskid = 3;
      private int deskid_ ;
      /**
       * <code>optional int32 deskid = 3;</code>
       */
      public boolean hasDeskid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 deskid = 3;</code>
       */
      public int getDeskid() {
        return deskid_;
      }
      /**
       * <code>optional int32 deskid = 3;</code>
       */
      public Builder setDeskid(int value) {
        bitField0_ |= 0x00000004;
        deskid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 deskid = 3;</code>
       */
      public Builder clearDeskid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        deskid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_round = 4;
      private int gameRound_ ;
      /**
       * <code>optional int32 game_round = 4;</code>
       *
       * <pre>
       * 牌桌当前局数
       * </pre>
       */
      public boolean hasGameRound() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 game_round = 4;</code>
       *
       * <pre>
       * 牌桌当前局数
       * </pre>
       */
      public int getGameRound() {
        return gameRound_;
      }
      /**
       * <code>optional int32 game_round = 4;</code>
       *
       * <pre>
       * 牌桌当前局数
       * </pre>
       */
      public Builder setGameRound(int value) {
        bitField0_ |= 0x00000008;
        gameRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round = 4;</code>
       *
       * <pre>
       * 牌桌当前局数
       * </pre>
       */
      public Builder clearGameRound() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gameRound_ = 0;
        onChanged();
        return this;
      }

      // optional int32 desk_round = 6;
      private int deskRound_ ;
      /**
       * <code>optional int32 desk_round = 6;</code>
       *
       * <pre>
       * 牌桌总局数
       * </pre>
       */
      public boolean hasDeskRound() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 desk_round = 6;</code>
       *
       * <pre>
       * 牌桌总局数
       * </pre>
       */
      public int getDeskRound() {
        return deskRound_;
      }
      /**
       * <code>optional int32 desk_round = 6;</code>
       *
       * <pre>
       * 牌桌总局数
       * </pre>
       */
      public Builder setDeskRound(int value) {
        bitField0_ |= 0x00000010;
        deskRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 desk_round = 6;</code>
       *
       * <pre>
       * 牌桌总局数
       * </pre>
       */
      public Builder clearDeskRound() {
        bitField0_ = (bitField0_ & ~0x00000010);
        deskRound_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 bird_card = 7 [packed = true];
      private java.util.List<java.lang.Integer> birdCard_ = java.util.Collections.emptyList();
      private void ensureBirdCardIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          birdCard_ = new java.util.ArrayList<java.lang.Integer>(birdCard_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 bird_card = 7 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getBirdCardList() {
        return java.util.Collections.unmodifiableList(birdCard_);
      }
      /**
       * <code>repeated int32 bird_card = 7 [packed = true];</code>
       */
      public int getBirdCardCount() {
        return birdCard_.size();
      }
      /**
       * <code>repeated int32 bird_card = 7 [packed = true];</code>
       */
      public int getBirdCard(int index) {
        return birdCard_.get(index);
      }
      /**
       * <code>repeated int32 bird_card = 7 [packed = true];</code>
       */
      public Builder setBirdCard(
          int index, int value) {
        ensureBirdCardIsMutable();
        birdCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bird_card = 7 [packed = true];</code>
       */
      public Builder addBirdCard(int value) {
        ensureBirdCardIsMutable();
        birdCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bird_card = 7 [packed = true];</code>
       */
      public Builder addAllBirdCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBirdCardIsMutable();
        super.addAll(values, birdCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bird_card = 7 [packed = true];</code>
       */
      public Builder clearBirdCard() {
        birdCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 type = 8;
      private int type_ ;
      /**
       * <code>optional int32 type = 8;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 type = 8;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 8;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000040;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 8;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat_limit = 9;
      private int seatLimit_ ;
      /**
       * <code>optional int32 seat_limit = 9;</code>
       */
      public boolean hasSeatLimit() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 seat_limit = 9;</code>
       */
      public int getSeatLimit() {
        return seatLimit_;
      }
      /**
       * <code>optional int32 seat_limit = 9;</code>
       */
      public Builder setSeatLimit(int value) {
        bitField0_ |= 0x00000080;
        seatLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat_limit = 9;</code>
       */
      public Builder clearSeatLimit() {
        bitField0_ = (bitField0_ & ~0x00000080);
        seatLimit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 win_type = 10;
      private int winType_ ;
      /**
       * <code>optional int32 win_type = 10;</code>
       *
       * <pre>
       * 1点炮 2自摸                     
       * </pre>
       */
      public boolean hasWinType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 win_type = 10;</code>
       *
       * <pre>
       * 1点炮 2自摸                     
       * </pre>
       */
      public int getWinType() {
        return winType_;
      }
      /**
       * <code>optional int32 win_type = 10;</code>
       *
       * <pre>
       * 1点炮 2自摸                     
       * </pre>
       */
      public Builder setWinType(int value) {
        bitField0_ |= 0x00000100;
        winType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 win_type = 10;</code>
       *
       * <pre>
       * 1点炮 2自摸                     
       * </pre>
       */
      public Builder clearWinType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        winType_ = 0;
        onChanged();
        return this;
      }

      // optional .ExtraDeskTypeInfo extra_type = 11;
      private Mahjong.ExtraDeskTypeInfo extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.ExtraDeskTypeInfo, Mahjong.ExtraDeskTypeInfo.Builder, Mahjong.ExtraDeskTypeInfoOrBuilder> extraTypeBuilder_;
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 11;</code>
       */
      public boolean hasExtraType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 11;</code>
       */
      public Mahjong.ExtraDeskTypeInfo getExtraType() {
        if (extraTypeBuilder_ == null) {
          return extraType_;
        } else {
          return extraTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 11;</code>
       */
      public Builder setExtraType(Mahjong.ExtraDeskTypeInfo value) {
        if (extraTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          extraType_ = value;
          onChanged();
        } else {
          extraTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 11;</code>
       */
      public Builder setExtraType(
          Mahjong.ExtraDeskTypeInfo.Builder builderForValue) {
        if (extraTypeBuilder_ == null) {
          extraType_ = builderForValue.build();
          onChanged();
        } else {
          extraTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 11;</code>
       */
      public Builder mergeExtraType(Mahjong.ExtraDeskTypeInfo value) {
        if (extraTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              extraType_ != Mahjong.ExtraDeskTypeInfo.getDefaultInstance()) {
            extraType_ =
              Mahjong.ExtraDeskTypeInfo.newBuilder(extraType_).mergeFrom(value).buildPartial();
          } else {
            extraType_ = value;
          }
          onChanged();
        } else {
          extraTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 11;</code>
       */
      public Builder clearExtraType() {
        if (extraTypeBuilder_ == null) {
          extraType_ = Mahjong.ExtraDeskTypeInfo.getDefaultInstance();
          onChanged();
        } else {
          extraTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 11;</code>
       */
      public Mahjong.ExtraDeskTypeInfo.Builder getExtraTypeBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getExtraTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 11;</code>
       */
      public Mahjong.ExtraDeskTypeInfoOrBuilder getExtraTypeOrBuilder() {
        if (extraTypeBuilder_ != null) {
          return extraTypeBuilder_.getMessageOrBuilder();
        } else {
          return extraType_;
        }
      }
      /**
       * <code>optional .ExtraDeskTypeInfo extra_type = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.ExtraDeskTypeInfo, Mahjong.ExtraDeskTypeInfo.Builder, Mahjong.ExtraDeskTypeInfoOrBuilder> 
          getExtraTypeFieldBuilder() {
        if (extraTypeBuilder_ == null) {
          extraTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Mahjong.ExtraDeskTypeInfo, Mahjong.ExtraDeskTypeInfo.Builder, Mahjong.ExtraDeskTypeInfoOrBuilder>(
                  extraType_,
                  getParentForChildren(),
                  isClean());
          extraType_ = null;
        }
        return extraTypeBuilder_;
      }

      // optional int32 over_time = 12;
      private int overTime_ ;
      /**
       * <code>optional int32 over_time = 12;</code>
       */
      public boolean hasOverTime() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 over_time = 12;</code>
       */
      public int getOverTime() {
        return overTime_;
      }
      /**
       * <code>optional int32 over_time = 12;</code>
       */
      public Builder setOverTime(int value) {
        bitField0_ |= 0x00000400;
        overTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 over_time = 12;</code>
       */
      public Builder clearOverTime() {
        bitField0_ = (bitField0_ & ~0x00000400);
        overTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 master_uin = 13;
      private int masterUin_ ;
      /**
       * <code>optional int32 master_uin = 13;</code>
       */
      public boolean hasMasterUin() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 master_uin = 13;</code>
       */
      public int getMasterUin() {
        return masterUin_;
      }
      /**
       * <code>optional int32 master_uin = 13;</code>
       */
      public Builder setMasterUin(int value) {
        bitField0_ |= 0x00000800;
        masterUin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 master_uin = 13;</code>
       */
      public Builder clearMasterUin() {
        bitField0_ = (bitField0_ & ~0x00000800);
        masterUin_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 winners = 14 [packed = true];
      private java.util.List<java.lang.Integer> winners_ = java.util.Collections.emptyList();
      private void ensureWinnersIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          winners_ = new java.util.ArrayList<java.lang.Integer>(winners_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 winners = 14 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getWinnersList() {
        return java.util.Collections.unmodifiableList(winners_);
      }
      /**
       * <code>repeated int32 winners = 14 [packed = true];</code>
       */
      public int getWinnersCount() {
        return winners_.size();
      }
      /**
       * <code>repeated int32 winners = 14 [packed = true];</code>
       */
      public int getWinners(int index) {
        return winners_.get(index);
      }
      /**
       * <code>repeated int32 winners = 14 [packed = true];</code>
       */
      public Builder setWinners(
          int index, int value) {
        ensureWinnersIsMutable();
        winners_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winners = 14 [packed = true];</code>
       */
      public Builder addWinners(int value) {
        ensureWinnersIsMutable();
        winners_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winners = 14 [packed = true];</code>
       */
      public Builder addAllWinners(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinnersIsMutable();
        super.addAll(values, winners_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 winners = 14 [packed = true];</code>
       */
      public Builder clearWinners() {
        winners_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PerPlayRecord)
    }

    static {
      defaultInstance = new PerPlayRecord(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PerPlayRecord)
  }

  public interface MyPlayRecordListReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code MyPlayRecordListReq}
   *
   * <pre>
   * 客户端请求牌局记录列表 10001
   * </pre>
   */
  public static final class MyPlayRecordListReq extends
      com.google.protobuf.GeneratedMessage
      implements MyPlayRecordListReqOrBuilder {
    // Use MyPlayRecordListReq.newBuilder() to construct.
    private MyPlayRecordListReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MyPlayRecordListReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MyPlayRecordListReq defaultInstance;
    public static MyPlayRecordListReq getDefaultInstance() {
      return defaultInstance;
    }

    public MyPlayRecordListReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MyPlayRecordListReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_MyPlayRecordListReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_MyPlayRecordListReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.MyPlayRecordListReq.class, Mahjong.MyPlayRecordListReq.Builder.class);
    }

    public static com.google.protobuf.Parser<MyPlayRecordListReq> PARSER =
        new com.google.protobuf.AbstractParser<MyPlayRecordListReq>() {
      public MyPlayRecordListReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MyPlayRecordListReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MyPlayRecordListReq> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.MyPlayRecordListReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.MyPlayRecordListReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.MyPlayRecordListReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.MyPlayRecordListReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.MyPlayRecordListReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.MyPlayRecordListReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.MyPlayRecordListReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.MyPlayRecordListReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.MyPlayRecordListReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.MyPlayRecordListReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.MyPlayRecordListReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MyPlayRecordListReq}
     *
     * <pre>
     * 客户端请求牌局记录列表 10001
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.MyPlayRecordListReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_MyPlayRecordListReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_MyPlayRecordListReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.MyPlayRecordListReq.class, Mahjong.MyPlayRecordListReq.Builder.class);
      }

      // Construct using Mahjong.MyPlayRecordListReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_MyPlayRecordListReq_descriptor;
      }

      public Mahjong.MyPlayRecordListReq getDefaultInstanceForType() {
        return Mahjong.MyPlayRecordListReq.getDefaultInstance();
      }

      public Mahjong.MyPlayRecordListReq build() {
        Mahjong.MyPlayRecordListReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.MyPlayRecordListReq buildPartial() {
        Mahjong.MyPlayRecordListReq result = new Mahjong.MyPlayRecordListReq(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.MyPlayRecordListReq) {
          return mergeFrom((Mahjong.MyPlayRecordListReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.MyPlayRecordListReq other) {
        if (other == Mahjong.MyPlayRecordListReq.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.MyPlayRecordListReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.MyPlayRecordListReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MyPlayRecordListReq)
    }

    static {
      defaultInstance = new MyPlayRecordListReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MyPlayRecordListReq)
  }

  public interface MyPlayRecordListRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .PerPlayRecord record_list = 1;
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    java.util.List<Mahjong.PerPlayRecord> 
        getRecordListList();
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    Mahjong.PerPlayRecord getRecordList(int index);
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    int getRecordListCount();
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    java.util.List<? extends Mahjong.PerPlayRecordOrBuilder> 
        getRecordListOrBuilderList();
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    Mahjong.PerPlayRecordOrBuilder getRecordListOrBuilder(
        int index);

    // optional int32 ret = 2;
    /**
     * <code>optional int32 ret = 2;</code>
     */
    boolean hasRet();
    /**
     * <code>optional int32 ret = 2;</code>
     */
    int getRet();
  }
  /**
   * Protobuf type {@code MyPlayRecordListRsp}
   *
   * <pre>
   * 
   * </pre>
   */
  public static final class MyPlayRecordListRsp extends
      com.google.protobuf.GeneratedMessage
      implements MyPlayRecordListRspOrBuilder {
    // Use MyPlayRecordListRsp.newBuilder() to construct.
    private MyPlayRecordListRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MyPlayRecordListRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MyPlayRecordListRsp defaultInstance;
    public static MyPlayRecordListRsp getDefaultInstance() {
      return defaultInstance;
    }

    public MyPlayRecordListRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MyPlayRecordListRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                recordList_ = new java.util.ArrayList<Mahjong.PerPlayRecord>();
                mutable_bitField0_ |= 0x00000001;
              }
              recordList_.add(input.readMessage(Mahjong.PerPlayRecord.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              ret_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          recordList_ = java.util.Collections.unmodifiableList(recordList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_MyPlayRecordListRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_MyPlayRecordListRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.MyPlayRecordListRsp.class, Mahjong.MyPlayRecordListRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<MyPlayRecordListRsp> PARSER =
        new com.google.protobuf.AbstractParser<MyPlayRecordListRsp>() {
      public MyPlayRecordListRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MyPlayRecordListRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MyPlayRecordListRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .PerPlayRecord record_list = 1;
    public static final int RECORD_LIST_FIELD_NUMBER = 1;
    private java.util.List<Mahjong.PerPlayRecord> recordList_;
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    public java.util.List<Mahjong.PerPlayRecord> getRecordListList() {
      return recordList_;
    }
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    public java.util.List<? extends Mahjong.PerPlayRecordOrBuilder> 
        getRecordListOrBuilderList() {
      return recordList_;
    }
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    public int getRecordListCount() {
      return recordList_.size();
    }
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    public Mahjong.PerPlayRecord getRecordList(int index) {
      return recordList_.get(index);
    }
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    public Mahjong.PerPlayRecordOrBuilder getRecordListOrBuilder(
        int index) {
      return recordList_.get(index);
    }

    // optional int32 ret = 2;
    public static final int RET_FIELD_NUMBER = 2;
    private int ret_;
    /**
     * <code>optional int32 ret = 2;</code>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ret = 2;</code>
     */
    public int getRet() {
      return ret_;
    }

    private void initFields() {
      recordList_ = java.util.Collections.emptyList();
      ret_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < recordList_.size(); i++) {
        output.writeMessage(1, recordList_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, ret_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < recordList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, recordList_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, ret_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.MyPlayRecordListRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.MyPlayRecordListRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.MyPlayRecordListRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.MyPlayRecordListRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.MyPlayRecordListRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.MyPlayRecordListRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.MyPlayRecordListRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.MyPlayRecordListRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.MyPlayRecordListRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.MyPlayRecordListRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.MyPlayRecordListRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MyPlayRecordListRsp}
     *
     * <pre>
     * 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.MyPlayRecordListRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_MyPlayRecordListRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_MyPlayRecordListRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.MyPlayRecordListRsp.class, Mahjong.MyPlayRecordListRsp.Builder.class);
      }

      // Construct using Mahjong.MyPlayRecordListRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRecordListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (recordListBuilder_ == null) {
          recordList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          recordListBuilder_.clear();
        }
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_MyPlayRecordListRsp_descriptor;
      }

      public Mahjong.MyPlayRecordListRsp getDefaultInstanceForType() {
        return Mahjong.MyPlayRecordListRsp.getDefaultInstance();
      }

      public Mahjong.MyPlayRecordListRsp build() {
        Mahjong.MyPlayRecordListRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.MyPlayRecordListRsp buildPartial() {
        Mahjong.MyPlayRecordListRsp result = new Mahjong.MyPlayRecordListRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (recordListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            recordList_ = java.util.Collections.unmodifiableList(recordList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.recordList_ = recordList_;
        } else {
          result.recordList_ = recordListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ret_ = ret_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.MyPlayRecordListRsp) {
          return mergeFrom((Mahjong.MyPlayRecordListRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.MyPlayRecordListRsp other) {
        if (other == Mahjong.MyPlayRecordListRsp.getDefaultInstance()) return this;
        if (recordListBuilder_ == null) {
          if (!other.recordList_.isEmpty()) {
            if (recordList_.isEmpty()) {
              recordList_ = other.recordList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRecordListIsMutable();
              recordList_.addAll(other.recordList_);
            }
            onChanged();
          }
        } else {
          if (!other.recordList_.isEmpty()) {
            if (recordListBuilder_.isEmpty()) {
              recordListBuilder_.dispose();
              recordListBuilder_ = null;
              recordList_ = other.recordList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              recordListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRecordListFieldBuilder() : null;
            } else {
              recordListBuilder_.addAllMessages(other.recordList_);
            }
          }
        }
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.MyPlayRecordListRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.MyPlayRecordListRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PerPlayRecord record_list = 1;
      private java.util.List<Mahjong.PerPlayRecord> recordList_ =
        java.util.Collections.emptyList();
      private void ensureRecordListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          recordList_ = new java.util.ArrayList<Mahjong.PerPlayRecord>(recordList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.PerPlayRecord, Mahjong.PerPlayRecord.Builder, Mahjong.PerPlayRecordOrBuilder> recordListBuilder_;

      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public java.util.List<Mahjong.PerPlayRecord> getRecordListList() {
        if (recordListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(recordList_);
        } else {
          return recordListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public int getRecordListCount() {
        if (recordListBuilder_ == null) {
          return recordList_.size();
        } else {
          return recordListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Mahjong.PerPlayRecord getRecordList(int index) {
        if (recordListBuilder_ == null) {
          return recordList_.get(index);
        } else {
          return recordListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder setRecordList(
          int index, Mahjong.PerPlayRecord value) {
        if (recordListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordListIsMutable();
          recordList_.set(index, value);
          onChanged();
        } else {
          recordListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder setRecordList(
          int index, Mahjong.PerPlayRecord.Builder builderForValue) {
        if (recordListBuilder_ == null) {
          ensureRecordListIsMutable();
          recordList_.set(index, builderForValue.build());
          onChanged();
        } else {
          recordListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder addRecordList(Mahjong.PerPlayRecord value) {
        if (recordListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordListIsMutable();
          recordList_.add(value);
          onChanged();
        } else {
          recordListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder addRecordList(
          int index, Mahjong.PerPlayRecord value) {
        if (recordListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordListIsMutable();
          recordList_.add(index, value);
          onChanged();
        } else {
          recordListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder addRecordList(
          Mahjong.PerPlayRecord.Builder builderForValue) {
        if (recordListBuilder_ == null) {
          ensureRecordListIsMutable();
          recordList_.add(builderForValue.build());
          onChanged();
        } else {
          recordListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder addRecordList(
          int index, Mahjong.PerPlayRecord.Builder builderForValue) {
        if (recordListBuilder_ == null) {
          ensureRecordListIsMutable();
          recordList_.add(index, builderForValue.build());
          onChanged();
        } else {
          recordListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder addAllRecordList(
          java.lang.Iterable<? extends Mahjong.PerPlayRecord> values) {
        if (recordListBuilder_ == null) {
          ensureRecordListIsMutable();
          super.addAll(values, recordList_);
          onChanged();
        } else {
          recordListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder clearRecordList() {
        if (recordListBuilder_ == null) {
          recordList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          recordListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder removeRecordList(int index) {
        if (recordListBuilder_ == null) {
          ensureRecordListIsMutable();
          recordList_.remove(index);
          onChanged();
        } else {
          recordListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Mahjong.PerPlayRecord.Builder getRecordListBuilder(
          int index) {
        return getRecordListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Mahjong.PerPlayRecordOrBuilder getRecordListOrBuilder(
          int index) {
        if (recordListBuilder_ == null) {
          return recordList_.get(index);  } else {
          return recordListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public java.util.List<? extends Mahjong.PerPlayRecordOrBuilder> 
           getRecordListOrBuilderList() {
        if (recordListBuilder_ != null) {
          return recordListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(recordList_);
        }
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Mahjong.PerPlayRecord.Builder addRecordListBuilder() {
        return getRecordListFieldBuilder().addBuilder(
            Mahjong.PerPlayRecord.getDefaultInstance());
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Mahjong.PerPlayRecord.Builder addRecordListBuilder(
          int index) {
        return getRecordListFieldBuilder().addBuilder(
            index, Mahjong.PerPlayRecord.getDefaultInstance());
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public java.util.List<Mahjong.PerPlayRecord.Builder> 
           getRecordListBuilderList() {
        return getRecordListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.PerPlayRecord, Mahjong.PerPlayRecord.Builder, Mahjong.PerPlayRecordOrBuilder> 
          getRecordListFieldBuilder() {
        if (recordListBuilder_ == null) {
          recordListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Mahjong.PerPlayRecord, Mahjong.PerPlayRecord.Builder, Mahjong.PerPlayRecordOrBuilder>(
                  recordList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          recordList_ = null;
        }
        return recordListBuilder_;
      }

      // optional int32 ret = 2;
      private int ret_ ;
      /**
       * <code>optional int32 ret = 2;</code>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 ret = 2;</code>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 2;</code>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000002;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 2;</code>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ret_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MyPlayRecordListRsp)
    }

    static {
      defaultInstance = new MyPlayRecordListRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MyPlayRecordListRsp)
  }

  public interface RoundPlayRecordsReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string round_id = 1;
    /**
     * <code>optional string round_id = 1;</code>
     *
     * <pre>
     * 牌局ID
     * </pre>
     */
    boolean hasRoundId();
    /**
     * <code>optional string round_id = 1;</code>
     *
     * <pre>
     * 牌局ID
     * </pre>
     */
    java.lang.String getRoundId();
    /**
     * <code>optional string round_id = 1;</code>
     *
     * <pre>
     * 牌局ID
     * </pre>
     */
    com.google.protobuf.ByteString
        getRoundIdBytes();

    // optional int32 game_round_index = 2;
    /**
     * <code>optional int32 game_round_index = 2;</code>
     *
     * <pre>
     * 具体到哪一局
     * </pre>
     */
    boolean hasGameRoundIndex();
    /**
     * <code>optional int32 game_round_index = 2;</code>
     *
     * <pre>
     * 具体到哪一局
     * </pre>
     */
    int getGameRoundIndex();
  }
  /**
   * Protobuf type {@code RoundPlayRecordsReq}
   *
   * <pre>
   * 客户端请求牌局记录详情 10002
   * </pre>
   */
  public static final class RoundPlayRecordsReq extends
      com.google.protobuf.GeneratedMessage
      implements RoundPlayRecordsReqOrBuilder {
    // Use RoundPlayRecordsReq.newBuilder() to construct.
    private RoundPlayRecordsReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoundPlayRecordsReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoundPlayRecordsReq defaultInstance;
    public static RoundPlayRecordsReq getDefaultInstance() {
      return defaultInstance;
    }

    public RoundPlayRecordsReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoundPlayRecordsReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              roundId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gameRoundIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_RoundPlayRecordsReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_RoundPlayRecordsReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.RoundPlayRecordsReq.class, Mahjong.RoundPlayRecordsReq.Builder.class);
    }

    public static com.google.protobuf.Parser<RoundPlayRecordsReq> PARSER =
        new com.google.protobuf.AbstractParser<RoundPlayRecordsReq>() {
      public RoundPlayRecordsReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoundPlayRecordsReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoundPlayRecordsReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string round_id = 1;
    public static final int ROUND_ID_FIELD_NUMBER = 1;
    private java.lang.Object roundId_;
    /**
     * <code>optional string round_id = 1;</code>
     *
     * <pre>
     * 牌局ID
     * </pre>
     */
    public boolean hasRoundId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string round_id = 1;</code>
     *
     * <pre>
     * 牌局ID
     * </pre>
     */
    public java.lang.String getRoundId() {
      java.lang.Object ref = roundId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          roundId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string round_id = 1;</code>
     *
     * <pre>
     * 牌局ID
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRoundIdBytes() {
      java.lang.Object ref = roundId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roundId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 game_round_index = 2;
    public static final int GAME_ROUND_INDEX_FIELD_NUMBER = 2;
    private int gameRoundIndex_;
    /**
     * <code>optional int32 game_round_index = 2;</code>
     *
     * <pre>
     * 具体到哪一局
     * </pre>
     */
    public boolean hasGameRoundIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 game_round_index = 2;</code>
     *
     * <pre>
     * 具体到哪一局
     * </pre>
     */
    public int getGameRoundIndex() {
      return gameRoundIndex_;
    }

    private void initFields() {
      roundId_ = "";
      gameRoundIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getRoundIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, gameRoundIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getRoundIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gameRoundIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.RoundPlayRecordsReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.RoundPlayRecordsReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.RoundPlayRecordsReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.RoundPlayRecordsReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.RoundPlayRecordsReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.RoundPlayRecordsReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.RoundPlayRecordsReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.RoundPlayRecordsReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.RoundPlayRecordsReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.RoundPlayRecordsReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.RoundPlayRecordsReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RoundPlayRecordsReq}
     *
     * <pre>
     * 客户端请求牌局记录详情 10002
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.RoundPlayRecordsReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_RoundPlayRecordsReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_RoundPlayRecordsReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.RoundPlayRecordsReq.class, Mahjong.RoundPlayRecordsReq.Builder.class);
      }

      // Construct using Mahjong.RoundPlayRecordsReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roundId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        gameRoundIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_RoundPlayRecordsReq_descriptor;
      }

      public Mahjong.RoundPlayRecordsReq getDefaultInstanceForType() {
        return Mahjong.RoundPlayRecordsReq.getDefaultInstance();
      }

      public Mahjong.RoundPlayRecordsReq build() {
        Mahjong.RoundPlayRecordsReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.RoundPlayRecordsReq buildPartial() {
        Mahjong.RoundPlayRecordsReq result = new Mahjong.RoundPlayRecordsReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roundId_ = roundId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameRoundIndex_ = gameRoundIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.RoundPlayRecordsReq) {
          return mergeFrom((Mahjong.RoundPlayRecordsReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.RoundPlayRecordsReq other) {
        if (other == Mahjong.RoundPlayRecordsReq.getDefaultInstance()) return this;
        if (other.hasRoundId()) {
          bitField0_ |= 0x00000001;
          roundId_ = other.roundId_;
          onChanged();
        }
        if (other.hasGameRoundIndex()) {
          setGameRoundIndex(other.getGameRoundIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.RoundPlayRecordsReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.RoundPlayRecordsReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string round_id = 1;
      private java.lang.Object roundId_ = "";
      /**
       * <code>optional string round_id = 1;</code>
       *
       * <pre>
       * 牌局ID
       * </pre>
       */
      public boolean hasRoundId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string round_id = 1;</code>
       *
       * <pre>
       * 牌局ID
       * </pre>
       */
      public java.lang.String getRoundId() {
        java.lang.Object ref = roundId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          roundId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string round_id = 1;</code>
       *
       * <pre>
       * 牌局ID
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRoundIdBytes() {
        java.lang.Object ref = roundId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roundId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string round_id = 1;</code>
       *
       * <pre>
       * 牌局ID
       * </pre>
       */
      public Builder setRoundId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roundId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string round_id = 1;</code>
       *
       * <pre>
       * 牌局ID
       * </pre>
       */
      public Builder clearRoundId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roundId_ = getDefaultInstance().getRoundId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string round_id = 1;</code>
       *
       * <pre>
       * 牌局ID
       * </pre>
       */
      public Builder setRoundIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roundId_ = value;
        onChanged();
        return this;
      }

      // optional int32 game_round_index = 2;
      private int gameRoundIndex_ ;
      /**
       * <code>optional int32 game_round_index = 2;</code>
       *
       * <pre>
       * 具体到哪一局
       * </pre>
       */
      public boolean hasGameRoundIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 game_round_index = 2;</code>
       *
       * <pre>
       * 具体到哪一局
       * </pre>
       */
      public int getGameRoundIndex() {
        return gameRoundIndex_;
      }
      /**
       * <code>optional int32 game_round_index = 2;</code>
       *
       * <pre>
       * 具体到哪一局
       * </pre>
       */
      public Builder setGameRoundIndex(int value) {
        bitField0_ |= 0x00000002;
        gameRoundIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_round_index = 2;</code>
       *
       * <pre>
       * 具体到哪一局
       * </pre>
       */
      public Builder clearGameRoundIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gameRoundIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RoundPlayRecordsReq)
    }

    static {
      defaultInstance = new RoundPlayRecordsReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:RoundPlayRecordsReq)
  }

  public interface RoundPlayRecordsRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .PerPlayRecord record_list = 1;
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    java.util.List<Mahjong.PerPlayRecord> 
        getRecordListList();
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    Mahjong.PerPlayRecord getRecordList(int index);
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    int getRecordListCount();
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    java.util.List<? extends Mahjong.PerPlayRecordOrBuilder> 
        getRecordListOrBuilderList();
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    Mahjong.PerPlayRecordOrBuilder getRecordListOrBuilder(
        int index);

    // optional int32 ret = 2;
    /**
     * <code>optional int32 ret = 2;</code>
     */
    boolean hasRet();
    /**
     * <code>optional int32 ret = 2;</code>
     */
    int getRet();
  }
  /**
   * Protobuf type {@code RoundPlayRecordsRsp}
   */
  public static final class RoundPlayRecordsRsp extends
      com.google.protobuf.GeneratedMessage
      implements RoundPlayRecordsRspOrBuilder {
    // Use RoundPlayRecordsRsp.newBuilder() to construct.
    private RoundPlayRecordsRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoundPlayRecordsRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoundPlayRecordsRsp defaultInstance;
    public static RoundPlayRecordsRsp getDefaultInstance() {
      return defaultInstance;
    }

    public RoundPlayRecordsRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoundPlayRecordsRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                recordList_ = new java.util.ArrayList<Mahjong.PerPlayRecord>();
                mutable_bitField0_ |= 0x00000001;
              }
              recordList_.add(input.readMessage(Mahjong.PerPlayRecord.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              ret_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          recordList_ = java.util.Collections.unmodifiableList(recordList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_RoundPlayRecordsRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_RoundPlayRecordsRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.RoundPlayRecordsRsp.class, Mahjong.RoundPlayRecordsRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<RoundPlayRecordsRsp> PARSER =
        new com.google.protobuf.AbstractParser<RoundPlayRecordsRsp>() {
      public RoundPlayRecordsRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoundPlayRecordsRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoundPlayRecordsRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .PerPlayRecord record_list = 1;
    public static final int RECORD_LIST_FIELD_NUMBER = 1;
    private java.util.List<Mahjong.PerPlayRecord> recordList_;
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    public java.util.List<Mahjong.PerPlayRecord> getRecordListList() {
      return recordList_;
    }
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    public java.util.List<? extends Mahjong.PerPlayRecordOrBuilder> 
        getRecordListOrBuilderList() {
      return recordList_;
    }
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    public int getRecordListCount() {
      return recordList_.size();
    }
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    public Mahjong.PerPlayRecord getRecordList(int index) {
      return recordList_.get(index);
    }
    /**
     * <code>repeated .PerPlayRecord record_list = 1;</code>
     */
    public Mahjong.PerPlayRecordOrBuilder getRecordListOrBuilder(
        int index) {
      return recordList_.get(index);
    }

    // optional int32 ret = 2;
    public static final int RET_FIELD_NUMBER = 2;
    private int ret_;
    /**
     * <code>optional int32 ret = 2;</code>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ret = 2;</code>
     */
    public int getRet() {
      return ret_;
    }

    private void initFields() {
      recordList_ = java.util.Collections.emptyList();
      ret_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < recordList_.size(); i++) {
        output.writeMessage(1, recordList_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, ret_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < recordList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, recordList_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, ret_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.RoundPlayRecordsRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.RoundPlayRecordsRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.RoundPlayRecordsRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.RoundPlayRecordsRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.RoundPlayRecordsRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.RoundPlayRecordsRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.RoundPlayRecordsRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.RoundPlayRecordsRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.RoundPlayRecordsRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.RoundPlayRecordsRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.RoundPlayRecordsRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RoundPlayRecordsRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.RoundPlayRecordsRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_RoundPlayRecordsRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_RoundPlayRecordsRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.RoundPlayRecordsRsp.class, Mahjong.RoundPlayRecordsRsp.Builder.class);
      }

      // Construct using Mahjong.RoundPlayRecordsRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRecordListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (recordListBuilder_ == null) {
          recordList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          recordListBuilder_.clear();
        }
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_RoundPlayRecordsRsp_descriptor;
      }

      public Mahjong.RoundPlayRecordsRsp getDefaultInstanceForType() {
        return Mahjong.RoundPlayRecordsRsp.getDefaultInstance();
      }

      public Mahjong.RoundPlayRecordsRsp build() {
        Mahjong.RoundPlayRecordsRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.RoundPlayRecordsRsp buildPartial() {
        Mahjong.RoundPlayRecordsRsp result = new Mahjong.RoundPlayRecordsRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (recordListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            recordList_ = java.util.Collections.unmodifiableList(recordList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.recordList_ = recordList_;
        } else {
          result.recordList_ = recordListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ret_ = ret_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.RoundPlayRecordsRsp) {
          return mergeFrom((Mahjong.RoundPlayRecordsRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.RoundPlayRecordsRsp other) {
        if (other == Mahjong.RoundPlayRecordsRsp.getDefaultInstance()) return this;
        if (recordListBuilder_ == null) {
          if (!other.recordList_.isEmpty()) {
            if (recordList_.isEmpty()) {
              recordList_ = other.recordList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRecordListIsMutable();
              recordList_.addAll(other.recordList_);
            }
            onChanged();
          }
        } else {
          if (!other.recordList_.isEmpty()) {
            if (recordListBuilder_.isEmpty()) {
              recordListBuilder_.dispose();
              recordListBuilder_ = null;
              recordList_ = other.recordList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              recordListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRecordListFieldBuilder() : null;
            } else {
              recordListBuilder_.addAllMessages(other.recordList_);
            }
          }
        }
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.RoundPlayRecordsRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.RoundPlayRecordsRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .PerPlayRecord record_list = 1;
      private java.util.List<Mahjong.PerPlayRecord> recordList_ =
        java.util.Collections.emptyList();
      private void ensureRecordListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          recordList_ = new java.util.ArrayList<Mahjong.PerPlayRecord>(recordList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.PerPlayRecord, Mahjong.PerPlayRecord.Builder, Mahjong.PerPlayRecordOrBuilder> recordListBuilder_;

      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public java.util.List<Mahjong.PerPlayRecord> getRecordListList() {
        if (recordListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(recordList_);
        } else {
          return recordListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public int getRecordListCount() {
        if (recordListBuilder_ == null) {
          return recordList_.size();
        } else {
          return recordListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Mahjong.PerPlayRecord getRecordList(int index) {
        if (recordListBuilder_ == null) {
          return recordList_.get(index);
        } else {
          return recordListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder setRecordList(
          int index, Mahjong.PerPlayRecord value) {
        if (recordListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordListIsMutable();
          recordList_.set(index, value);
          onChanged();
        } else {
          recordListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder setRecordList(
          int index, Mahjong.PerPlayRecord.Builder builderForValue) {
        if (recordListBuilder_ == null) {
          ensureRecordListIsMutable();
          recordList_.set(index, builderForValue.build());
          onChanged();
        } else {
          recordListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder addRecordList(Mahjong.PerPlayRecord value) {
        if (recordListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordListIsMutable();
          recordList_.add(value);
          onChanged();
        } else {
          recordListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder addRecordList(
          int index, Mahjong.PerPlayRecord value) {
        if (recordListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordListIsMutable();
          recordList_.add(index, value);
          onChanged();
        } else {
          recordListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder addRecordList(
          Mahjong.PerPlayRecord.Builder builderForValue) {
        if (recordListBuilder_ == null) {
          ensureRecordListIsMutable();
          recordList_.add(builderForValue.build());
          onChanged();
        } else {
          recordListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder addRecordList(
          int index, Mahjong.PerPlayRecord.Builder builderForValue) {
        if (recordListBuilder_ == null) {
          ensureRecordListIsMutable();
          recordList_.add(index, builderForValue.build());
          onChanged();
        } else {
          recordListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder addAllRecordList(
          java.lang.Iterable<? extends Mahjong.PerPlayRecord> values) {
        if (recordListBuilder_ == null) {
          ensureRecordListIsMutable();
          super.addAll(values, recordList_);
          onChanged();
        } else {
          recordListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder clearRecordList() {
        if (recordListBuilder_ == null) {
          recordList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          recordListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Builder removeRecordList(int index) {
        if (recordListBuilder_ == null) {
          ensureRecordListIsMutable();
          recordList_.remove(index);
          onChanged();
        } else {
          recordListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Mahjong.PerPlayRecord.Builder getRecordListBuilder(
          int index) {
        return getRecordListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Mahjong.PerPlayRecordOrBuilder getRecordListOrBuilder(
          int index) {
        if (recordListBuilder_ == null) {
          return recordList_.get(index);  } else {
          return recordListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public java.util.List<? extends Mahjong.PerPlayRecordOrBuilder> 
           getRecordListOrBuilderList() {
        if (recordListBuilder_ != null) {
          return recordListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(recordList_);
        }
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Mahjong.PerPlayRecord.Builder addRecordListBuilder() {
        return getRecordListFieldBuilder().addBuilder(
            Mahjong.PerPlayRecord.getDefaultInstance());
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public Mahjong.PerPlayRecord.Builder addRecordListBuilder(
          int index) {
        return getRecordListFieldBuilder().addBuilder(
            index, Mahjong.PerPlayRecord.getDefaultInstance());
      }
      /**
       * <code>repeated .PerPlayRecord record_list = 1;</code>
       */
      public java.util.List<Mahjong.PerPlayRecord.Builder> 
           getRecordListBuilderList() {
        return getRecordListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.PerPlayRecord, Mahjong.PerPlayRecord.Builder, Mahjong.PerPlayRecordOrBuilder> 
          getRecordListFieldBuilder() {
        if (recordListBuilder_ == null) {
          recordListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Mahjong.PerPlayRecord, Mahjong.PerPlayRecord.Builder, Mahjong.PerPlayRecordOrBuilder>(
                  recordList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          recordList_ = null;
        }
        return recordListBuilder_;
      }

      // optional int32 ret = 2;
      private int ret_ ;
      /**
       * <code>optional int32 ret = 2;</code>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 ret = 2;</code>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 2;</code>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000002;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 2;</code>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ret_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RoundPlayRecordsRsp)
    }

    static {
      defaultInstance = new RoundPlayRecordsRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:RoundPlayRecordsRsp)
  }

  public interface DeskChatReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string content = 1;
    /**
     * <code>optional string content = 1;</code>
     *
     * <pre>
     * content of the chat
     * </pre>
     */
    boolean hasContent();
    /**
     * <code>optional string content = 1;</code>
     *
     * <pre>
     * content of the chat
     * </pre>
     */
    java.lang.String getContent();
    /**
     * <code>optional string content = 1;</code>
     *
     * <pre>
     * content of the chat
     * </pre>
     */
    com.google.protobuf.ByteString
        getContentBytes();

    // optional int32 type = 2;
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     * 1文字聊天 2语音聊天，语音聊天带上发送的语句索引
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     * 1文字聊天 2语音聊天，语音聊天带上发送的语句索引
     * </pre>
     */
    int getType();

    // optional int32 index = 3;
    /**
     * <code>optional int32 index = 3;</code>
     *
     * <pre>
     * 语音语句索引 按照发言语句顺序从1开始往后算，不能为0
     * </pre>
     */
    boolean hasIndex();
    /**
     * <code>optional int32 index = 3;</code>
     *
     * <pre>
     * 语音语句索引 按照发言语句顺序从1开始往后算，不能为0
     * </pre>
     */
    int getIndex();
  }
  /**
   * Protobuf type {@code DeskChatReq}
   *
   * <pre>
   * 台桌内聊天（文字聊天也留着） cmd:10003
   * </pre>
   */
  public static final class DeskChatReq extends
      com.google.protobuf.GeneratedMessage
      implements DeskChatReqOrBuilder {
    // Use DeskChatReq.newBuilder() to construct.
    private DeskChatReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeskChatReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeskChatReq defaultInstance;
    public static DeskChatReq getDefaultInstance() {
      return defaultInstance;
    }

    public DeskChatReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeskChatReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              content_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              index_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_DeskChatReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_DeskChatReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.DeskChatReq.class, Mahjong.DeskChatReq.Builder.class);
    }

    public static com.google.protobuf.Parser<DeskChatReq> PARSER =
        new com.google.protobuf.AbstractParser<DeskChatReq>() {
      public DeskChatReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeskChatReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeskChatReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string content = 1;
    public static final int CONTENT_FIELD_NUMBER = 1;
    private java.lang.Object content_;
    /**
     * <code>optional string content = 1;</code>
     *
     * <pre>
     * content of the chat
     * </pre>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string content = 1;</code>
     *
     * <pre>
     * content of the chat
     * </pre>
     */
    public java.lang.String getContent() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          content_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string content = 1;</code>
     *
     * <pre>
     * content of the chat
     * </pre>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     * 1文字聊天 2语音聊天，语音聊天带上发送的语句索引
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 type = 2;</code>
     *
     * <pre>
     * 1文字聊天 2语音聊天，语音聊天带上发送的语句索引
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // optional int32 index = 3;
    public static final int INDEX_FIELD_NUMBER = 3;
    private int index_;
    /**
     * <code>optional int32 index = 3;</code>
     *
     * <pre>
     * 语音语句索引 按照发言语句顺序从1开始往后算，不能为0
     * </pre>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 index = 3;</code>
     *
     * <pre>
     * 语音语句索引 按照发言语句顺序从1开始往后算，不能为0
     * </pre>
     */
    public int getIndex() {
      return index_;
    }

    private void initFields() {
      content_ = "";
      type_ = 0;
      index_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getContentBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, index_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getContentBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, index_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.DeskChatReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.DeskChatReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.DeskChatReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.DeskChatReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.DeskChatReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.DeskChatReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.DeskChatReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.DeskChatReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.DeskChatReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.DeskChatReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.DeskChatReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DeskChatReq}
     *
     * <pre>
     * 台桌内聊天（文字聊天也留着） cmd:10003
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.DeskChatReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_DeskChatReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_DeskChatReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.DeskChatReq.class, Mahjong.DeskChatReq.Builder.class);
      }

      // Construct using Mahjong.DeskChatReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        content_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_DeskChatReq_descriptor;
      }

      public Mahjong.DeskChatReq getDefaultInstanceForType() {
        return Mahjong.DeskChatReq.getDefaultInstance();
      }

      public Mahjong.DeskChatReq build() {
        Mahjong.DeskChatReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.DeskChatReq buildPartial() {
        Mahjong.DeskChatReq result = new Mahjong.DeskChatReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.content_ = content_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.index_ = index_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.DeskChatReq) {
          return mergeFrom((Mahjong.DeskChatReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.DeskChatReq other) {
        if (other == Mahjong.DeskChatReq.getDefaultInstance()) return this;
        if (other.hasContent()) {
          bitField0_ |= 0x00000001;
          content_ = other.content_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.DeskChatReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.DeskChatReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string content = 1;
      private java.lang.Object content_ = "";
      /**
       * <code>optional string content = 1;</code>
       *
       * <pre>
       * content of the chat
       * </pre>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string content = 1;</code>
       *
       * <pre>
       * content of the chat
       * </pre>
       */
      public java.lang.String getContent() {
        java.lang.Object ref = content_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          content_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string content = 1;</code>
       *
       * <pre>
       * content of the chat
       * </pre>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        java.lang.Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string content = 1;</code>
       *
       * <pre>
       * content of the chat
       * </pre>
       */
      public Builder setContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 1;</code>
       *
       * <pre>
       * content of the chat
       * </pre>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000001);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 1;</code>
       *
       * <pre>
       * content of the chat
       * </pre>
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        content_ = value;
        onChanged();
        return this;
      }

      // optional int32 type = 2;
      private int type_ ;
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       * 1文字聊天 2语音聊天，语音聊天带上发送的语句索引
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       * 1文字聊天 2语音聊天，语音聊天带上发送的语句索引
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       * 1文字聊天 2语音聊天，语音聊天带上发送的语句索引
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 2;</code>
       *
       * <pre>
       * 1文字聊天 2语音聊天，语音聊天带上发送的语句索引
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      // optional int32 index = 3;
      private int index_ ;
      /**
       * <code>optional int32 index = 3;</code>
       *
       * <pre>
       * 语音语句索引 按照发言语句顺序从1开始往后算，不能为0
       * </pre>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 index = 3;</code>
       *
       * <pre>
       * 语音语句索引 按照发言语句顺序从1开始往后算，不能为0
       * </pre>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>optional int32 index = 3;</code>
       *
       * <pre>
       * 语音语句索引 按照发言语句顺序从1开始往后算，不能为0
       * </pre>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000004;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 index = 3;</code>
       *
       * <pre>
       * 语音语句索引 按照发言语句顺序从1开始往后算，不能为0
       * </pre>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        index_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DeskChatReq)
    }

    static {
      defaultInstance = new DeskChatReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DeskChatReq)
  }

  public interface DeskChatEvtOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 ret = 1;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>optional int32 ret = 1;</code>
     */
    int getRet();

    // optional int32 op_uin = 2;
    /**
     * <code>optional int32 op_uin = 2;</code>
     */
    boolean hasOpUin();
    /**
     * <code>optional int32 op_uin = 2;</code>
     */
    int getOpUin();

    // optional bool sex = 3;
    /**
     * <code>optional bool sex = 3;</code>
     */
    boolean hasSex();
    /**
     * <code>optional bool sex = 3;</code>
     */
    boolean getSex();

    // optional int32 index = 4;
    /**
     * <code>optional int32 index = 4;</code>
     */
    boolean hasIndex();
    /**
     * <code>optional int32 index = 4;</code>
     */
    int getIndex();

    // optional string content = 5;
    /**
     * <code>optional string content = 5;</code>
     */
    boolean hasContent();
    /**
     * <code>optional string content = 5;</code>
     */
    java.lang.String getContent();
    /**
     * <code>optional string content = 5;</code>
     */
    com.google.protobuf.ByteString
        getContentBytes();
  }
  /**
   * Protobuf type {@code DeskChatEvt}
   */
  public static final class DeskChatEvt extends
      com.google.protobuf.GeneratedMessage
      implements DeskChatEvtOrBuilder {
    // Use DeskChatEvt.newBuilder() to construct.
    private DeskChatEvt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeskChatEvt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeskChatEvt defaultInstance;
    public static DeskChatEvt getDefaultInstance() {
      return defaultInstance;
    }

    public DeskChatEvt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeskChatEvt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ret_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              opUin_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              sex_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              index_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              content_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_DeskChatEvt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_DeskChatEvt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.DeskChatEvt.class, Mahjong.DeskChatEvt.Builder.class);
    }

    public static com.google.protobuf.Parser<DeskChatEvt> PARSER =
        new com.google.protobuf.AbstractParser<DeskChatEvt>() {
      public DeskChatEvt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeskChatEvt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeskChatEvt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 ret = 1;
    public static final int RET_FIELD_NUMBER = 1;
    private int ret_;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public int getRet() {
      return ret_;
    }

    // optional int32 op_uin = 2;
    public static final int OP_UIN_FIELD_NUMBER = 2;
    private int opUin_;
    /**
     * <code>optional int32 op_uin = 2;</code>
     */
    public boolean hasOpUin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 op_uin = 2;</code>
     */
    public int getOpUin() {
      return opUin_;
    }

    // optional bool sex = 3;
    public static final int SEX_FIELD_NUMBER = 3;
    private boolean sex_;
    /**
     * <code>optional bool sex = 3;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool sex = 3;</code>
     */
    public boolean getSex() {
      return sex_;
    }

    // optional int32 index = 4;
    public static final int INDEX_FIELD_NUMBER = 4;
    private int index_;
    /**
     * <code>optional int32 index = 4;</code>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 index = 4;</code>
     */
    public int getIndex() {
      return index_;
    }

    // optional string content = 5;
    public static final int CONTENT_FIELD_NUMBER = 5;
    private java.lang.Object content_;
    /**
     * <code>optional string content = 5;</code>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string content = 5;</code>
     */
    public java.lang.String getContent() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          content_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string content = 5;</code>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      ret_ = 0;
      opUin_ = 0;
      sex_ = false;
      index_ = 0;
      content_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ret_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, opUin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, sex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, index_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getContentBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ret_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, opUin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, sex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, index_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getContentBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.DeskChatEvt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.DeskChatEvt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.DeskChatEvt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.DeskChatEvt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.DeskChatEvt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.DeskChatEvt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.DeskChatEvt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.DeskChatEvt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.DeskChatEvt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.DeskChatEvt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.DeskChatEvt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DeskChatEvt}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.DeskChatEvtOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_DeskChatEvt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_DeskChatEvt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.DeskChatEvt.class, Mahjong.DeskChatEvt.Builder.class);
      }

      // Construct using Mahjong.DeskChatEvt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        opUin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        sex_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        content_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_DeskChatEvt_descriptor;
      }

      public Mahjong.DeskChatEvt getDefaultInstanceForType() {
        return Mahjong.DeskChatEvt.getDefaultInstance();
      }

      public Mahjong.DeskChatEvt build() {
        Mahjong.DeskChatEvt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.DeskChatEvt buildPartial() {
        Mahjong.DeskChatEvt result = new Mahjong.DeskChatEvt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ret_ = ret_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.opUin_ = opUin_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.content_ = content_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.DeskChatEvt) {
          return mergeFrom((Mahjong.DeskChatEvt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.DeskChatEvt other) {
        if (other == Mahjong.DeskChatEvt.getDefaultInstance()) return this;
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        if (other.hasOpUin()) {
          setOpUin(other.getOpUin());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasContent()) {
          bitField0_ |= 0x00000010;
          content_ = other.content_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.DeskChatEvt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.DeskChatEvt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 ret = 1;
      private int ret_ ;
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000001;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ret_ = 0;
        onChanged();
        return this;
      }

      // optional int32 op_uin = 2;
      private int opUin_ ;
      /**
       * <code>optional int32 op_uin = 2;</code>
       */
      public boolean hasOpUin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 op_uin = 2;</code>
       */
      public int getOpUin() {
        return opUin_;
      }
      /**
       * <code>optional int32 op_uin = 2;</code>
       */
      public Builder setOpUin(int value) {
        bitField0_ |= 0x00000002;
        opUin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 op_uin = 2;</code>
       */
      public Builder clearOpUin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        opUin_ = 0;
        onChanged();
        return this;
      }

      // optional bool sex = 3;
      private boolean sex_ ;
      /**
       * <code>optional bool sex = 3;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool sex = 3;</code>
       */
      public boolean getSex() {
        return sex_;
      }
      /**
       * <code>optional bool sex = 3;</code>
       */
      public Builder setSex(boolean value) {
        bitField0_ |= 0x00000004;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool sex = 3;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sex_ = false;
        onChanged();
        return this;
      }

      // optional int32 index = 4;
      private int index_ ;
      /**
       * <code>optional int32 index = 4;</code>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 index = 4;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>optional int32 index = 4;</code>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000008;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 index = 4;</code>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        index_ = 0;
        onChanged();
        return this;
      }

      // optional string content = 5;
      private java.lang.Object content_ = "";
      /**
       * <code>optional string content = 5;</code>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string content = 5;</code>
       */
      public java.lang.String getContent() {
        java.lang.Object ref = content_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          content_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string content = 5;</code>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        java.lang.Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string content = 5;</code>
       */
      public Builder setContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 5;</code>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000010);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 5;</code>
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        content_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DeskChatEvt)
    }

    static {
      defaultInstance = new DeskChatEvt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DeskChatEvt)
  }

  public interface LogOutReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code LogOutReq}
   *
   * <pre>
   *注销登录
   * </pre>
   */
  public static final class LogOutReq extends
      com.google.protobuf.GeneratedMessage
      implements LogOutReqOrBuilder {
    // Use LogOutReq.newBuilder() to construct.
    private LogOutReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LogOutReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LogOutReq defaultInstance;
    public static LogOutReq getDefaultInstance() {
      return defaultInstance;
    }

    public LogOutReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LogOutReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_LogOutReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_LogOutReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.LogOutReq.class, Mahjong.LogOutReq.Builder.class);
    }

    public static com.google.protobuf.Parser<LogOutReq> PARSER =
        new com.google.protobuf.AbstractParser<LogOutReq>() {
      public LogOutReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogOutReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LogOutReq> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.LogOutReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.LogOutReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.LogOutReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.LogOutReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.LogOutReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.LogOutReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.LogOutReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.LogOutReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.LogOutReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.LogOutReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.LogOutReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LogOutReq}
     *
     * <pre>
     *注销登录
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.LogOutReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_LogOutReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_LogOutReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.LogOutReq.class, Mahjong.LogOutReq.Builder.class);
      }

      // Construct using Mahjong.LogOutReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_LogOutReq_descriptor;
      }

      public Mahjong.LogOutReq getDefaultInstanceForType() {
        return Mahjong.LogOutReq.getDefaultInstance();
      }

      public Mahjong.LogOutReq build() {
        Mahjong.LogOutReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.LogOutReq buildPartial() {
        Mahjong.LogOutReq result = new Mahjong.LogOutReq(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.LogOutReq) {
          return mergeFrom((Mahjong.LogOutReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.LogOutReq other) {
        if (other == Mahjong.LogOutReq.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.LogOutReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.LogOutReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LogOutReq)
    }

    static {
      defaultInstance = new LogOutReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LogOutReq)
  }

  public interface LogOutRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code LogOutRsp}
   */
  public static final class LogOutRsp extends
      com.google.protobuf.GeneratedMessage
      implements LogOutRspOrBuilder {
    // Use LogOutRsp.newBuilder() to construct.
    private LogOutRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LogOutRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LogOutRsp defaultInstance;
    public static LogOutRsp getDefaultInstance() {
      return defaultInstance;
    }

    public LogOutRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LogOutRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_LogOutRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_LogOutRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.LogOutRsp.class, Mahjong.LogOutRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<LogOutRsp> PARSER =
        new com.google.protobuf.AbstractParser<LogOutRsp>() {
      public LogOutRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogOutRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LogOutRsp> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.LogOutRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.LogOutRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.LogOutRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.LogOutRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.LogOutRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.LogOutRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.LogOutRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.LogOutRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.LogOutRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.LogOutRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.LogOutRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LogOutRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.LogOutRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_LogOutRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_LogOutRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.LogOutRsp.class, Mahjong.LogOutRsp.Builder.class);
      }

      // Construct using Mahjong.LogOutRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_LogOutRsp_descriptor;
      }

      public Mahjong.LogOutRsp getDefaultInstanceForType() {
        return Mahjong.LogOutRsp.getDefaultInstance();
      }

      public Mahjong.LogOutRsp build() {
        Mahjong.LogOutRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.LogOutRsp buildPartial() {
        Mahjong.LogOutRsp result = new Mahjong.LogOutRsp(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.LogOutRsp) {
          return mergeFrom((Mahjong.LogOutRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.LogOutRsp other) {
        if (other == Mahjong.LogOutRsp.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.LogOutRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.LogOutRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LogOutRsp)
    }

    static {
      defaultInstance = new LogOutRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LogOutRsp)
  }

  public interface EvtBroadCastOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 uin = 1;
    /**
     * <code>optional int32 uin = 1;</code>
     *
     * <pre>
     * 发送人，系统广播时uin为1
     * </pre>
     */
    boolean hasUin();
    /**
     * <code>optional int32 uin = 1;</code>
     *
     * <pre>
     * 发送人，系统广播时uin为1
     * </pre>
     */
    int getUin();

    // optional string content = 2;
    /**
     * <code>optional string content = 2;</code>
     *
     * <pre>
     * content，广播内容
     * </pre>
     */
    boolean hasContent();
    /**
     * <code>optional string content = 2;</code>
     *
     * <pre>
     * content，广播内容
     * </pre>
     */
    java.lang.String getContent();
    /**
     * <code>optional string content = 2;</code>
     *
     * <pre>
     * content，广播内容
     * </pre>
     */
    com.google.protobuf.ByteString
        getContentBytes();

    // optional string nick = 3;
    /**
     * <code>optional string nick = 3;</code>
     *
     * <pre>
     * 发送人昵称
     * </pre>
     */
    boolean hasNick();
    /**
     * <code>optional string nick = 3;</code>
     *
     * <pre>
     * 发送人昵称
     * </pre>
     */
    java.lang.String getNick();
    /**
     * <code>optional string nick = 3;</code>
     *
     * <pre>
     * 发送人昵称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNickBytes();
  }
  /**
   * Protobuf type {@code EvtBroadCast}
   *
   * <pre>
   * 系统广播
   * </pre>
   */
  public static final class EvtBroadCast extends
      com.google.protobuf.GeneratedMessage
      implements EvtBroadCastOrBuilder {
    // Use EvtBroadCast.newBuilder() to construct.
    private EvtBroadCast(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EvtBroadCast(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EvtBroadCast defaultInstance;
    public static EvtBroadCast getDefaultInstance() {
      return defaultInstance;
    }

    public EvtBroadCast getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EvtBroadCast(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uin_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              content_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              nick_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_EvtBroadCast_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_EvtBroadCast_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.EvtBroadCast.class, Mahjong.EvtBroadCast.Builder.class);
    }

    public static com.google.protobuf.Parser<EvtBroadCast> PARSER =
        new com.google.protobuf.AbstractParser<EvtBroadCast>() {
      public EvtBroadCast parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EvtBroadCast(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EvtBroadCast> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 uin = 1;
    public static final int UIN_FIELD_NUMBER = 1;
    private int uin_;
    /**
     * <code>optional int32 uin = 1;</code>
     *
     * <pre>
     * 发送人，系统广播时uin为1
     * </pre>
     */
    public boolean hasUin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 uin = 1;</code>
     *
     * <pre>
     * 发送人，系统广播时uin为1
     * </pre>
     */
    public int getUin() {
      return uin_;
    }

    // optional string content = 2;
    public static final int CONTENT_FIELD_NUMBER = 2;
    private java.lang.Object content_;
    /**
     * <code>optional string content = 2;</code>
     *
     * <pre>
     * content，广播内容
     * </pre>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string content = 2;</code>
     *
     * <pre>
     * content，广播内容
     * </pre>
     */
    public java.lang.String getContent() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          content_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string content = 2;</code>
     *
     * <pre>
     * content，广播内容
     * </pre>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string nick = 3;
    public static final int NICK_FIELD_NUMBER = 3;
    private java.lang.Object nick_;
    /**
     * <code>optional string nick = 3;</code>
     *
     * <pre>
     * 发送人昵称
     * </pre>
     */
    public boolean hasNick() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string nick = 3;</code>
     *
     * <pre>
     * 发送人昵称
     * </pre>
     */
    public java.lang.String getNick() {
      java.lang.Object ref = nick_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nick_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nick = 3;</code>
     *
     * <pre>
     * 发送人昵称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNickBytes() {
      java.lang.Object ref = nick_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nick_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      uin_ = 0;
      content_ = "";
      nick_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getContentBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNickBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getContentBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNickBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.EvtBroadCast parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.EvtBroadCast parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.EvtBroadCast parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.EvtBroadCast parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.EvtBroadCast parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.EvtBroadCast parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.EvtBroadCast parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.EvtBroadCast parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.EvtBroadCast parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.EvtBroadCast parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.EvtBroadCast prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EvtBroadCast}
     *
     * <pre>
     * 系统广播
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.EvtBroadCastOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_EvtBroadCast_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_EvtBroadCast_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.EvtBroadCast.class, Mahjong.EvtBroadCast.Builder.class);
      }

      // Construct using Mahjong.EvtBroadCast.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        content_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        nick_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_EvtBroadCast_descriptor;
      }

      public Mahjong.EvtBroadCast getDefaultInstanceForType() {
        return Mahjong.EvtBroadCast.getDefaultInstance();
      }

      public Mahjong.EvtBroadCast build() {
        Mahjong.EvtBroadCast result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.EvtBroadCast buildPartial() {
        Mahjong.EvtBroadCast result = new Mahjong.EvtBroadCast(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uin_ = uin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.content_ = content_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.nick_ = nick_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.EvtBroadCast) {
          return mergeFrom((Mahjong.EvtBroadCast)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.EvtBroadCast other) {
        if (other == Mahjong.EvtBroadCast.getDefaultInstance()) return this;
        if (other.hasUin()) {
          setUin(other.getUin());
        }
        if (other.hasContent()) {
          bitField0_ |= 0x00000002;
          content_ = other.content_;
          onChanged();
        }
        if (other.hasNick()) {
          bitField0_ |= 0x00000004;
          nick_ = other.nick_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.EvtBroadCast parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.EvtBroadCast) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 uin = 1;
      private int uin_ ;
      /**
       * <code>optional int32 uin = 1;</code>
       *
       * <pre>
       * 发送人，系统广播时uin为1
       * </pre>
       */
      public boolean hasUin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 uin = 1;</code>
       *
       * <pre>
       * 发送人，系统广播时uin为1
       * </pre>
       */
      public int getUin() {
        return uin_;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       *
       * <pre>
       * 发送人，系统广播时uin为1
       * </pre>
       */
      public Builder setUin(int value) {
        bitField0_ |= 0x00000001;
        uin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       *
       * <pre>
       * 发送人，系统广播时uin为1
       * </pre>
       */
      public Builder clearUin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uin_ = 0;
        onChanged();
        return this;
      }

      // optional string content = 2;
      private java.lang.Object content_ = "";
      /**
       * <code>optional string content = 2;</code>
       *
       * <pre>
       * content，广播内容
       * </pre>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string content = 2;</code>
       *
       * <pre>
       * content，广播内容
       * </pre>
       */
      public java.lang.String getContent() {
        java.lang.Object ref = content_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          content_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string content = 2;</code>
       *
       * <pre>
       * content，广播内容
       * </pre>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        java.lang.Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string content = 2;</code>
       *
       * <pre>
       * content，广播内容
       * </pre>
       */
      public Builder setContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 2;</code>
       *
       * <pre>
       * content，广播内容
       * </pre>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <code>optional string content = 2;</code>
       *
       * <pre>
       * content，广播内容
       * </pre>
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        content_ = value;
        onChanged();
        return this;
      }

      // optional string nick = 3;
      private java.lang.Object nick_ = "";
      /**
       * <code>optional string nick = 3;</code>
       *
       * <pre>
       * 发送人昵称
       * </pre>
       */
      public boolean hasNick() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string nick = 3;</code>
       *
       * <pre>
       * 发送人昵称
       * </pre>
       */
      public java.lang.String getNick() {
        java.lang.Object ref = nick_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nick_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nick = 3;</code>
       *
       * <pre>
       * 发送人昵称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNickBytes() {
        java.lang.Object ref = nick_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nick_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nick = 3;</code>
       *
       * <pre>
       * 发送人昵称
       * </pre>
       */
      public Builder setNick(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        nick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nick = 3;</code>
       *
       * <pre>
       * 发送人昵称
       * </pre>
       */
      public Builder clearNick() {
        bitField0_ = (bitField0_ & ~0x00000004);
        nick_ = getDefaultInstance().getNick();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nick = 3;</code>
       *
       * <pre>
       * 发送人昵称
       * </pre>
       */
      public Builder setNickBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        nick_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:EvtBroadCast)
    }

    static {
      defaultInstance = new EvtBroadCast(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EvtBroadCast)
  }

  public interface UserCreatePreBillOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 uin = 1;
    /**
     * <code>optional int32 uin = 1;</code>
     */
    boolean hasUin();
    /**
     * <code>optional int32 uin = 1;</code>
     */
    int getUin();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     * 购买的物品id
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     * 购买的物品id
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     * 购买的物品id
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional string item_id = 3;
    /**
     * <code>optional string item_id = 3;</code>
     *
     * <pre>
     * 订单号
     * </pre>
     */
    boolean hasItemId();
    /**
     * <code>optional string item_id = 3;</code>
     *
     * <pre>
     * 订单号
     * </pre>
     */
    java.lang.String getItemId();
    /**
     * <code>optional string item_id = 3;</code>
     *
     * <pre>
     * 订单号
     * </pre>
     */
    com.google.protobuf.ByteString
        getItemIdBytes();
  }
  /**
   * Protobuf type {@code UserCreatePreBill}
   *
   * <pre>
   * 充值通知
   * </pre>
   */
  public static final class UserCreatePreBill extends
      com.google.protobuf.GeneratedMessage
      implements UserCreatePreBillOrBuilder {
    // Use UserCreatePreBill.newBuilder() to construct.
    private UserCreatePreBill(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UserCreatePreBill(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UserCreatePreBill defaultInstance;
    public static UserCreatePreBill getDefaultInstance() {
      return defaultInstance;
    }

    public UserCreatePreBill getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UserCreatePreBill(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uin_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              itemId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_UserCreatePreBill_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_UserCreatePreBill_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.UserCreatePreBill.class, Mahjong.UserCreatePreBill.Builder.class);
    }

    public static com.google.protobuf.Parser<UserCreatePreBill> PARSER =
        new com.google.protobuf.AbstractParser<UserCreatePreBill>() {
      public UserCreatePreBill parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserCreatePreBill(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserCreatePreBill> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 uin = 1;
    public static final int UIN_FIELD_NUMBER = 1;
    private int uin_;
    /**
     * <code>optional int32 uin = 1;</code>
     */
    public boolean hasUin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 uin = 1;</code>
     */
    public int getUin() {
      return uin_;
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     * 购买的物品id
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     * 购买的物品id
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     * 购买的物品id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string item_id = 3;
    public static final int ITEM_ID_FIELD_NUMBER = 3;
    private java.lang.Object itemId_;
    /**
     * <code>optional string item_id = 3;</code>
     *
     * <pre>
     * 订单号
     * </pre>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string item_id = 3;</code>
     *
     * <pre>
     * 订单号
     * </pre>
     */
    public java.lang.String getItemId() {
      java.lang.Object ref = itemId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          itemId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string item_id = 3;</code>
     *
     * <pre>
     * 订单号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getItemIdBytes() {
      java.lang.Object ref = itemId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        itemId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      uin_ = 0;
      name_ = "";
      itemId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getItemIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getItemIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.UserCreatePreBill parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.UserCreatePreBill parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.UserCreatePreBill parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.UserCreatePreBill parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.UserCreatePreBill parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.UserCreatePreBill parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.UserCreatePreBill parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.UserCreatePreBill parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.UserCreatePreBill parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.UserCreatePreBill parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.UserCreatePreBill prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code UserCreatePreBill}
     *
     * <pre>
     * 充值通知
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.UserCreatePreBillOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_UserCreatePreBill_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_UserCreatePreBill_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.UserCreatePreBill.class, Mahjong.UserCreatePreBill.Builder.class);
      }

      // Construct using Mahjong.UserCreatePreBill.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        itemId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_UserCreatePreBill_descriptor;
      }

      public Mahjong.UserCreatePreBill getDefaultInstanceForType() {
        return Mahjong.UserCreatePreBill.getDefaultInstance();
      }

      public Mahjong.UserCreatePreBill build() {
        Mahjong.UserCreatePreBill result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.UserCreatePreBill buildPartial() {
        Mahjong.UserCreatePreBill result = new Mahjong.UserCreatePreBill(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uin_ = uin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.itemId_ = itemId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.UserCreatePreBill) {
          return mergeFrom((Mahjong.UserCreatePreBill)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.UserCreatePreBill other) {
        if (other == Mahjong.UserCreatePreBill.getDefaultInstance()) return this;
        if (other.hasUin()) {
          setUin(other.getUin());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasItemId()) {
          bitField0_ |= 0x00000004;
          itemId_ = other.itemId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.UserCreatePreBill parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.UserCreatePreBill) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 uin = 1;
      private int uin_ ;
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public boolean hasUin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public int getUin() {
        return uin_;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public Builder setUin(int value) {
        bitField0_ |= 0x00000001;
        uin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public Builder clearUin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uin_ = 0;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * 购买的物品id
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * 购买的物品id
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * 购买的物品id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * 购买的物品id
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * 购买的物品id
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * 购买的物品id
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional string item_id = 3;
      private java.lang.Object itemId_ = "";
      /**
       * <code>optional string item_id = 3;</code>
       *
       * <pre>
       * 订单号
       * </pre>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string item_id = 3;</code>
       *
       * <pre>
       * 订单号
       * </pre>
       */
      public java.lang.String getItemId() {
        java.lang.Object ref = itemId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          itemId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string item_id = 3;</code>
       *
       * <pre>
       * 订单号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getItemIdBytes() {
        java.lang.Object ref = itemId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          itemId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string item_id = 3;</code>
       *
       * <pre>
       * 订单号
       * </pre>
       */
      public Builder setItemId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string item_id = 3;</code>
       *
       * <pre>
       * 订单号
       * </pre>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        itemId_ = getDefaultInstance().getItemId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string item_id = 3;</code>
       *
       * <pre>
       * 订单号
       * </pre>
       */
      public Builder setItemIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        itemId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:UserCreatePreBill)
    }

    static {
      defaultInstance = new UserCreatePreBill(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:UserCreatePreBill)
  }

  public interface CreateFormalBillOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 uin = 1;
    /**
     * <code>optional int32 uin = 1;</code>
     */
    boolean hasUin();
    /**
     * <code>optional int32 uin = 1;</code>
     */
    int getUin();

    // optional string item_id = 2;
    /**
     * <code>optional string item_id = 2;</code>
     *
     * <pre>
     * 订单号
     * </pre>
     */
    boolean hasItemId();
    /**
     * <code>optional string item_id = 2;</code>
     *
     * <pre>
     * 订单号
     * </pre>
     */
    java.lang.String getItemId();
    /**
     * <code>optional string item_id = 2;</code>
     *
     * <pre>
     * 订单号
     * </pre>
     */
    com.google.protobuf.ByteString
        getItemIdBytes();
  }
  /**
   * Protobuf type {@code CreateFormalBill}
   */
  public static final class CreateFormalBill extends
      com.google.protobuf.GeneratedMessage
      implements CreateFormalBillOrBuilder {
    // Use CreateFormalBill.newBuilder() to construct.
    private CreateFormalBill(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CreateFormalBill(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CreateFormalBill defaultInstance;
    public static CreateFormalBill getDefaultInstance() {
      return defaultInstance;
    }

    public CreateFormalBill getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CreateFormalBill(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uin_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              itemId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_CreateFormalBill_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_CreateFormalBill_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.CreateFormalBill.class, Mahjong.CreateFormalBill.Builder.class);
    }

    public static com.google.protobuf.Parser<CreateFormalBill> PARSER =
        new com.google.protobuf.AbstractParser<CreateFormalBill>() {
      public CreateFormalBill parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CreateFormalBill(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CreateFormalBill> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 uin = 1;
    public static final int UIN_FIELD_NUMBER = 1;
    private int uin_;
    /**
     * <code>optional int32 uin = 1;</code>
     */
    public boolean hasUin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 uin = 1;</code>
     */
    public int getUin() {
      return uin_;
    }

    // optional string item_id = 2;
    public static final int ITEM_ID_FIELD_NUMBER = 2;
    private java.lang.Object itemId_;
    /**
     * <code>optional string item_id = 2;</code>
     *
     * <pre>
     * 订单号
     * </pre>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string item_id = 2;</code>
     *
     * <pre>
     * 订单号
     * </pre>
     */
    public java.lang.String getItemId() {
      java.lang.Object ref = itemId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          itemId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string item_id = 2;</code>
     *
     * <pre>
     * 订单号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getItemIdBytes() {
      java.lang.Object ref = itemId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        itemId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      uin_ = 0;
      itemId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getItemIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, uin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getItemIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.CreateFormalBill parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.CreateFormalBill parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.CreateFormalBill parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.CreateFormalBill parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.CreateFormalBill parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.CreateFormalBill parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.CreateFormalBill parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.CreateFormalBill parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.CreateFormalBill parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.CreateFormalBill parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.CreateFormalBill prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CreateFormalBill}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.CreateFormalBillOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_CreateFormalBill_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_CreateFormalBill_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.CreateFormalBill.class, Mahjong.CreateFormalBill.Builder.class);
      }

      // Construct using Mahjong.CreateFormalBill.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_CreateFormalBill_descriptor;
      }

      public Mahjong.CreateFormalBill getDefaultInstanceForType() {
        return Mahjong.CreateFormalBill.getDefaultInstance();
      }

      public Mahjong.CreateFormalBill build() {
        Mahjong.CreateFormalBill result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.CreateFormalBill buildPartial() {
        Mahjong.CreateFormalBill result = new Mahjong.CreateFormalBill(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uin_ = uin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemId_ = itemId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.CreateFormalBill) {
          return mergeFrom((Mahjong.CreateFormalBill)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.CreateFormalBill other) {
        if (other == Mahjong.CreateFormalBill.getDefaultInstance()) return this;
        if (other.hasUin()) {
          setUin(other.getUin());
        }
        if (other.hasItemId()) {
          bitField0_ |= 0x00000002;
          itemId_ = other.itemId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.CreateFormalBill parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.CreateFormalBill) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 uin = 1;
      private int uin_ ;
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public boolean hasUin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public int getUin() {
        return uin_;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public Builder setUin(int value) {
        bitField0_ |= 0x00000001;
        uin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public Builder clearUin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uin_ = 0;
        onChanged();
        return this;
      }

      // optional string item_id = 2;
      private java.lang.Object itemId_ = "";
      /**
       * <code>optional string item_id = 2;</code>
       *
       * <pre>
       * 订单号
       * </pre>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string item_id = 2;</code>
       *
       * <pre>
       * 订单号
       * </pre>
       */
      public java.lang.String getItemId() {
        java.lang.Object ref = itemId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          itemId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string item_id = 2;</code>
       *
       * <pre>
       * 订单号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getItemIdBytes() {
        java.lang.Object ref = itemId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          itemId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string item_id = 2;</code>
       *
       * <pre>
       * 订单号
       * </pre>
       */
      public Builder setItemId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string item_id = 2;</code>
       *
       * <pre>
       * 订单号
       * </pre>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemId_ = getDefaultInstance().getItemId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string item_id = 2;</code>
       *
       * <pre>
       * 订单号
       * </pre>
       */
      public Builder setItemIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        itemId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CreateFormalBill)
    }

    static {
      defaultInstance = new CreateFormalBill(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CreateFormalBill)
  }

  public interface SetInviteUserReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 uin = 1;
    /**
     * <code>optional int32 uin = 1;</code>
     */
    boolean hasUin();
    /**
     * <code>optional int32 uin = 1;</code>
     */
    int getUin();
  }
  /**
   * Protobuf type {@code SetInviteUserReq}
   *
   * <pre>
   * 设置邀请人，只有邀请人为空的情况才能成功
   * </pre>
   */
  public static final class SetInviteUserReq extends
      com.google.protobuf.GeneratedMessage
      implements SetInviteUserReqOrBuilder {
    // Use SetInviteUserReq.newBuilder() to construct.
    private SetInviteUserReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SetInviteUserReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SetInviteUserReq defaultInstance;
    public static SetInviteUserReq getDefaultInstance() {
      return defaultInstance;
    }

    public SetInviteUserReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SetInviteUserReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              uin_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_SetInviteUserReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_SetInviteUserReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.SetInviteUserReq.class, Mahjong.SetInviteUserReq.Builder.class);
    }

    public static com.google.protobuf.Parser<SetInviteUserReq> PARSER =
        new com.google.protobuf.AbstractParser<SetInviteUserReq>() {
      public SetInviteUserReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetInviteUserReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SetInviteUserReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 uin = 1;
    public static final int UIN_FIELD_NUMBER = 1;
    private int uin_;
    /**
     * <code>optional int32 uin = 1;</code>
     */
    public boolean hasUin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 uin = 1;</code>
     */
    public int getUin() {
      return uin_;
    }

    private void initFields() {
      uin_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, uin_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, uin_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.SetInviteUserReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.SetInviteUserReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.SetInviteUserReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.SetInviteUserReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.SetInviteUserReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.SetInviteUserReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.SetInviteUserReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.SetInviteUserReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.SetInviteUserReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.SetInviteUserReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.SetInviteUserReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SetInviteUserReq}
     *
     * <pre>
     * 设置邀请人，只有邀请人为空的情况才能成功
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.SetInviteUserReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_SetInviteUserReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_SetInviteUserReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.SetInviteUserReq.class, Mahjong.SetInviteUserReq.Builder.class);
      }

      // Construct using Mahjong.SetInviteUserReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_SetInviteUserReq_descriptor;
      }

      public Mahjong.SetInviteUserReq getDefaultInstanceForType() {
        return Mahjong.SetInviteUserReq.getDefaultInstance();
      }

      public Mahjong.SetInviteUserReq build() {
        Mahjong.SetInviteUserReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.SetInviteUserReq buildPartial() {
        Mahjong.SetInviteUserReq result = new Mahjong.SetInviteUserReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uin_ = uin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.SetInviteUserReq) {
          return mergeFrom((Mahjong.SetInviteUserReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.SetInviteUserReq other) {
        if (other == Mahjong.SetInviteUserReq.getDefaultInstance()) return this;
        if (other.hasUin()) {
          setUin(other.getUin());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.SetInviteUserReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.SetInviteUserReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 uin = 1;
      private int uin_ ;
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public boolean hasUin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public int getUin() {
        return uin_;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public Builder setUin(int value) {
        bitField0_ |= 0x00000001;
        uin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 uin = 1;</code>
       */
      public Builder clearUin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uin_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SetInviteUserReq)
    }

    static {
      defaultInstance = new SetInviteUserReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SetInviteUserReq)
  }

  public interface SetInviteUserRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 ret = 1;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>optional int32 ret = 1;</code>
     */
    int getRet();
  }
  /**
   * Protobuf type {@code SetInviteUserRsp}
   */
  public static final class SetInviteUserRsp extends
      com.google.protobuf.GeneratedMessage
      implements SetInviteUserRspOrBuilder {
    // Use SetInviteUserRsp.newBuilder() to construct.
    private SetInviteUserRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SetInviteUserRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SetInviteUserRsp defaultInstance;
    public static SetInviteUserRsp getDefaultInstance() {
      return defaultInstance;
    }

    public SetInviteUserRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SetInviteUserRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ret_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_SetInviteUserRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_SetInviteUserRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.SetInviteUserRsp.class, Mahjong.SetInviteUserRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<SetInviteUserRsp> PARSER =
        new com.google.protobuf.AbstractParser<SetInviteUserRsp>() {
      public SetInviteUserRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetInviteUserRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SetInviteUserRsp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 ret = 1;
    public static final int RET_FIELD_NUMBER = 1;
    private int ret_;
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public boolean hasRet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ret = 1;</code>
     */
    public int getRet() {
      return ret_;
    }

    private void initFields() {
      ret_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ret_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ret_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.SetInviteUserRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.SetInviteUserRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.SetInviteUserRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.SetInviteUserRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.SetInviteUserRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.SetInviteUserRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.SetInviteUserRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.SetInviteUserRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.SetInviteUserRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.SetInviteUserRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.SetInviteUserRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SetInviteUserRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.SetInviteUserRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_SetInviteUserRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_SetInviteUserRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.SetInviteUserRsp.class, Mahjong.SetInviteUserRsp.Builder.class);
      }

      // Construct using Mahjong.SetInviteUserRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ret_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_SetInviteUserRsp_descriptor;
      }

      public Mahjong.SetInviteUserRsp getDefaultInstanceForType() {
        return Mahjong.SetInviteUserRsp.getDefaultInstance();
      }

      public Mahjong.SetInviteUserRsp build() {
        Mahjong.SetInviteUserRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.SetInviteUserRsp buildPartial() {
        Mahjong.SetInviteUserRsp result = new Mahjong.SetInviteUserRsp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ret_ = ret_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.SetInviteUserRsp) {
          return mergeFrom((Mahjong.SetInviteUserRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.SetInviteUserRsp other) {
        if (other == Mahjong.SetInviteUserRsp.getDefaultInstance()) return this;
        if (other.hasRet()) {
          setRet(other.getRet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.SetInviteUserRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.SetInviteUserRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 ret = 1;
      private int ret_ ;
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public boolean hasRet() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public int getRet() {
        return ret_;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder setRet(int value) {
        bitField0_ |= 0x00000001;
        ret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ret = 1;</code>
       */
      public Builder clearRet() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ret_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SetInviteUserRsp)
    }

    static {
      defaultInstance = new SetInviteUserRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SetInviteUserRsp)
  }

  public interface HeartBeatReqOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code HeartBeatReq}
   *
   * <pre>
   *心跳 cmd 1
   * </pre>
   */
  public static final class HeartBeatReq extends
      com.google.protobuf.GeneratedMessage
      implements HeartBeatReqOrBuilder {
    // Use HeartBeatReq.newBuilder() to construct.
    private HeartBeatReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HeartBeatReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HeartBeatReq defaultInstance;
    public static HeartBeatReq getDefaultInstance() {
      return defaultInstance;
    }

    public HeartBeatReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HeartBeatReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_HeartBeatReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_HeartBeatReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.HeartBeatReq.class, Mahjong.HeartBeatReq.Builder.class);
    }

    public static com.google.protobuf.Parser<HeartBeatReq> PARSER =
        new com.google.protobuf.AbstractParser<HeartBeatReq>() {
      public HeartBeatReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeartBeatReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HeartBeatReq> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.HeartBeatReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.HeartBeatReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.HeartBeatReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.HeartBeatReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.HeartBeatReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.HeartBeatReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.HeartBeatReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.HeartBeatReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.HeartBeatReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.HeartBeatReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.HeartBeatReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HeartBeatReq}
     *
     * <pre>
     *心跳 cmd 1
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.HeartBeatReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_HeartBeatReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_HeartBeatReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.HeartBeatReq.class, Mahjong.HeartBeatReq.Builder.class);
      }

      // Construct using Mahjong.HeartBeatReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_HeartBeatReq_descriptor;
      }

      public Mahjong.HeartBeatReq getDefaultInstanceForType() {
        return Mahjong.HeartBeatReq.getDefaultInstance();
      }

      public Mahjong.HeartBeatReq build() {
        Mahjong.HeartBeatReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.HeartBeatReq buildPartial() {
        Mahjong.HeartBeatReq result = new Mahjong.HeartBeatReq(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.HeartBeatReq) {
          return mergeFrom((Mahjong.HeartBeatReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.HeartBeatReq other) {
        if (other == Mahjong.HeartBeatReq.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.HeartBeatReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.HeartBeatReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HeartBeatReq)
    }

    static {
      defaultInstance = new HeartBeatReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HeartBeatReq)
  }

  public interface HeartBeatRspOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code HeartBeatRsp}
   */
  public static final class HeartBeatRsp extends
      com.google.protobuf.GeneratedMessage
      implements HeartBeatRspOrBuilder {
    // Use HeartBeatRsp.newBuilder() to construct.
    private HeartBeatRsp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HeartBeatRsp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HeartBeatRsp defaultInstance;
    public static HeartBeatRsp getDefaultInstance() {
      return defaultInstance;
    }

    public HeartBeatRsp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HeartBeatRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_HeartBeatRsp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_HeartBeatRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.HeartBeatRsp.class, Mahjong.HeartBeatRsp.Builder.class);
    }

    public static com.google.protobuf.Parser<HeartBeatRsp> PARSER =
        new com.google.protobuf.AbstractParser<HeartBeatRsp>() {
      public HeartBeatRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeartBeatRsp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HeartBeatRsp> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.HeartBeatRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.HeartBeatRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.HeartBeatRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.HeartBeatRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.HeartBeatRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.HeartBeatRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.HeartBeatRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.HeartBeatRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.HeartBeatRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.HeartBeatRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.HeartBeatRsp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HeartBeatRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.HeartBeatRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_HeartBeatRsp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_HeartBeatRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.HeartBeatRsp.class, Mahjong.HeartBeatRsp.Builder.class);
      }

      // Construct using Mahjong.HeartBeatRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_HeartBeatRsp_descriptor;
      }

      public Mahjong.HeartBeatRsp getDefaultInstanceForType() {
        return Mahjong.HeartBeatRsp.getDefaultInstance();
      }

      public Mahjong.HeartBeatRsp build() {
        Mahjong.HeartBeatRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.HeartBeatRsp buildPartial() {
        Mahjong.HeartBeatRsp result = new Mahjong.HeartBeatRsp(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.HeartBeatRsp) {
          return mergeFrom((Mahjong.HeartBeatRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.HeartBeatRsp other) {
        if (other == Mahjong.HeartBeatRsp.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.HeartBeatRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.HeartBeatRsp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HeartBeatRsp)
    }

    static {
      defaultInstance = new HeartBeatRsp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HeartBeatRsp)
  }

  public interface ws_msgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 ms_op_int = 1;
    /**
     * <code>optional int32 ms_op_int = 1;</code>
     */
    boolean hasMsOpInt();
    /**
     * <code>optional int32 ms_op_int = 1;</code>
     */
    int getMsOpInt();
  }
  /**
   * Protobuf type {@code ws_msg}
   *
   * <pre>
   *test
   * </pre>
   */
  public static final class ws_msg extends
      com.google.protobuf.GeneratedMessage
      implements ws_msgOrBuilder {
    // Use ws_msg.newBuilder() to construct.
    private ws_msg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ws_msg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ws_msg defaultInstance;
    public static ws_msg getDefaultInstance() {
      return defaultInstance;
    }

    public ws_msg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ws_msg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              msOpInt_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_ws_msg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_ws_msg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.ws_msg.class, Mahjong.ws_msg.Builder.class);
    }

    public static com.google.protobuf.Parser<ws_msg> PARSER =
        new com.google.protobuf.AbstractParser<ws_msg>() {
      public ws_msg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ws_msg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ws_msg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 ms_op_int = 1;
    public static final int MS_OP_INT_FIELD_NUMBER = 1;
    private int msOpInt_;
    /**
     * <code>optional int32 ms_op_int = 1;</code>
     */
    public boolean hasMsOpInt() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ms_op_int = 1;</code>
     */
    public int getMsOpInt() {
      return msOpInt_;
    }

    private void initFields() {
      msOpInt_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, msOpInt_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, msOpInt_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.ws_msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.ws_msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.ws_msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.ws_msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.ws_msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.ws_msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.ws_msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.ws_msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.ws_msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.ws_msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.ws_msg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ws_msg}
     *
     * <pre>
     *test
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.ws_msgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_ws_msg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_ws_msg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.ws_msg.class, Mahjong.ws_msg.Builder.class);
      }

      // Construct using Mahjong.ws_msg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msOpInt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_ws_msg_descriptor;
      }

      public Mahjong.ws_msg getDefaultInstanceForType() {
        return Mahjong.ws_msg.getDefaultInstance();
      }

      public Mahjong.ws_msg build() {
        Mahjong.ws_msg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.ws_msg buildPartial() {
        Mahjong.ws_msg result = new Mahjong.ws_msg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msOpInt_ = msOpInt_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.ws_msg) {
          return mergeFrom((Mahjong.ws_msg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.ws_msg other) {
        if (other == Mahjong.ws_msg.getDefaultInstance()) return this;
        if (other.hasMsOpInt()) {
          setMsOpInt(other.getMsOpInt());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.ws_msg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.ws_msg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 ms_op_int = 1;
      private int msOpInt_ ;
      /**
       * <code>optional int32 ms_op_int = 1;</code>
       */
      public boolean hasMsOpInt() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ms_op_int = 1;</code>
       */
      public int getMsOpInt() {
        return msOpInt_;
      }
      /**
       * <code>optional int32 ms_op_int = 1;</code>
       */
      public Builder setMsOpInt(int value) {
        bitField0_ |= 0x00000001;
        msOpInt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ms_op_int = 1;</code>
       */
      public Builder clearMsOpInt() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msOpInt_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ws_msg)
    }

    static {
      defaultInstance = new ws_msg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ws_msg)
  }

  public interface WsProtoTestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 op_int = 1;
    /**
     * <code>optional int32 op_int = 1;</code>
     */
    boolean hasOpInt();
    /**
     * <code>optional int32 op_int = 1;</code>
     */
    int getOpInt();

    // repeated int32 re_int = 2 [packed = true];
    /**
     * <code>repeated int32 re_int = 2 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getReIntList();
    /**
     * <code>repeated int32 re_int = 2 [packed = true];</code>
     */
    int getReIntCount();
    /**
     * <code>repeated int32 re_int = 2 [packed = true];</code>
     */
    int getReInt(int index);

    // optional string op_str = 3;
    /**
     * <code>optional string op_str = 3;</code>
     */
    boolean hasOpStr();
    /**
     * <code>optional string op_str = 3;</code>
     */
    java.lang.String getOpStr();
    /**
     * <code>optional string op_str = 3;</code>
     */
    com.google.protobuf.ByteString
        getOpStrBytes();

    // optional .ws_msg op_msg = 4;
    /**
     * <code>optional .ws_msg op_msg = 4;</code>
     */
    boolean hasOpMsg();
    /**
     * <code>optional .ws_msg op_msg = 4;</code>
     */
    Mahjong.ws_msg getOpMsg();
    /**
     * <code>optional .ws_msg op_msg = 4;</code>
     */
    Mahjong.ws_msgOrBuilder getOpMsgOrBuilder();

    // repeated .ws_msg re_msg = 5;
    /**
     * <code>repeated .ws_msg re_msg = 5;</code>
     */
    java.util.List<Mahjong.ws_msg> 
        getReMsgList();
    /**
     * <code>repeated .ws_msg re_msg = 5;</code>
     */
    Mahjong.ws_msg getReMsg(int index);
    /**
     * <code>repeated .ws_msg re_msg = 5;</code>
     */
    int getReMsgCount();
    /**
     * <code>repeated .ws_msg re_msg = 5;</code>
     */
    java.util.List<? extends Mahjong.ws_msgOrBuilder> 
        getReMsgOrBuilderList();
    /**
     * <code>repeated .ws_msg re_msg = 5;</code>
     */
    Mahjong.ws_msgOrBuilder getReMsgOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code WsProtoTest}
   */
  public static final class WsProtoTest extends
      com.google.protobuf.GeneratedMessage
      implements WsProtoTestOrBuilder {
    // Use WsProtoTest.newBuilder() to construct.
    private WsProtoTest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WsProtoTest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WsProtoTest defaultInstance;
    public static WsProtoTest getDefaultInstance() {
      return defaultInstance;
    }

    public WsProtoTest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WsProtoTest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              opInt_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                reInt_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              reInt_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                reInt_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                reInt_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              bitField0_ |= 0x00000002;
              opStr_ = input.readBytes();
              break;
            }
            case 34: {
              Mahjong.ws_msg.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = opMsg_.toBuilder();
              }
              opMsg_ = input.readMessage(Mahjong.ws_msg.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(opMsg_);
                opMsg_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                reMsg_ = new java.util.ArrayList<Mahjong.ws_msg>();
                mutable_bitField0_ |= 0x00000010;
              }
              reMsg_.add(input.readMessage(Mahjong.ws_msg.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          reInt_ = java.util.Collections.unmodifiableList(reInt_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          reMsg_ = java.util.Collections.unmodifiableList(reMsg_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Mahjong.internal_static_WsProtoTest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Mahjong.internal_static_WsProtoTest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mahjong.WsProtoTest.class, Mahjong.WsProtoTest.Builder.class);
    }

    public static com.google.protobuf.Parser<WsProtoTest> PARSER =
        new com.google.protobuf.AbstractParser<WsProtoTest>() {
      public WsProtoTest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WsProtoTest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WsProtoTest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 op_int = 1;
    public static final int OP_INT_FIELD_NUMBER = 1;
    private int opInt_;
    /**
     * <code>optional int32 op_int = 1;</code>
     */
    public boolean hasOpInt() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 op_int = 1;</code>
     */
    public int getOpInt() {
      return opInt_;
    }

    // repeated int32 re_int = 2 [packed = true];
    public static final int RE_INT_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> reInt_;
    /**
     * <code>repeated int32 re_int = 2 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getReIntList() {
      return reInt_;
    }
    /**
     * <code>repeated int32 re_int = 2 [packed = true];</code>
     */
    public int getReIntCount() {
      return reInt_.size();
    }
    /**
     * <code>repeated int32 re_int = 2 [packed = true];</code>
     */
    public int getReInt(int index) {
      return reInt_.get(index);
    }
    private int reIntMemoizedSerializedSize = -1;

    // optional string op_str = 3;
    public static final int OP_STR_FIELD_NUMBER = 3;
    private java.lang.Object opStr_;
    /**
     * <code>optional string op_str = 3;</code>
     */
    public boolean hasOpStr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string op_str = 3;</code>
     */
    public java.lang.String getOpStr() {
      java.lang.Object ref = opStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          opStr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string op_str = 3;</code>
     */
    public com.google.protobuf.ByteString
        getOpStrBytes() {
      java.lang.Object ref = opStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        opStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .ws_msg op_msg = 4;
    public static final int OP_MSG_FIELD_NUMBER = 4;
    private Mahjong.ws_msg opMsg_;
    /**
     * <code>optional .ws_msg op_msg = 4;</code>
     */
    public boolean hasOpMsg() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .ws_msg op_msg = 4;</code>
     */
    public Mahjong.ws_msg getOpMsg() {
      return opMsg_;
    }
    /**
     * <code>optional .ws_msg op_msg = 4;</code>
     */
    public Mahjong.ws_msgOrBuilder getOpMsgOrBuilder() {
      return opMsg_;
    }

    // repeated .ws_msg re_msg = 5;
    public static final int RE_MSG_FIELD_NUMBER = 5;
    private java.util.List<Mahjong.ws_msg> reMsg_;
    /**
     * <code>repeated .ws_msg re_msg = 5;</code>
     */
    public java.util.List<Mahjong.ws_msg> getReMsgList() {
      return reMsg_;
    }
    /**
     * <code>repeated .ws_msg re_msg = 5;</code>
     */
    public java.util.List<? extends Mahjong.ws_msgOrBuilder> 
        getReMsgOrBuilderList() {
      return reMsg_;
    }
    /**
     * <code>repeated .ws_msg re_msg = 5;</code>
     */
    public int getReMsgCount() {
      return reMsg_.size();
    }
    /**
     * <code>repeated .ws_msg re_msg = 5;</code>
     */
    public Mahjong.ws_msg getReMsg(int index) {
      return reMsg_.get(index);
    }
    /**
     * <code>repeated .ws_msg re_msg = 5;</code>
     */
    public Mahjong.ws_msgOrBuilder getReMsgOrBuilder(
        int index) {
      return reMsg_.get(index);
    }

    private void initFields() {
      opInt_ = 0;
      reInt_ = java.util.Collections.emptyList();
      opStr_ = "";
      opMsg_ = Mahjong.ws_msg.getDefaultInstance();
      reMsg_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, opInt_);
      }
      if (getReIntList().size() > 0) {
        output.writeRawVarint32(18);
        output.writeRawVarint32(reIntMemoizedSerializedSize);
      }
      for (int i = 0; i < reInt_.size(); i++) {
        output.writeInt32NoTag(reInt_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, getOpStrBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, opMsg_);
      }
      for (int i = 0; i < reMsg_.size(); i++) {
        output.writeMessage(5, reMsg_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, opInt_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < reInt_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(reInt_.get(i));
        }
        size += dataSize;
        if (!getReIntList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        reIntMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getOpStrBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, opMsg_);
      }
      for (int i = 0; i < reMsg_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, reMsg_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Mahjong.WsProtoTest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.WsProtoTest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.WsProtoTest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mahjong.WsProtoTest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mahjong.WsProtoTest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.WsProtoTest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Mahjong.WsProtoTest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Mahjong.WsProtoTest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Mahjong.WsProtoTest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Mahjong.WsProtoTest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Mahjong.WsProtoTest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code WsProtoTest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Mahjong.WsProtoTestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Mahjong.internal_static_WsProtoTest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Mahjong.internal_static_WsProtoTest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mahjong.WsProtoTest.class, Mahjong.WsProtoTest.Builder.class);
      }

      // Construct using Mahjong.WsProtoTest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOpMsgFieldBuilder();
          getReMsgFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        opInt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        reInt_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        opStr_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (opMsgBuilder_ == null) {
          opMsg_ = Mahjong.ws_msg.getDefaultInstance();
        } else {
          opMsgBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (reMsgBuilder_ == null) {
          reMsg_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          reMsgBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Mahjong.internal_static_WsProtoTest_descriptor;
      }

      public Mahjong.WsProtoTest getDefaultInstanceForType() {
        return Mahjong.WsProtoTest.getDefaultInstance();
      }

      public Mahjong.WsProtoTest build() {
        Mahjong.WsProtoTest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Mahjong.WsProtoTest buildPartial() {
        Mahjong.WsProtoTest result = new Mahjong.WsProtoTest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.opInt_ = opInt_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          reInt_ = java.util.Collections.unmodifiableList(reInt_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.reInt_ = reInt_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.opStr_ = opStr_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        if (opMsgBuilder_ == null) {
          result.opMsg_ = opMsg_;
        } else {
          result.opMsg_ = opMsgBuilder_.build();
        }
        if (reMsgBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            reMsg_ = java.util.Collections.unmodifiableList(reMsg_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.reMsg_ = reMsg_;
        } else {
          result.reMsg_ = reMsgBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mahjong.WsProtoTest) {
          return mergeFrom((Mahjong.WsProtoTest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mahjong.WsProtoTest other) {
        if (other == Mahjong.WsProtoTest.getDefaultInstance()) return this;
        if (other.hasOpInt()) {
          setOpInt(other.getOpInt());
        }
        if (!other.reInt_.isEmpty()) {
          if (reInt_.isEmpty()) {
            reInt_ = other.reInt_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureReIntIsMutable();
            reInt_.addAll(other.reInt_);
          }
          onChanged();
        }
        if (other.hasOpStr()) {
          bitField0_ |= 0x00000004;
          opStr_ = other.opStr_;
          onChanged();
        }
        if (other.hasOpMsg()) {
          mergeOpMsg(other.getOpMsg());
        }
        if (reMsgBuilder_ == null) {
          if (!other.reMsg_.isEmpty()) {
            if (reMsg_.isEmpty()) {
              reMsg_ = other.reMsg_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureReMsgIsMutable();
              reMsg_.addAll(other.reMsg_);
            }
            onChanged();
          }
        } else {
          if (!other.reMsg_.isEmpty()) {
            if (reMsgBuilder_.isEmpty()) {
              reMsgBuilder_.dispose();
              reMsgBuilder_ = null;
              reMsg_ = other.reMsg_;
              bitField0_ = (bitField0_ & ~0x00000010);
              reMsgBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getReMsgFieldBuilder() : null;
            } else {
              reMsgBuilder_.addAllMessages(other.reMsg_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mahjong.WsProtoTest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mahjong.WsProtoTest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 op_int = 1;
      private int opInt_ ;
      /**
       * <code>optional int32 op_int = 1;</code>
       */
      public boolean hasOpInt() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 op_int = 1;</code>
       */
      public int getOpInt() {
        return opInt_;
      }
      /**
       * <code>optional int32 op_int = 1;</code>
       */
      public Builder setOpInt(int value) {
        bitField0_ |= 0x00000001;
        opInt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 op_int = 1;</code>
       */
      public Builder clearOpInt() {
        bitField0_ = (bitField0_ & ~0x00000001);
        opInt_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 re_int = 2 [packed = true];
      private java.util.List<java.lang.Integer> reInt_ = java.util.Collections.emptyList();
      private void ensureReIntIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          reInt_ = new java.util.ArrayList<java.lang.Integer>(reInt_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 re_int = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getReIntList() {
        return java.util.Collections.unmodifiableList(reInt_);
      }
      /**
       * <code>repeated int32 re_int = 2 [packed = true];</code>
       */
      public int getReIntCount() {
        return reInt_.size();
      }
      /**
       * <code>repeated int32 re_int = 2 [packed = true];</code>
       */
      public int getReInt(int index) {
        return reInt_.get(index);
      }
      /**
       * <code>repeated int32 re_int = 2 [packed = true];</code>
       */
      public Builder setReInt(
          int index, int value) {
        ensureReIntIsMutable();
        reInt_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 re_int = 2 [packed = true];</code>
       */
      public Builder addReInt(int value) {
        ensureReIntIsMutable();
        reInt_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 re_int = 2 [packed = true];</code>
       */
      public Builder addAllReInt(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureReIntIsMutable();
        super.addAll(values, reInt_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 re_int = 2 [packed = true];</code>
       */
      public Builder clearReInt() {
        reInt_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional string op_str = 3;
      private java.lang.Object opStr_ = "";
      /**
       * <code>optional string op_str = 3;</code>
       */
      public boolean hasOpStr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string op_str = 3;</code>
       */
      public java.lang.String getOpStr() {
        java.lang.Object ref = opStr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          opStr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string op_str = 3;</code>
       */
      public com.google.protobuf.ByteString
          getOpStrBytes() {
        java.lang.Object ref = opStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          opStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string op_str = 3;</code>
       */
      public Builder setOpStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        opStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string op_str = 3;</code>
       */
      public Builder clearOpStr() {
        bitField0_ = (bitField0_ & ~0x00000004);
        opStr_ = getDefaultInstance().getOpStr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string op_str = 3;</code>
       */
      public Builder setOpStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        opStr_ = value;
        onChanged();
        return this;
      }

      // optional .ws_msg op_msg = 4;
      private Mahjong.ws_msg opMsg_ = Mahjong.ws_msg.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.ws_msg, Mahjong.ws_msg.Builder, Mahjong.ws_msgOrBuilder> opMsgBuilder_;
      /**
       * <code>optional .ws_msg op_msg = 4;</code>
       */
      public boolean hasOpMsg() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .ws_msg op_msg = 4;</code>
       */
      public Mahjong.ws_msg getOpMsg() {
        if (opMsgBuilder_ == null) {
          return opMsg_;
        } else {
          return opMsgBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .ws_msg op_msg = 4;</code>
       */
      public Builder setOpMsg(Mahjong.ws_msg value) {
        if (opMsgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          opMsg_ = value;
          onChanged();
        } else {
          opMsgBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ws_msg op_msg = 4;</code>
       */
      public Builder setOpMsg(
          Mahjong.ws_msg.Builder builderForValue) {
        if (opMsgBuilder_ == null) {
          opMsg_ = builderForValue.build();
          onChanged();
        } else {
          opMsgBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ws_msg op_msg = 4;</code>
       */
      public Builder mergeOpMsg(Mahjong.ws_msg value) {
        if (opMsgBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              opMsg_ != Mahjong.ws_msg.getDefaultInstance()) {
            opMsg_ =
              Mahjong.ws_msg.newBuilder(opMsg_).mergeFrom(value).buildPartial();
          } else {
            opMsg_ = value;
          }
          onChanged();
        } else {
          opMsgBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .ws_msg op_msg = 4;</code>
       */
      public Builder clearOpMsg() {
        if (opMsgBuilder_ == null) {
          opMsg_ = Mahjong.ws_msg.getDefaultInstance();
          onChanged();
        } else {
          opMsgBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .ws_msg op_msg = 4;</code>
       */
      public Mahjong.ws_msg.Builder getOpMsgBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getOpMsgFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .ws_msg op_msg = 4;</code>
       */
      public Mahjong.ws_msgOrBuilder getOpMsgOrBuilder() {
        if (opMsgBuilder_ != null) {
          return opMsgBuilder_.getMessageOrBuilder();
        } else {
          return opMsg_;
        }
      }
      /**
       * <code>optional .ws_msg op_msg = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Mahjong.ws_msg, Mahjong.ws_msg.Builder, Mahjong.ws_msgOrBuilder> 
          getOpMsgFieldBuilder() {
        if (opMsgBuilder_ == null) {
          opMsgBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Mahjong.ws_msg, Mahjong.ws_msg.Builder, Mahjong.ws_msgOrBuilder>(
                  opMsg_,
                  getParentForChildren(),
                  isClean());
          opMsg_ = null;
        }
        return opMsgBuilder_;
      }

      // repeated .ws_msg re_msg = 5;
      private java.util.List<Mahjong.ws_msg> reMsg_ =
        java.util.Collections.emptyList();
      private void ensureReMsgIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          reMsg_ = new java.util.ArrayList<Mahjong.ws_msg>(reMsg_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.ws_msg, Mahjong.ws_msg.Builder, Mahjong.ws_msgOrBuilder> reMsgBuilder_;

      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public java.util.List<Mahjong.ws_msg> getReMsgList() {
        if (reMsgBuilder_ == null) {
          return java.util.Collections.unmodifiableList(reMsg_);
        } else {
          return reMsgBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public int getReMsgCount() {
        if (reMsgBuilder_ == null) {
          return reMsg_.size();
        } else {
          return reMsgBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public Mahjong.ws_msg getReMsg(int index) {
        if (reMsgBuilder_ == null) {
          return reMsg_.get(index);
        } else {
          return reMsgBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public Builder setReMsg(
          int index, Mahjong.ws_msg value) {
        if (reMsgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReMsgIsMutable();
          reMsg_.set(index, value);
          onChanged();
        } else {
          reMsgBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public Builder setReMsg(
          int index, Mahjong.ws_msg.Builder builderForValue) {
        if (reMsgBuilder_ == null) {
          ensureReMsgIsMutable();
          reMsg_.set(index, builderForValue.build());
          onChanged();
        } else {
          reMsgBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public Builder addReMsg(Mahjong.ws_msg value) {
        if (reMsgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReMsgIsMutable();
          reMsg_.add(value);
          onChanged();
        } else {
          reMsgBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public Builder addReMsg(
          int index, Mahjong.ws_msg value) {
        if (reMsgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReMsgIsMutable();
          reMsg_.add(index, value);
          onChanged();
        } else {
          reMsgBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public Builder addReMsg(
          Mahjong.ws_msg.Builder builderForValue) {
        if (reMsgBuilder_ == null) {
          ensureReMsgIsMutable();
          reMsg_.add(builderForValue.build());
          onChanged();
        } else {
          reMsgBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public Builder addReMsg(
          int index, Mahjong.ws_msg.Builder builderForValue) {
        if (reMsgBuilder_ == null) {
          ensureReMsgIsMutable();
          reMsg_.add(index, builderForValue.build());
          onChanged();
        } else {
          reMsgBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public Builder addAllReMsg(
          java.lang.Iterable<? extends Mahjong.ws_msg> values) {
        if (reMsgBuilder_ == null) {
          ensureReMsgIsMutable();
          super.addAll(values, reMsg_);
          onChanged();
        } else {
          reMsgBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public Builder clearReMsg() {
        if (reMsgBuilder_ == null) {
          reMsg_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          reMsgBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public Builder removeReMsg(int index) {
        if (reMsgBuilder_ == null) {
          ensureReMsgIsMutable();
          reMsg_.remove(index);
          onChanged();
        } else {
          reMsgBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public Mahjong.ws_msg.Builder getReMsgBuilder(
          int index) {
        return getReMsgFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public Mahjong.ws_msgOrBuilder getReMsgOrBuilder(
          int index) {
        if (reMsgBuilder_ == null) {
          return reMsg_.get(index);  } else {
          return reMsgBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public java.util.List<? extends Mahjong.ws_msgOrBuilder> 
           getReMsgOrBuilderList() {
        if (reMsgBuilder_ != null) {
          return reMsgBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(reMsg_);
        }
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public Mahjong.ws_msg.Builder addReMsgBuilder() {
        return getReMsgFieldBuilder().addBuilder(
            Mahjong.ws_msg.getDefaultInstance());
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public Mahjong.ws_msg.Builder addReMsgBuilder(
          int index) {
        return getReMsgFieldBuilder().addBuilder(
            index, Mahjong.ws_msg.getDefaultInstance());
      }
      /**
       * <code>repeated .ws_msg re_msg = 5;</code>
       */
      public java.util.List<Mahjong.ws_msg.Builder> 
           getReMsgBuilderList() {
        return getReMsgFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Mahjong.ws_msg, Mahjong.ws_msg.Builder, Mahjong.ws_msgOrBuilder> 
          getReMsgFieldBuilder() {
        if (reMsgBuilder_ == null) {
          reMsgBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Mahjong.ws_msg, Mahjong.ws_msg.Builder, Mahjong.ws_msgOrBuilder>(
                  reMsg_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          reMsg_ = null;
        }
        return reMsgBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:WsProtoTest)
    }

    static {
      defaultInstance = new WsProtoTest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:WsProtoTest)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LoginReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LoginReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_WeChatLoginReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_WeChatLoginReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LoginRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LoginRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ExtraDeskTypeInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ExtraDeskTypeInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameEnterDeskReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameEnterDeskReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameEnterDeskRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameEnterDeskRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UserRoomCardChange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UserRoomCardChange_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameUserInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameUserInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UserCommonCards_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UserCommonCards_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MyOption_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MyOption_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EvtDeskUserEnter_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EvtDeskUserEnter_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameExitDeskReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameExitDeskReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameExitDeskRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameExitDeskRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DeskPlayInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DeskPlayInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EvtUserExit_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EvtUserExit_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ClientNotifyStartGameReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ClientNotifyStartGameReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ClientNotifyStartGameRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ClientNotifyStartGameRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameSendCardReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameSendCardReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameSendCardRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameSendCardRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameOptionChiReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameOptionChiReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameOptionChiRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameOptionChiRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameOptionPengReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameOptionPengReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameOptionPengRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameOptionPengRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameOptionGangReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameOptionGangReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameOptionGangRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameOptionGangRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameOptionHuReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameOptionHuReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameOptionHuRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameOptionHuRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameOptionPassReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameOptionPassReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameOptionPassRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameOptionPassRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GamePlayerReadyReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GamePlayerReadyReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UserStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UserStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GamePlayerReadyEvt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GamePlayerReadyEvt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameOptionGangNotFirstReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameOptionGangNotFirstReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameOptionGangNotFirstRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameOptionGangNotFirstRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ApplyDeleteReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ApplyDeleteReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ApplyDeleteEvt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ApplyDeleteEvt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UserOption_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UserOption_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameInfoEvt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameInfoEvt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GameOverResultInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GameOverResultInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EvtGameOver_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EvtGameOver_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RecordInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RecordInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PerPlayRecord_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PerPlayRecord_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MyPlayRecordListReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MyPlayRecordListReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MyPlayRecordListRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MyPlayRecordListRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RoundPlayRecordsReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RoundPlayRecordsReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RoundPlayRecordsRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RoundPlayRecordsRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DeskChatReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DeskChatReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DeskChatEvt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DeskChatEvt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LogOutReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogOutReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LogOutRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogOutRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EvtBroadCast_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EvtBroadCast_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UserCreatePreBill_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UserCreatePreBill_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CreateFormalBill_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CreateFormalBill_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SetInviteUserReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SetInviteUserReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SetInviteUserRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SetInviteUserRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HeartBeatReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HeartBeatReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HeartBeatRsp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HeartBeatRsp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ws_msg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ws_msg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_WsProtoTest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_WsProtoTest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rmahjong.proto\"\247\001\n\010LoginReq\022\014\n\004nick\030\001 \001" +
      "(\t\022\014\n\004uuid\030\002 \001(\t\022\014\n\004sign\030\003 \001(\t\022\017\n\007channe" +
      "l\030\004 \001(\t\022\017\n\007version\030\005 \001(\005\022\n\n\002os\030\006 \001(\t\022\023\n\013" +
      "is_register\030\007 \001(\010\022\026\n\016extra_username\030\010 \001(" +
      "\t\022\026\n\016extra_password\030\t \001(\t\"\200\001\n\016WeChatLogi" +
      "nReq\022\014\n\004sign\030\001 \001(\t\022\016\n\006openid\030\002 \001(\t\022\r\n\005to" +
      "ken\030\003 \001(\t\022\023\n\013expire_date\030\004 \001(\t\022\017\n\007channe" +
      "l\030\005 \001(\t\022\017\n\007version\030\006 \001(\005\022\n\n\002os\030\007 \001(\t\"\361\001\n" +
      "\010LoginRsp\022\013\n\003uin\030\001 \001(\005\022\020\n\010password\030\002 \001(\t" +
      "\022\014\n\004nick\030\003 \001(\t\022\013\n\003sex\030\004 \001(\005\022\022\n\nold_deski",
      "d\030\005 \001(\005\022\020\n\010portrait\030\007 \001(\t\022\024\n\014wx_public_i" +
      "d\030\010 \001(\t\022\023\n\013wx_agent_id\030\t \001(\t\022\n\n\002ip\030\n \001(\t" +
      "\022\021\n\troom_card\030\013 \001(\005\022\013\n\003ret\030\014 \001(\005\022\027\n\017wy_y" +
      "unxin_token\030\r \001(\t\022\025\n\rhall_billband\030\016 \001(\t" +
      "\"j\n\021ExtraDeskTypeInfo\022\021\n\thongzhong\030\001 \001(\010" +
      "\022\r\n\005qidui\030\002 \001(\010\022\020\n\010zhuaniao\030\003 \001(\005\022\017\n\007pia" +
      "ofen\030\004 \001(\005\022\020\n\010shanghuo\030\005 \001(\010\"\277\001\n\020GameEnt" +
      "erDeskReq\022\023\n\013dst_desk_id\030\001 \001(\005\022\020\n\010new_de" +
      "sk\030\002 \001(\005\022\021\n\treconnect\030\003 \001(\005\022\020\n\010card_num\030" +
      "\004 \001(\005\022\021\n\tdesk_type\030\005 \001(\005\022\022\n\nseat_limit\030\006",
      " \001(\005\022\020\n\010win_type\030\007 \001(\005\022&\n\nextra_type\030\010 \001" +
      "(\0132\022.ExtraDeskTypeInfo\"\037\n\020GameEnterDeskR" +
      "sp\022\013\n\003ret\030\001 \001(\005\">\n\022UserRoomCardChange\022\021\n" +
      "\troom_card\030\001 \001(\005\022\025\n\rchange_reason\030\002 \001(\005\"" +
      "\252\001\n\014GameUserInfo\022\016\n\006status\030\001 \001(\005\022\013\n\003uin\030" +
      "\002 \001(\005\022\014\n\004nick\030\003 \001(\t\022\016\n\006seatid\030\004 \001(\005\022\013\n\003s" +
      "ex\030\005 \001(\005\022\020\n\010portrait\030\006 \001(\t\022\021\n\tis_master\030" +
      "\007 \001(\005\022\017\n\007piaofen\030\010 \001(\005\022\020\n\010shanghuo\030\t \001(\005" +
      "\022\n\n\002ip\030\n \001(\t\"\224\001\n\017UserCommonCards\022\013\n\003uin\030" +
      "\001 \001(\005\022\020\n\010card_len\030\002 \001(\005\022\021\n\tout_cards\030\003 \003",
      "(\005\022\017\n\007discard\030\004 \003(\005\022\016\n\006seatid\030\005 \001(\005\022\016\n\006s" +
      "tatus\030\006 \001(\005\022\017\n\007op_list\030\007 \003(\005\022\r\n\005chips\030\010 " +
      "\001(\005\"q\n\010MyOption\022\016\n\006op_chi\030\001 \001(\010\022\017\n\007op_pe" +
      "ng\030\002 \001(\010\022\017\n\007op_gang\030\003 \001(\010\022\r\n\005op_hu\030\004 \001(\010" +
      "\022\021\n\tneed_wait\030\005 \001(\010\022\021\n\tchi_cards\030\006 \003(\005\"\353" +
      "\003\n\020EvtDeskUserEnter\022\016\n\006deskid\030\001 \001(\005\022\016\n\006o" +
      "p_uin\030\002 \001(\005\022\016\n\006status\030\003 \001(\005\022\021\n\tmax_round" +
      "\030\004 \001(\005\022\034\n\005users\030\005 \003(\0132\r.GameUserInfo\022\020\n\010" +
      "next_uin\030\006 \001(\005\022\025\n\rdealer_seatid\030\007 \001(\005\022\021\n" +
      "\005cards\030\010 \003(\005B\002\020\001\022\"\n\010in_users\030\t \003(\0132\020.Use",
      "rCommonCards\022\027\n\017share_cards_len\030\n \001(\005\022\022\n" +
      "\ngame_round\030\013 \001(\005\022\034\n\tmy_option\030\014 \001(\0132\t.M" +
      "yOption\022\025\n\rrecv_card_uin\030\r \001(\005\022\031\n\021desk_r" +
      "emain_round\030\016 \001(\005\022\020\n\010seat_num\030\017 \001(\005\022\023\n\013r" +
      "emain_time\030\020 \001(\005\022\021\n\tapply_uin\030\021 \001(\005\022\020\n\010w" +
      "in_type\030\022 \001(\005\022&\n\nextra_type\030\023 \001(\0132\022.Extr" +
      "aDeskTypeInfo\022\014\n\004type\030\024 \001(\005\022\027\n\017pre_remai" +
      "n_time\030\025 \001(\005\"\021\n\017GameExitDeskReq\"\036\n\017GameE" +
      "xitDeskRsp\022\013\n\003ret\030\001 \001(\005\"\254\003\n\014DeskPlayInfo" +
      "\022\021\n\005cards\030\001 \003(\005B\002\020\001\022\020\n\010card_len\030\002 \001(\005\022\025\n",
      "\tout_cards\030\003 \003(\005B\002\020\001\022\024\n\014out_card_len\030\004 \001" +
      "(\005\022\024\n\010discards\030\005 \003(\005B\002\020\001\022\016\n\006status\030\006 \001(\005" +
      "\022\r\n\005chips\030\007 \001(\005\022\027\n\017round_win_chips\030\010 \001(\005" +
      "\022\025\n\rtotal_chi_num\030\t \001(\005\022\026\n\016total_peng_nu" +
      "m\030\n \001(\005\022\026\n\016total_gang_num\030\013 \001(\005\022\030\n\020total" +
      "_ganged_num\030\014 \001(\005\022\024\n\014total_hu_num\030\r \001(\005\022" +
      "\026\n\016total_hued_num\030\016 \001(\005\022\025\n\rround_chi_num" +
      "\030\017 \001(\005\022\026\n\016round_peng_num\030\020 \001(\005\022\026\n\016round_" +
      "gang_num\030\021 \001(\005\022\030\n\020round_ganged_num\030\022 \001(\005" +
      "\022\014\n\004role\030\023 \001(\005\"\310\001\n\013EvtUserExit\022\016\n\006deskid",
      "\030\001 \001(\005\022\016\n\006dealer\030\002 \001(\005\022\016\n\006op_uin\030\003 \001(\005\022\021" +
      "\n\top_status\030\004 \001(\005\022\020\n\010next_uin\030\005 \001(\005\022 \n\tp" +
      "lay_info\030\006 \001(\0132\r.DeskPlayInfo\022\033\n\023player_" +
      "op_past_time\030\007 \001(\003\022\025\n\rdealer_seatid\030\010 \001(" +
      "\005\022\016\n\006reason\030\t \001(\005\"\032\n\030ClientNotifyStartGa" +
      "meReq\"\'\n\030ClientNotifyStartGameRsp\022\013\n\003ret" +
      "\030\001 \001(\005\"\037\n\017GameSendCardReq\022\014\n\004card\030\001 \001(\005\"" +
      "\036\n\017GameSendCardRsp\022\013\n\003ret\030\001 \001(\005\"!\n\020GameO" +
      "ptionChiReq\022\r\n\005index\030\001 \001(\005\"\037\n\020GameOption" +
      "ChiRsp\022\013\n\003ret\030\001 \001(\005\"\023\n\021GameOptionPengReq",
      "\" \n\021GameOptionPengRsp\022\013\n\003ret\030\001 \001(\005\"\023\n\021Ga" +
      "meOptionGangReq\" \n\021GameOptionGangRsp\022\013\n\003" +
      "ret\030\001 \001(\005\"\021\n\017GameOptionHuReq\"\036\n\017GameOpti" +
      "onHuRsp\022\013\n\003ret\030\001 \001(\005\"\023\n\021GameOptionPassRe" +
      "q\" \n\021GameOptionPassRsp\022\013\n\003ret\030\001 \001(\005\"5\n\022G" +
      "amePlayerReadyReq\022\016\n\006status\030\001 \001(\005\022\017\n\007pia" +
      "ofen\030\002 \001(\005\"L\n\nUserStatus\022\013\n\003uin\030\001 \001(\005\022\016\n" +
      "\006status\030\002 \001(\005\022\017\n\007piaofen\030\003 \001(\005\022\020\n\010shangh" +
      "uo\030\004 \001(\005\"Y\n\022GamePlayerReadyEvt\022\032\n\005users\030" +
      "\001 \003(\0132\013.UserStatus\022\027\n\017pre_remain_time\030\002 ",
      "\001(\005\022\016\n\006deskid\030\003 \001(\005\".\n\031GameOptionGangNot" +
      "FirstReq\022\021\n\tgang_card\030\001 \001(\005\"(\n\031GameOptio" +
      "nGangNotFirstRsp\022\013\n\003ret\030\001 \001(\005\"\020\n\016ApplyDe" +
      "leteReq\"m\n\016ApplyDeleteEvt\022\021\n\tapply_uin\030\001" +
      " \001(\005\022\023\n\013game_status\030\002 \001(\005\022\023\n\013remain_time" +
      "\030\003 \001(\005\022\016\n\006status\030\004 \001(\005\022\016\n\006deskid\030\005 \001(\005\"\'" +
      "\n\nUserOption\022\013\n\003uin\030\001 \001(\005\022\014\n\004type\030\002 \001(\005\"" +
      "\312\002\n\013GameInfoEvt\022\016\n\006deskid\030\001 \001(\005\022\020\n\010next_" +
      "uin\030\002 \001(\005\022\021\n\tmax_round\030\003 \001(\005\022\021\n\005cards\030\004 " +
      "\003(\005B\002\020\001\022\025\n\rdealer_seatid\030\005 \001(\005\022\037\n\005users\030",
      "\006 \003(\0132\020.UserCommonCards\022\034\n\007op_user\030\007 \001(\013" +
      "2\013.UserOption\022\027\n\017share_cards_len\030\010 \001(\005\022\022" +
      "\n\ngame_round\030\t \001(\005\022\034\n\tmy_option\030\n \001(\0132\t." +
      "MyOption\022\016\n\006status\030\013 \001(\005\022\025\n\rrecv_card_ui" +
      "n\030\014 \001(\005\022\031\n\021desk_remain_round\030\r \001(\005\022\020\n\010se" +
      "at_num\030\016 \001(\005\"\353\003\n\022GameOverResultInfo\022\013\n\003u" +
      "in\030\001 \001(\005\022\r\n\005chips\030\002 \001(\003\022\025\n\rround_chi_num" +
      "\030\003 \001(\005\022\026\n\016round_peng_num\030\004 \001(\005\022\027\n\017round_" +
      "gang_list\030\005 \003(\005\022\025\n\rround_hu_list\030\006 \003(\005\022\026" +
      "\n\016round_win_list\030\007 \003(\005\022\025\n\rtotal_chi_num\030",
      "\010 \001(\005\022\026\n\016total_peng_num\030\t \001(\005\022\027\n\017total_g" +
      "ang_list\030\n \003(\005\022\025\n\rtotal_hu_list\030\013 \003(\005\022\026\n" +
      "\016total_win_list\030\014 \003(\005\022\016\n\006status\030\r \001(\005\022\017\n" +
      "\007piaofen\030\016 \001(\005\022\020\n\010shanghuo\030\017 \001(\005\022\020\n\010bird" +
      "_num\030\020 \001(\005\022\r\n\005cards\030\021 \003(\005\022\021\n\tout_cards\030\022" +
      " \003(\005\022\017\n\007op_list\030\023 \003(\005\022\027\n\017round_win_chips" +
      "\030\024 \001(\005\022\032\n\022over_chips_details\030\025 \003(\005\022\036\n\026ro" +
      "und_win_chips_before\030\026 \001(\005\"\260\002\n\013EvtGameOv" +
      "er\022\023\n\007winners\030\001 \003(\005B\002\020\001\022#\n\006result\030\002 \003(\0132" +
      "\023.GameOverResultInfo\022\016\n\006deskid\030\003 \001(\005\022\016\n\006",
      "status\030\004 \001(\005\022\030\n\020remain_round_num\030\005 \001(\005\022\025" +
      "\n\tbird_card\030\006 \003(\005B\002\020\001\022\014\n\004type\030\007 \001(\005\022\022\n\ns" +
      "eat_limit\030\010 \001(\005\022\020\n\010win_type\030\t \001(\005\022&\n\next" +
      "ra_type\030\n \001(\0132\022.ExtraDeskTypeInfo\022\022\n\nlas" +
      "t_round\030\013 \001(\010\022\021\n\tover_time\030\014 \001(\005\022\023\n\013over" +
      "_reason\030\r \001(\005\"\236\004\n\nRecordInfo\022\013\n\003uin\030\001 \001(" +
      "\005\022\014\n\004role\030\002 \001(\005\022\r\n\005chips\030\003 \001(\003\022\027\n\017round_" +
      "win_chips\030\004 \001(\005\022\025\n\rround_chi_num\030\005 \001(\005\022\026" +
      "\n\016round_peng_num\030\006 \001(\005\022\027\n\017round_gang_lis" +
      "t\030\007 \003(\005\022\025\n\rround_hu_list\030\010 \003(\005\022\026\n\016round_",
      "win_list\030\t \003(\005\022\025\n\rtotal_chi_num\030\n \001(\005\022\026\n" +
      "\016total_peng_num\030\013 \001(\005\022\027\n\017total_gang_list" +
      "\030\014 \003(\005\022\025\n\rtotal_hu_list\030\r \003(\005\022\026\n\016total_w" +
      "in_list\030\016 \003(\005\022\017\n\007piaofen\030\017 \001(\005\022\020\n\010shangh" +
      "uo\030\020 \001(\005\022\020\n\010bird_num\030\021 \001(\005\022\r\n\005cards\030\022 \003(" +
      "\005\022\021\n\tout_cards\030\023 \003(\005\022\017\n\007op_list\030\024 \003(\005\022\032\n" +
      "\022over_chips_details\030\025 \003(\005\022\036\n\026round_win_c" +
      "hips_before\030\026 \001(\005\022\014\n\004nick\030\027 \001(\t\022\016\n\006seati" +
      "d\030\030 \001(\005\022\013\n\003sex\030\031 \001(\005\022\020\n\010portrait\030\032 \001(\t\"\244" +
      "\002\n\rPerPlayRecord\022\017\n\007roundid\030\001 \001(\t\022\033\n\006res",
      "ult\030\002 \003(\0132\013.RecordInfo\022\016\n\006deskid\030\003 \001(\005\022\022" +
      "\n\ngame_round\030\004 \001(\005\022\022\n\ndesk_round\030\006 \001(\005\022\025" +
      "\n\tbird_card\030\007 \003(\005B\002\020\001\022\014\n\004type\030\010 \001(\005\022\022\n\ns" +
      "eat_limit\030\t \001(\005\022\020\n\010win_type\030\n \001(\005\022&\n\next" +
      "ra_type\030\013 \001(\0132\022.ExtraDeskTypeInfo\022\021\n\tove" +
      "r_time\030\014 \001(\005\022\022\n\nmaster_uin\030\r \001(\005\022\023\n\007winn" +
      "ers\030\016 \003(\005B\002\020\001\"\025\n\023MyPlayRecordListReq\"G\n\023" +
      "MyPlayRecordListRsp\022#\n\013record_list\030\001 \003(\013" +
      "2\016.PerPlayRecord\022\013\n\003ret\030\002 \001(\005\"A\n\023RoundPl" +
      "ayRecordsReq\022\020\n\010round_id\030\001 \001(\t\022\030\n\020game_r",
      "ound_index\030\002 \001(\005\"G\n\023RoundPlayRecordsRsp\022" +
      "#\n\013record_list\030\001 \003(\0132\016.PerPlayRecord\022\013\n\003" +
      "ret\030\002 \001(\005\";\n\013DeskChatReq\022\017\n\007content\030\001 \001(" +
      "\t\022\014\n\004type\030\002 \001(\005\022\r\n\005index\030\003 \001(\005\"W\n\013DeskCh" +
      "atEvt\022\013\n\003ret\030\001 \001(\005\022\016\n\006op_uin\030\002 \001(\005\022\013\n\003se" +
      "x\030\003 \001(\010\022\r\n\005index\030\004 \001(\005\022\017\n\007content\030\005 \001(\t\"" +
      "\013\n\tLogOutReq\"\013\n\tLogOutRsp\":\n\014EvtBroadCas" +
      "t\022\013\n\003uin\030\001 \001(\005\022\017\n\007content\030\002 \001(\t\022\014\n\004nick\030" +
      "\003 \001(\t\"?\n\021UserCreatePreBill\022\013\n\003uin\030\001 \001(\005\022" +
      "\014\n\004name\030\002 \001(\t\022\017\n\007item_id\030\003 \001(\t\"0\n\020Create",
      "FormalBill\022\013\n\003uin\030\001 \001(\005\022\017\n\007item_id\030\002 \001(\t" +
      "\"\037\n\020SetInviteUserReq\022\013\n\003uin\030\001 \001(\005\"\037\n\020Set" +
      "InviteUserRsp\022\013\n\003ret\030\001 \001(\005\"\016\n\014HeartBeatR" +
      "eq\"\016\n\014HeartBeatRsp\"\033\n\006ws_msg\022\021\n\tms_op_in" +
      "t\030\001 \001(\005\"s\n\013WsProtoTest\022\016\n\006op_int\030\001 \001(\005\022\022" +
      "\n\006re_int\030\002 \003(\005B\002\020\001\022\016\n\006op_str\030\003 \001(\t\022\027\n\006op" +
      "_msg\030\004 \001(\0132\007.ws_msg\022\027\n\006re_msg\030\005 \003(\0132\007.ws" +
      "_msg"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_LoginReq_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_LoginReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LoginReq_descriptor,
              new java.lang.String[] { "Nick", "Uuid", "Sign", "Channel", "Version", "Os", "IsRegister", "ExtraUsername", "ExtraPassword", });
          internal_static_WeChatLoginReq_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_WeChatLoginReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_WeChatLoginReq_descriptor,
              new java.lang.String[] { "Sign", "Openid", "Token", "ExpireDate", "Channel", "Version", "Os", });
          internal_static_LoginRsp_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_LoginRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LoginRsp_descriptor,
              new java.lang.String[] { "Uin", "Password", "Nick", "Sex", "OldDeskid", "Portrait", "WxPublicId", "WxAgentId", "Ip", "RoomCard", "Ret", "WyYunxinToken", "HallBillband", });
          internal_static_ExtraDeskTypeInfo_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_ExtraDeskTypeInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ExtraDeskTypeInfo_descriptor,
              new java.lang.String[] { "Hongzhong", "Qidui", "Zhuaniao", "Piaofen", "Shanghuo", });
          internal_static_GameEnterDeskReq_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_GameEnterDeskReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameEnterDeskReq_descriptor,
              new java.lang.String[] { "DstDeskId", "NewDesk", "Reconnect", "CardNum", "DeskType", "SeatLimit", "WinType", "ExtraType", });
          internal_static_GameEnterDeskRsp_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_GameEnterDeskRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameEnterDeskRsp_descriptor,
              new java.lang.String[] { "Ret", });
          internal_static_UserRoomCardChange_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_UserRoomCardChange_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UserRoomCardChange_descriptor,
              new java.lang.String[] { "RoomCard", "ChangeReason", });
          internal_static_GameUserInfo_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_GameUserInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameUserInfo_descriptor,
              new java.lang.String[] { "Status", "Uin", "Nick", "Seatid", "Sex", "Portrait", "IsMaster", "Piaofen", "Shanghuo", "Ip", });
          internal_static_UserCommonCards_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_UserCommonCards_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UserCommonCards_descriptor,
              new java.lang.String[] { "Uin", "CardLen", "OutCards", "Discard", "Seatid", "Status", "OpList", "Chips", });
          internal_static_MyOption_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_MyOption_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MyOption_descriptor,
              new java.lang.String[] { "OpChi", "OpPeng", "OpGang", "OpHu", "NeedWait", "ChiCards", });
          internal_static_EvtDeskUserEnter_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_EvtDeskUserEnter_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EvtDeskUserEnter_descriptor,
              new java.lang.String[] { "Deskid", "OpUin", "Status", "MaxRound", "Users", "NextUin", "DealerSeatid", "Cards", "InUsers", "ShareCardsLen", "GameRound", "MyOption", "RecvCardUin", "DeskRemainRound", "SeatNum", "RemainTime", "ApplyUin", "WinType", "ExtraType", "Type", "PreRemainTime", });
          internal_static_GameExitDeskReq_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_GameExitDeskReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameExitDeskReq_descriptor,
              new java.lang.String[] { });
          internal_static_GameExitDeskRsp_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_GameExitDeskRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameExitDeskRsp_descriptor,
              new java.lang.String[] { "Ret", });
          internal_static_DeskPlayInfo_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_DeskPlayInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DeskPlayInfo_descriptor,
              new java.lang.String[] { "Cards", "CardLen", "OutCards", "OutCardLen", "Discards", "Status", "Chips", "RoundWinChips", "TotalChiNum", "TotalPengNum", "TotalGangNum", "TotalGangedNum", "TotalHuNum", "TotalHuedNum", "RoundChiNum", "RoundPengNum", "RoundGangNum", "RoundGangedNum", "Role", });
          internal_static_EvtUserExit_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_EvtUserExit_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EvtUserExit_descriptor,
              new java.lang.String[] { "Deskid", "Dealer", "OpUin", "OpStatus", "NextUin", "PlayInfo", "PlayerOpPastTime", "DealerSeatid", "Reason", });
          internal_static_ClientNotifyStartGameReq_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_ClientNotifyStartGameReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ClientNotifyStartGameReq_descriptor,
              new java.lang.String[] { });
          internal_static_ClientNotifyStartGameRsp_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_ClientNotifyStartGameRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ClientNotifyStartGameRsp_descriptor,
              new java.lang.String[] { "Ret", });
          internal_static_GameSendCardReq_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_GameSendCardReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameSendCardReq_descriptor,
              new java.lang.String[] { "Card", });
          internal_static_GameSendCardRsp_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_GameSendCardRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameSendCardRsp_descriptor,
              new java.lang.String[] { "Ret", });
          internal_static_GameOptionChiReq_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_GameOptionChiReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameOptionChiReq_descriptor,
              new java.lang.String[] { "Index", });
          internal_static_GameOptionChiRsp_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_GameOptionChiRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameOptionChiRsp_descriptor,
              new java.lang.String[] { "Ret", });
          internal_static_GameOptionPengReq_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_GameOptionPengReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameOptionPengReq_descriptor,
              new java.lang.String[] { });
          internal_static_GameOptionPengRsp_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_GameOptionPengRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameOptionPengRsp_descriptor,
              new java.lang.String[] { "Ret", });
          internal_static_GameOptionGangReq_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_GameOptionGangReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameOptionGangReq_descriptor,
              new java.lang.String[] { });
          internal_static_GameOptionGangRsp_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_GameOptionGangRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameOptionGangRsp_descriptor,
              new java.lang.String[] { "Ret", });
          internal_static_GameOptionHuReq_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_GameOptionHuReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameOptionHuReq_descriptor,
              new java.lang.String[] { });
          internal_static_GameOptionHuRsp_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_GameOptionHuRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameOptionHuRsp_descriptor,
              new java.lang.String[] { "Ret", });
          internal_static_GameOptionPassReq_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_GameOptionPassReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameOptionPassReq_descriptor,
              new java.lang.String[] { });
          internal_static_GameOptionPassRsp_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_GameOptionPassRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameOptionPassRsp_descriptor,
              new java.lang.String[] { "Ret", });
          internal_static_GamePlayerReadyReq_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_GamePlayerReadyReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GamePlayerReadyReq_descriptor,
              new java.lang.String[] { "Status", "Piaofen", });
          internal_static_UserStatus_descriptor =
            getDescriptor().getMessageTypes().get(30);
          internal_static_UserStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UserStatus_descriptor,
              new java.lang.String[] { "Uin", "Status", "Piaofen", "Shanghuo", });
          internal_static_GamePlayerReadyEvt_descriptor =
            getDescriptor().getMessageTypes().get(31);
          internal_static_GamePlayerReadyEvt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GamePlayerReadyEvt_descriptor,
              new java.lang.String[] { "Users", "PreRemainTime", "Deskid", });
          internal_static_GameOptionGangNotFirstReq_descriptor =
            getDescriptor().getMessageTypes().get(32);
          internal_static_GameOptionGangNotFirstReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameOptionGangNotFirstReq_descriptor,
              new java.lang.String[] { "GangCard", });
          internal_static_GameOptionGangNotFirstRsp_descriptor =
            getDescriptor().getMessageTypes().get(33);
          internal_static_GameOptionGangNotFirstRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameOptionGangNotFirstRsp_descriptor,
              new java.lang.String[] { "Ret", });
          internal_static_ApplyDeleteReq_descriptor =
            getDescriptor().getMessageTypes().get(34);
          internal_static_ApplyDeleteReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ApplyDeleteReq_descriptor,
              new java.lang.String[] { });
          internal_static_ApplyDeleteEvt_descriptor =
            getDescriptor().getMessageTypes().get(35);
          internal_static_ApplyDeleteEvt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ApplyDeleteEvt_descriptor,
              new java.lang.String[] { "ApplyUin", "GameStatus", "RemainTime", "Status", "Deskid", });
          internal_static_UserOption_descriptor =
            getDescriptor().getMessageTypes().get(36);
          internal_static_UserOption_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UserOption_descriptor,
              new java.lang.String[] { "Uin", "Type", });
          internal_static_GameInfoEvt_descriptor =
            getDescriptor().getMessageTypes().get(37);
          internal_static_GameInfoEvt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameInfoEvt_descriptor,
              new java.lang.String[] { "Deskid", "NextUin", "MaxRound", "Cards", "DealerSeatid", "Users", "OpUser", "ShareCardsLen", "GameRound", "MyOption", "Status", "RecvCardUin", "DeskRemainRound", "SeatNum", });
          internal_static_GameOverResultInfo_descriptor =
            getDescriptor().getMessageTypes().get(38);
          internal_static_GameOverResultInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GameOverResultInfo_descriptor,
              new java.lang.String[] { "Uin", "Chips", "RoundChiNum", "RoundPengNum", "RoundGangList", "RoundHuList", "RoundWinList", "TotalChiNum", "TotalPengNum", "TotalGangList", "TotalHuList", "TotalWinList", "Status", "Piaofen", "Shanghuo", "BirdNum", "Cards", "OutCards", "OpList", "RoundWinChips", "OverChipsDetails", "RoundWinChipsBefore", });
          internal_static_EvtGameOver_descriptor =
            getDescriptor().getMessageTypes().get(39);
          internal_static_EvtGameOver_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EvtGameOver_descriptor,
              new java.lang.String[] { "Winners", "Result", "Deskid", "Status", "RemainRoundNum", "BirdCard", "Type", "SeatLimit", "WinType", "ExtraType", "LastRound", "OverTime", "OverReason", });
          internal_static_RecordInfo_descriptor =
            getDescriptor().getMessageTypes().get(40);
          internal_static_RecordInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RecordInfo_descriptor,
              new java.lang.String[] { "Uin", "Role", "Chips", "RoundWinChips", "RoundChiNum", "RoundPengNum", "RoundGangList", "RoundHuList", "RoundWinList", "TotalChiNum", "TotalPengNum", "TotalGangList", "TotalHuList", "TotalWinList", "Piaofen", "Shanghuo", "BirdNum", "Cards", "OutCards", "OpList", "OverChipsDetails", "RoundWinChipsBefore", "Nick", "Seatid", "Sex", "Portrait", });
          internal_static_PerPlayRecord_descriptor =
            getDescriptor().getMessageTypes().get(41);
          internal_static_PerPlayRecord_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PerPlayRecord_descriptor,
              new java.lang.String[] { "Roundid", "Result", "Deskid", "GameRound", "DeskRound", "BirdCard", "Type", "SeatLimit", "WinType", "ExtraType", "OverTime", "MasterUin", "Winners", });
          internal_static_MyPlayRecordListReq_descriptor =
            getDescriptor().getMessageTypes().get(42);
          internal_static_MyPlayRecordListReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MyPlayRecordListReq_descriptor,
              new java.lang.String[] { });
          internal_static_MyPlayRecordListRsp_descriptor =
            getDescriptor().getMessageTypes().get(43);
          internal_static_MyPlayRecordListRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MyPlayRecordListRsp_descriptor,
              new java.lang.String[] { "RecordList", "Ret", });
          internal_static_RoundPlayRecordsReq_descriptor =
            getDescriptor().getMessageTypes().get(44);
          internal_static_RoundPlayRecordsReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RoundPlayRecordsReq_descriptor,
              new java.lang.String[] { "RoundId", "GameRoundIndex", });
          internal_static_RoundPlayRecordsRsp_descriptor =
            getDescriptor().getMessageTypes().get(45);
          internal_static_RoundPlayRecordsRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RoundPlayRecordsRsp_descriptor,
              new java.lang.String[] { "RecordList", "Ret", });
          internal_static_DeskChatReq_descriptor =
            getDescriptor().getMessageTypes().get(46);
          internal_static_DeskChatReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DeskChatReq_descriptor,
              new java.lang.String[] { "Content", "Type", "Index", });
          internal_static_DeskChatEvt_descriptor =
            getDescriptor().getMessageTypes().get(47);
          internal_static_DeskChatEvt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DeskChatEvt_descriptor,
              new java.lang.String[] { "Ret", "OpUin", "Sex", "Index", "Content", });
          internal_static_LogOutReq_descriptor =
            getDescriptor().getMessageTypes().get(48);
          internal_static_LogOutReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LogOutReq_descriptor,
              new java.lang.String[] { });
          internal_static_LogOutRsp_descriptor =
            getDescriptor().getMessageTypes().get(49);
          internal_static_LogOutRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LogOutRsp_descriptor,
              new java.lang.String[] { });
          internal_static_EvtBroadCast_descriptor =
            getDescriptor().getMessageTypes().get(50);
          internal_static_EvtBroadCast_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EvtBroadCast_descriptor,
              new java.lang.String[] { "Uin", "Content", "Nick", });
          internal_static_UserCreatePreBill_descriptor =
            getDescriptor().getMessageTypes().get(51);
          internal_static_UserCreatePreBill_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UserCreatePreBill_descriptor,
              new java.lang.String[] { "Uin", "Name", "ItemId", });
          internal_static_CreateFormalBill_descriptor =
            getDescriptor().getMessageTypes().get(52);
          internal_static_CreateFormalBill_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CreateFormalBill_descriptor,
              new java.lang.String[] { "Uin", "ItemId", });
          internal_static_SetInviteUserReq_descriptor =
            getDescriptor().getMessageTypes().get(53);
          internal_static_SetInviteUserReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SetInviteUserReq_descriptor,
              new java.lang.String[] { "Uin", });
          internal_static_SetInviteUserRsp_descriptor =
            getDescriptor().getMessageTypes().get(54);
          internal_static_SetInviteUserRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SetInviteUserRsp_descriptor,
              new java.lang.String[] { "Ret", });
          internal_static_HeartBeatReq_descriptor =
            getDescriptor().getMessageTypes().get(55);
          internal_static_HeartBeatReq_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HeartBeatReq_descriptor,
              new java.lang.String[] { });
          internal_static_HeartBeatRsp_descriptor =
            getDescriptor().getMessageTypes().get(56);
          internal_static_HeartBeatRsp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HeartBeatRsp_descriptor,
              new java.lang.String[] { });
          internal_static_ws_msg_descriptor =
            getDescriptor().getMessageTypes().get(57);
          internal_static_ws_msg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ws_msg_descriptor,
              new java.lang.String[] { "MsOpInt", });
          internal_static_WsProtoTest_descriptor =
            getDescriptor().getMessageTypes().get(58);
          internal_static_WsProtoTest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_WsProtoTest_descriptor,
              new java.lang.String[] { "OpInt", "ReInt", "OpStr", "OpMsg", "ReMsg", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
